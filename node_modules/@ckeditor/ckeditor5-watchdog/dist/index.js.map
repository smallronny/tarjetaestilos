{"version":3,"sources":["index.js","../src/watchdog.ts","../src/utils/getsubnodes.ts","../src/utils/areconnectedthroughproperties.ts","../src/editorwatchdog.ts","../src/contextwatchdog.ts","../src/actionsrecorder.ts"],"names":["Watchdog","crashes","state","_crashNumberLimit","_now","Date","now","_minimumNonErrorTimePeriod","_boundErrorHandler","_listeners","config","crashNumberLimit","minimumNonErrorTimePeriod","evt","error","reason","Error","_handleError","_restart","destroy","_stopErrorHandling","on","eventName","callback","push","off","filter","cb","_fire","args","callbacks","apply","_startErrorHandling","window","addEventListener","removeEventListener","_shouldReactToError","message","stack","filename","ErrorEvent","undefined","lineno","colno","date","causesRestart","_shouldRestart","is","context","_isErrorComingFromThisItem","length","lastErrorTime","firstMeaningfulErrorTime","averageNonErrorTimePeriod","getSubNodes","head","excludedProperties","Set","nodes","subNodes","nodeIndex","node","has","shouldNodeBeIncluded","add","Symbol","iterator","n","key","type","Object","prototype","toString","call","typeOfNode","_watchdogExcluded","EventTarget","Event","areConnectedThroughProperties","target1","target2","excludedNodes","isObject","subNodes1","subNodes2","structure","EditorWatchdog","_editor","_lifecyclePromise","_throttledSave","_data","_lastDocumentVersion","_elementOrData","_initUsingData","_editables","_config","_excludedProps","Editor","watchdogConfig","throttle","_save","bind","saveInterval","_creator","elementOrData","create","_destructor","editor","_item","setCreator","creator","setDestructor","destructor","Promise","resolve","then","_destroy","catch","err","console","existingRoots","lazyRoots","oldRootsAttributes","rootsAttributes","rootName","rootData","entries","roots","isLoaded","updatedConfig","extraPlugins","_watchdogInitialData","initialData","EditorWatchdogInitPlugin","isElement","keys","values","_cloneEditorConfiguration","model","document","version","_getData","_getEditables","finally","cancel","_setExcludedProperties","props","root","isAttached","plugins","commentsRepository","get","trackChanges","data","markers","commentThreads","JSON","stringify","suggestions","forEach","content","Array","from","getChildren","attributes","getAttributes","_isLoaded","marker","_affectsData","name","rangeJSON","getRange","toJSON","usingOperation","_managedUsingOperations","affectsData","getCommentThreads","skipNotAttached","getSuggestions","editables","getRootNames","editable","ui","getEditableElement","cloneDeepWith","value","init","stop","enqueueChange","isUndoable","writer","_restoreCollaborationData","_restoreEditorData","fire","priority","_createNode","jsonNode","element","createElement","children","child","_appendChild","createText","parsedNodes","parse","parsedAttributes","rootElement","getRoot","setAttribute","insert","markerName","markerOptions","start","end","options","startPosition","createPositionFromPath","path","stickiness","endPosition","range","createRange","addMarker","parsedCommentThreads","parsedSuggestions","commentThread","_removeCommentThread","threadId","id","commentThreadData","channelId","addCommentThread","trackChangesEditing","suggestion","_removeSuggestion","suggestionData","addSuggestionData","mainQueueId","ContextWatchdog","_watchdogs","Map","_watchdogConfig","_context","_contextProps","_actionQueues","ActionQueues","_contextConfig","Context","contextConfig","onEmpty","enqueue","_create","getItem","itemId","watchdog","_getWatchdog","getItemState","itemConfigurationOrItemConfigurations","itemConfigurations","toArray","all","map","item","set","res","rethrowRestartEventOnce","sourceElementOrData","remove","itemIdOrItemIds","itemIds","delete","_onEmptyCallbacks","_queues","_activeActions","onEmptyCallback","queueId","action","isMainAction","awaitedActions","queueWithAction","nonErrorQueue","elementOrArray","isArray","ActionsRecorder","_entries","_frameStack","_errors","_maxEntries","_errorCallback","_filterCallback","_maxEntriesCallback","pluginName","isOfficialPlugin","define","maxEntries","onFilter","onError","onMaxEntries","_maxEntriesDefaultHandler","_tapCommands","_tapOperationApply","_tapModelMethods","_tapModelSelection","_tapComponentFactory","_tapViewDocumentEvents","getEntries","slice","flushEntries","_enterFrame","params","callFrame","timeStamp","toISOString","parentEntry","at","param","serializeValue","before","_buildStateSnapshot","_leaveFrame","result","topFrame","pop","after","_callErrorCallback","clear","isReadOnly","editing","documentVersion","editorReadOnly","editorFocused","view","isFocused","modelSelection","selection","commandName","command","commands","_tapCommand","tapObjectMethod","callContext","operation","baseVersion","methodName","events","_tapFireMethod","eventSource","componentFactory","componentName","componentInstance","executeContext","panelView","buttonView","actionView","emitter","eventNames","eventInfoOrName","includes","observerError","shift","object","tap","originalMethod","for","assign","shouldHandle","visited","WeakSet","jsonData","isPlainObject","isTypeCheckable","string","String","File","Blob","FormData","DataTransfer","ignoreFields","domEvent","serializeDomEvent","target","dataTransfer","types","htmlData","getData","files","val","startsWith","serializedValue","items","_items","event","serialized","serializeDOMTarget","MouseEvent","button","buttons","ctrlKey","shiftKey","altKey","metaKey","KeyboardEvent","code","keyCode","repeat","InputEvent","inputType","isComposing","PointerEvent","isPrimary","Element","tagName","className","Window","Document"],"mappings":"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","file":"index.js.map","sourcesContent":["import { throttle, isElement, cloneDeepWith, isPlainObject } from 'es-toolkit/compat';\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module watchdog/watchdog\n */ /**\n * An abstract watchdog class that handles most of the error handling process and the state of the underlying component.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and how to use it.\n *\n * @internal\n */ class Watchdog {\n    /**\n\t * An array of crashes saved as an object with the following properties:\n\t *\n\t * * `message`: `String`,\n\t * * `stack`: `String`,\n\t * * `date`: `Number`,\n\t * * `filename`: `String | undefined`,\n\t * * `lineno`: `Number | undefined`,\n\t * * `colno`: `Number | undefined`,\n\t */ crashes = [];\n    /**\n\t * Specifies the state of the item watched by the watchdog. The state can be one of the following values:\n\t *\n\t * * `initializing` &ndash; Before the first initialization, and after crashes, before the item is ready.\n\t * * `ready` &ndash; A state when the user can interact with the item.\n\t * * `crashed` &ndash; A state when an error occurs. It quickly changes to `initializing` or `crashedPermanently`\n\t * depending on how many and how frequent errors have been caught recently.\n\t * * `crashedPermanently` &ndash; A state when the watchdog stops reacting to errors and keeps the item it is watching crashed,\n\t * * `destroyed` &ndash; A state when the item is manually destroyed by the user after calling `watchdog.destroy()`.\n\t */ state = 'initializing';\n    /**\n\t * @see module:watchdog/watchdog~WatchdogConfig\n\t */ _crashNumberLimit;\n    /**\n\t * Returns the result of the `Date.now()` call. It can be overridden in tests to mock time as some popular\n\t * approaches like `sinon.useFakeTimers()` do not work well with error handling.\n\t */ _now = Date.now;\n    /**\n\t * @see module:watchdog/watchdog~WatchdogConfig\n\t */ _minimumNonErrorTimePeriod;\n    /**\n\t * Checks if the event error comes from the underlying item and restarts the item.\n\t */ _boundErrorHandler;\n    /**\n\t * A dictionary of event emitter listeners.\n\t */ _listeners;\n    /**\n\t * @param {module:watchdog/watchdog~WatchdogConfig} config The watchdog plugin configuration.\n\t */ constructor(config){\n        this.crashes = [];\n        this._crashNumberLimit = typeof config.crashNumberLimit === 'number' ? config.crashNumberLimit : 3;\n        this._minimumNonErrorTimePeriod = typeof config.minimumNonErrorTimePeriod === 'number' ? config.minimumNonErrorTimePeriod : 5000;\n        this._boundErrorHandler = (evt)=>{\n            // `evt.error` is exposed by EventError while `evt.reason` is available in PromiseRejectionEvent.\n            const error = 'error' in evt ? evt.error : evt.reason;\n            // Note that `evt.reason` might be everything that is in the promise rejection.\n            // Similarly everything that is thrown lands in `evt.error`.\n            if (error instanceof Error) {\n                this._handleError(error, evt);\n            }\n        };\n        this._listeners = {};\n        if (!this._restart) {\n            throw new Error('The Watchdog class was split into the abstract `Watchdog` class and the `EditorWatchdog` class. ' + 'Please, use `EditorWatchdog` if you have used the `Watchdog` class previously.');\n        }\n    }\n    /**\n\t * Destroys the watchdog and releases the resources.\n\t */ destroy() {\n        this._stopErrorHandling();\n        this._listeners = {};\n    }\n    /**\n\t * Starts listening to a specific event name by registering a callback that will be executed\n\t * whenever an event with a given name fires.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param eventName The event name.\n\t * @param callback A callback which will be added to event listeners.\n\t */ on(eventName, callback) {\n        if (!this._listeners[eventName]) {\n            this._listeners[eventName] = [];\n        }\n        this._listeners[eventName].push(callback);\n    }\n    /**\n\t * Stops listening to the specified event name by removing the callback from event listeners.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param eventName The event name.\n\t * @param callback A callback which will be removed from event listeners.\n\t */ off(eventName, callback) {\n        this._listeners[eventName] = this._listeners[eventName].filter((cb)=>cb !== callback);\n    }\n    /**\n\t * Fires an event with a given event name and arguments.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t */ _fire(eventName, ...args) {\n        const callbacks = this._listeners[eventName] || [];\n        for (const callback of callbacks){\n            callback.apply(this, [\n                null,\n                ...args\n            ]);\n        }\n    }\n    /**\n\t * Starts error handling by attaching global error handlers.\n\t */ _startErrorHandling() {\n        window.addEventListener('error', this._boundErrorHandler);\n        window.addEventListener('unhandledrejection', this._boundErrorHandler);\n    }\n    /**\n\t * Stops error handling by detaching global error handlers.\n\t */ _stopErrorHandling() {\n        window.removeEventListener('error', this._boundErrorHandler);\n        window.removeEventListener('unhandledrejection', this._boundErrorHandler);\n    }\n    /**\n\t * Checks if an error comes from the watched item and restarts it.\n\t * It reacts to {@link module:utils/ckeditorerror~CKEditorError `CKEditorError` errors} only.\n\t *\n\t * @fires error\n\t * @param error Error.\n\t * @param evt An error event.\n\t */ _handleError(error, evt) {\n        // @if CK_DEBUG // const err = error as CKEditorError;\n        // @if CK_DEBUG // if ( err.is && err.is( 'CKEditorError' ) && err.context === undefined ) {\n        // @if CK_DEBUG // console.warn( 'The error is missing its context and Watchdog cannot restart the proper item.' );\n        // @if CK_DEBUG // }\n        if (this._shouldReactToError(error)) {\n            this.crashes.push({\n                message: error.message,\n                stack: error.stack,\n                // `evt.filename`, `evt.lineno` and `evt.colno` are available only in ErrorEvent events\n                filename: evt instanceof ErrorEvent ? evt.filename : undefined,\n                lineno: evt instanceof ErrorEvent ? evt.lineno : undefined,\n                colno: evt instanceof ErrorEvent ? evt.colno : undefined,\n                date: this._now()\n            });\n            const causesRestart = this._shouldRestart();\n            this.state = 'crashed';\n            this._fire('stateChange');\n            this._fire('error', {\n                error,\n                causesRestart\n            });\n            if (causesRestart) {\n                this._restart();\n            } else {\n                this.state = 'crashedPermanently';\n                this._fire('stateChange');\n            }\n        }\n    }\n    /**\n\t * Checks whether an error should be handled by the watchdog.\n\t *\n\t * @param error An error that was caught by the error handling process.\n\t */ _shouldReactToError(error) {\n        return error.is && error.is('CKEditorError') && error.context !== undefined && // In some cases the watched item should not be restarted - e.g. during the item initialization.\n        // That's why the `null` was introduced as a correct error context which does cause restarting.\n        error.context !== null && // Do not react to errors if the watchdog is in states other than `ready`.\n        this.state === 'ready' && this._isErrorComingFromThisItem(error);\n    }\n    /**\n\t * Checks if the watchdog should restart the underlying item.\n\t */ _shouldRestart() {\n        if (this.crashes.length <= this._crashNumberLimit) {\n            return true;\n        }\n        const lastErrorTime = this.crashes[this.crashes.length - 1].date;\n        const firstMeaningfulErrorTime = this.crashes[this.crashes.length - 1 - this._crashNumberLimit].date;\n        const averageNonErrorTimePeriod = (lastErrorTime - firstMeaningfulErrorTime) / this._crashNumberLimit;\n        return averageNonErrorTimePeriod > this._minimumNonErrorTimePeriod;\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */ /**\n * @module watchdog/utils/getsubnodes\n */ /**\n * @internal\n */ function getSubNodes(head, excludedProperties = new Set()) {\n    const nodes = [\n        head\n    ];\n    // @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n    // Nodes are stored to prevent infinite looping.\n    const subNodes = new Set();\n    let nodeIndex = 0;\n    while(nodes.length > nodeIndex){\n        // Incrementing the iterator is much faster than changing size of the array with Array.prototype.shift().\n        const node = nodes[nodeIndex++];\n        if (subNodes.has(node) || !shouldNodeBeIncluded(node) || excludedProperties.has(node)) {\n            continue;\n        }\n        subNodes.add(node);\n        // Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n        if (Symbol.iterator in node) {\n            // The custom editor iterators might cause some problems if the editor is crashed.\n            try {\n                for (const n of node){\n                    nodes.push(n);\n                // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n                // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n                // @if CK_DEBUG_WATCHDOG // }\n                }\n            } catch  {\n            // Do not log errors for broken structures\n            // since we are in the error handling process already.\n            }\n        } else {\n            for(const key in node){\n                // We share a reference via the protobuf library within the editors,\n                // hence the shared value should be skipped. Although, it's not a perfect\n                // solution since new places like that might occur in the future.\n                if (key === 'defaultValue') {\n                    continue;\n                }\n                nodes.push(node[key]);\n            // @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n            // @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n            // @if CK_DEBUG_WATCHDOG // }\n            }\n        }\n    }\n    // @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap } as any;\n    return subNodes;\n}\nfunction shouldNodeBeIncluded(node) {\n    const type = Object.prototype.toString.call(node);\n    const typeOfNode = typeof node;\n    return !(typeOfNode === 'number' || typeOfNode === 'boolean' || typeOfNode === 'string' || typeOfNode === 'symbol' || typeOfNode === 'function' || type === '[object Date]' || type === '[object RegExp]' || type === '[object Module]' || node === undefined || node === null || // This flag is meant to exclude singletons shared across editor instances. So when an error is thrown in one editor,\n    // the other editors connected through the reference to the same singleton are not restarted. This is a temporary workaround\n    // until a better solution is found.\n    // More in https://github.com/ckeditor/ckeditor5/issues/12292.\n    node._watchdogExcluded || // Skip native DOM objects, e.g. Window, nodes, events, etc.\n    node instanceof EventTarget || node instanceof Event);\n}\n\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @internal\n */ function areConnectedThroughProperties(target1, target2, excludedNodes = new Set()) {\n    if (target1 === target2 && isObject(target1)) {\n        return true;\n    }\n    // @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n    const subNodes1 = getSubNodes(target1, excludedNodes);\n    const subNodes2 = getSubNodes(target2, excludedNodes);\n    for (const node of subNodes1){\n        if (subNodes2.has(node)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isObject(structure) {\n    return typeof structure === 'object' && structure !== null;\n}\n\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n */ class EditorWatchdog extends Watchdog {\n    /**\n\t * The current editor instance.\n\t */ _editor = null;\n    /**\n\t * A promise associated with the life cycle of the editor (creation or destruction processes).\n\t *\n\t * It is used to prevent the initialization of the editor if the previous instance has not been destroyed yet,\n\t * and conversely, to prevent the destruction of the editor if it has not been initialized.\n\t */ _lifecyclePromise = null;\n    /**\n\t * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n\t * unless a new action happens in the meantime.\n\t */ _throttledSave;\n    /**\n\t * The latest saved editor data represented as a root name -> root data object.\n\t */ _data;\n    /**\n\t * The last document version.\n\t */ _lastDocumentVersion;\n    /**\n\t * The editor source element or data.\n\t */ _elementOrData;\n    /**\n\t * Specifies whether the editor was initialized using document data (`true`) or HTML elements (`false`).\n\t */ _initUsingData = true;\n    /**\n\t * The latest record of the editor editable elements. Used to restart the editor.\n\t */ _editables = {};\n    /**\n\t * The editor configuration.\n\t */ _config;\n    _excludedProps;\n    /**\n\t * @param Editor The editor class.\n\t * @param watchdogConfig The watchdog plugin configuration.\n\t */ constructor(Editor, watchdogConfig = {}){\n        super(watchdogConfig);\n        // this._editorClass = Editor;\n        this._throttledSave = throttle(this._save.bind(this), typeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000);\n        // Set default creator and destructor functions:\n        if (Editor) {\n            this._creator = (elementOrData, config)=>Editor.create(elementOrData, config);\n        }\n        this._destructor = (editor)=>editor.destroy();\n    }\n    /**\n\t * The current editor instance.\n\t */ get editor() {\n        return this._editor;\n    }\n    /**\n\t * @internal\n\t */ get _item() {\n        return this._editor;\n    }\n    /**\n\t * Sets the function that is responsible for the editor creation.\n\t * It expects a function that should return a promise.\n\t *\n\t * ```ts\n\t * watchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n\t * ```\n\t */ setCreator(creator) {\n        this._creator = creator;\n    }\n    /**\n\t * Sets the function that is responsible for the editor destruction.\n\t * Overrides the default destruction function, which destroys only the editor instance.\n\t * It expects a function that should return a promise or `undefined`.\n\t *\n\t * ```ts\n\t * watchdog.setDestructor( editor => {\n\t * \t// Do something before the editor is destroyed.\n\t *\n\t * \treturn editor\n\t * \t\t.destroy()\n\t * \t\t.then( () => {\n\t * \t\t\t// Do something after the editor is destroyed.\n\t * \t\t} );\n\t * } );\n\t * ```\n\t */ setDestructor(destructor) {\n        this._destructor = destructor;\n    }\n    /**\n\t * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n\t * the state to `initializing`.\n\t *\n\t * @fires restart\n\t */ _restart() {\n        return Promise.resolve().then(()=>{\n            this.state = 'initializing';\n            this._fire('stateChange');\n            return this._destroy();\n        }).catch((err)=>{\n            console.error('An error happened during the editor destroying.', err);\n        }).then(()=>{\n            // Pre-process some data from the original editor config.\n            // Our goal here is to make sure that the restarted editor will be reinitialized with correct set of roots.\n            // We are not interested in any data set in config or in `.create()` first parameter. It will be replaced anyway.\n            // But we need to set them correctly to make sure that proper roots are created.\n            //\n            // Since a different set of roots will be created, `lazyRoots` and `rootsAttributes` properties must be managed too.\n            // Keys are root names, values are ''. Used when the editor was initialized by setting the first parameter to document data.\n            const existingRoots = {};\n            // Keeps lazy roots. They may be different when compared to initial config if some of the roots were loaded.\n            const lazyRoots = [];\n            // Roots attributes from the old config. Will be referred when setting new attributes.\n            const oldRootsAttributes = this._config.rootsAttributes || {};\n            // New attributes to be set. Is filled only for roots that still exist in the document.\n            const rootsAttributes = {};\n            // Traverse through the roots saved when the editor crashed and set up the discussed values.\n            for (const [rootName, rootData] of Object.entries(this._data.roots)){\n                if (rootData.isLoaded) {\n                    existingRoots[rootName] = '';\n                    rootsAttributes[rootName] = oldRootsAttributes[rootName] || {};\n                } else {\n                    lazyRoots.push(rootName);\n                }\n            }\n            const updatedConfig = {\n                ...this._config,\n                extraPlugins: this._config.extraPlugins || [],\n                lazyRoots,\n                rootsAttributes,\n                _watchdogInitialData: this._data\n            };\n            // Delete `initialData` as it is not needed. Data will be set by the watchdog based on `_watchdogInitialData`.\n            // First parameter of the editor `.create()` will be used to set up initial roots.\n            delete updatedConfig.initialData;\n            updatedConfig.extraPlugins.push(EditorWatchdogInitPlugin);\n            if (this._initUsingData) {\n                return this.create(existingRoots, updatedConfig, updatedConfig.context);\n            } else {\n                // Set correct editables to make sure that proper roots are created and linked with DOM elements.\n                // No need to set initial data, as it would be discarded anyway.\n                //\n                // If one element was initially set in `elementOrData`, then use that original element to restart the editor.\n                // This is for compatibility purposes with single-root editor types.\n                if (isElement(this._elementOrData)) {\n                    return this.create(this._elementOrData, updatedConfig, updatedConfig.context);\n                } else {\n                    return this.create(this._editables, updatedConfig, updatedConfig.context);\n                }\n            }\n        }).then(()=>{\n            this._fire('restart');\n        });\n    }\n    /**\n\t * Creates the editor instance and keeps it running, using the defined creator and destructor.\n\t *\n\t * @param elementOrData The editor source element or the editor data.\n\t * @param config The editor configuration.\n\t * @param context A context for the editor.\n\t */ create(elementOrData = this._elementOrData, config = this._config, context) {\n        this._lifecyclePromise = Promise.resolve(this._lifecyclePromise).then(()=>{\n            super._startErrorHandling();\n            this._elementOrData = elementOrData;\n            // Use document data in the first parameter of the editor `.create()` call only if it was used like this originally.\n            // Use document data if a string or object with strings was passed.\n            this._initUsingData = typeof elementOrData == 'string' || Object.keys(elementOrData).length > 0 && typeof Object.values(elementOrData)[0] == 'string';\n            // Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n            // when an error occurs in one of these editors, the watchdog will restart all of them.\n            this._config = this._cloneEditorConfiguration(config) || {};\n            this._config.context = context;\n            return this._creator(elementOrData, this._config);\n        }).then((editor)=>{\n            this._editor = editor;\n            editor.model.document.on('change:data', this._throttledSave);\n            this._lastDocumentVersion = editor.model.document.version;\n            this._data = this._getData();\n            if (!this._initUsingData) {\n                this._editables = this._getEditables();\n            }\n            this.state = 'ready';\n            this._fire('stateChange');\n        }).finally(()=>{\n            this._lifecyclePromise = null;\n        });\n        return this._lifecyclePromise;\n    }\n    /**\n\t * Destroys the watchdog and the current editor instance. It fires the callback\n\t * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n\t * It also sets the state to `destroyed`.\n\t */ destroy() {\n        this._lifecyclePromise = Promise.resolve(this._lifecyclePromise).then(()=>{\n            this.state = 'destroyed';\n            this._fire('stateChange');\n            super.destroy();\n            return this._destroy();\n        }).finally(()=>{\n            this._lifecyclePromise = null;\n        });\n        return this._lifecyclePromise;\n    }\n    _destroy() {\n        return Promise.resolve().then(()=>{\n            this._stopErrorHandling();\n            this._throttledSave.cancel();\n            const editor = this._editor;\n            this._editor = null;\n            // Remove the `change:data` listener before destroying the editor.\n            // Incorrectly written plugins may trigger firing `change:data` events during the editor destruction phase\n            // causing the watchdog to call `editor.getData()` when some parts of editor are already destroyed.\n            editor.model.document.off('change:data', this._throttledSave);\n            return this._destructor(editor);\n        });\n    }\n    /**\n\t * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n\t * the moment of the crash.\n\t */ _save() {\n        const version = this._editor.model.document.version;\n        try {\n            this._data = this._getData();\n            if (!this._initUsingData) {\n                this._editables = this._getEditables();\n            }\n            this._lastDocumentVersion = version;\n        } catch (err) {\n            console.error(err, 'An error happened during restoring editor data. ' + 'Editor will be restored from the previously saved data.');\n        }\n    }\n    /**\n\t * @internal\n\t */ _setExcludedProperties(props) {\n        this._excludedProps = props;\n    }\n    /**\n\t * Gets all data that is required to reinitialize editor instance.\n\t */ _getData() {\n        const editor = this._editor;\n        const roots = editor.model.document.roots.filter((root)=>root.isAttached() && root.rootName != '$graveyard');\n        const { plugins } = editor;\n        // `as any` to avoid linking from external private repo.\n        const commentsRepository = plugins.has('CommentsRepository') && plugins.get('CommentsRepository');\n        const trackChanges = plugins.has('TrackChanges') && plugins.get('TrackChanges');\n        const data = {\n            roots: {},\n            markers: {},\n            commentThreads: JSON.stringify([]),\n            suggestions: JSON.stringify([])\n        };\n        roots.forEach((root)=>{\n            data.roots[root.rootName] = {\n                content: JSON.stringify(Array.from(root.getChildren())),\n                attributes: JSON.stringify(Array.from(root.getAttributes())),\n                isLoaded: root._isLoaded\n            };\n        });\n        for (const marker of editor.model.markers){\n            if (!marker._affectsData) {\n                continue;\n            }\n            data.markers[marker.name] = {\n                rangeJSON: marker.getRange().toJSON(),\n                usingOperation: marker._managedUsingOperations,\n                affectsData: marker._affectsData\n            };\n        }\n        if (commentsRepository) {\n            data.commentThreads = JSON.stringify(commentsRepository.getCommentThreads({\n                toJSON: true,\n                skipNotAttached: true\n            }));\n        }\n        if (trackChanges) {\n            data.suggestions = JSON.stringify(trackChanges.getSuggestions({\n                toJSON: true,\n                skipNotAttached: true\n            }));\n        }\n        return data;\n    }\n    /**\n\t * For each attached model root, returns its HTML editable element (if available).\n\t */ _getEditables() {\n        const editables = {};\n        for (const rootName of this.editor.model.document.getRootNames()){\n            const editable = this.editor.ui.getEditableElement(rootName);\n            if (editable) {\n                editables[rootName] = editable;\n            }\n        }\n        return editables;\n    }\n    /**\n\t * Traverses the error context and the current editor to find out whether these structures are connected\n\t * to each other via properties.\n\t *\n\t * @internal\n\t */ _isErrorComingFromThisItem(error) {\n        return areConnectedThroughProperties(this._editor, error.context, this._excludedProps);\n    }\n    /**\n\t * Clones the editor configuration.\n\t */ _cloneEditorConfiguration(config) {\n        return cloneDeepWith(config, (value, key)=>{\n            // Leave DOM references.\n            if (isElement(value)) {\n                return value;\n            }\n            if (key === 'context') {\n                return value;\n            }\n        });\n    }\n}\n/**\n * Internal plugin that is used to stop the default editor initialization and restoring the editor state\n * based on the `editor.config._watchdogInitialData` data.\n */ class EditorWatchdogInitPlugin {\n    editor;\n    _data;\n    constructor(editor){\n        this.editor = editor;\n        this._data = editor.config.get('_watchdogInitialData');\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        // Stops the default editor initialization and use the saved data to restore the editor state.\n        // Some of data could not be initialize as a config properties. It is important to keep the data\n        // in the same form as it was before the restarting.\n        this.editor.data.on('init', (evt)=>{\n            evt.stop();\n            this.editor.model.enqueueChange({\n                isUndoable: false\n            }, (writer)=>{\n                this._restoreCollaborationData();\n                this._restoreEditorData(writer);\n            });\n            this.editor.data.fire('ready');\n        // Keep priority `'high' - 1` to be sure that RTC initialization will be first.\n        }, {\n            priority: 1000 - 1\n        });\n    }\n    /**\n\t * Creates a model node (element or text) based on provided JSON.\n\t */ _createNode(writer, jsonNode) {\n        if ('name' in jsonNode) {\n            // If child has name property, it is an Element.\n            const element = writer.createElement(jsonNode.name, jsonNode.attributes);\n            if (jsonNode.children) {\n                for (const child of jsonNode.children){\n                    element._appendChild(this._createNode(writer, child));\n                }\n            }\n            return element;\n        } else {\n            // Otherwise, it is a Text node.\n            return writer.createText(jsonNode.data, jsonNode.attributes);\n        }\n    }\n    /**\n\t * Restores the editor by setting the document data, roots attributes and markers.\n\t */ _restoreEditorData(writer) {\n        const editor = this.editor;\n        Object.entries(this._data.roots).forEach(([rootName, { content, attributes }])=>{\n            const parsedNodes = JSON.parse(content);\n            const parsedAttributes = JSON.parse(attributes);\n            const rootElement = editor.model.document.getRoot(rootName);\n            for (const [key, value] of parsedAttributes){\n                writer.setAttribute(key, value, rootElement);\n            }\n            for (const child of parsedNodes){\n                const node = this._createNode(writer, child);\n                writer.insert(node, rootElement, 'end');\n            }\n        });\n        Object.entries(this._data.markers).forEach(([markerName, markerOptions])=>{\n            const { document } = editor.model;\n            const { rangeJSON: { start, end }, ...options } = markerOptions;\n            const root = document.getRoot(start.root);\n            const startPosition = writer.createPositionFromPath(root, start.path, start.stickiness);\n            const endPosition = writer.createPositionFromPath(root, end.path, end.stickiness);\n            const range = writer.createRange(startPosition, endPosition);\n            writer.addMarker(markerName, {\n                range,\n                ...options\n            });\n        });\n    }\n    /**\n\t * Restores the editor collaboration data - comment threads and suggestions.\n\t */ _restoreCollaborationData() {\n        // `as any` to avoid linking from external private repo.\n        const parsedCommentThreads = JSON.parse(this._data.commentThreads);\n        const parsedSuggestions = JSON.parse(this._data.suggestions);\n        if (this.editor.plugins.has('CommentsRepository')) {\n            const commentsRepository = this.editor.plugins.get('CommentsRepository');\n            // First, remove the existing comments that were created by integration plugins during initialization.\n            // These comments may be outdated, and new instances will be created in the next step based on the saved data.\n            for (const commentThread of commentsRepository.getCommentThreads()){\n                // Use the internal API since it removes the comment thread directly and does not trigger events\n                // that could cause side effects, such as removing markers.\n                commentsRepository._removeCommentThread({\n                    threadId: commentThread.id\n                });\n            }\n            parsedCommentThreads.forEach((commentThreadData)=>{\n                const channelId = this.editor.config.get('collaboration.channelId');\n                const commentsRepository = this.editor.plugins.get('CommentsRepository');\n                commentsRepository.addCommentThread({\n                    channelId,\n                    ...commentThreadData\n                });\n            });\n        }\n        if (this.editor.plugins.has('TrackChangesEditing')) {\n            const trackChangesEditing = this.editor.plugins.get('TrackChangesEditing');\n            // First, remove the existing suggestions that were created by integration plugins during initialization.\n            // These suggestions may be outdated, and new instances will be created in the next step based on the saved data.\n            for (const suggestion of trackChangesEditing.getSuggestions()){\n                trackChangesEditing._removeSuggestion(suggestion);\n            }\n            parsedSuggestions.forEach((suggestionData)=>{\n                trackChangesEditing.addSuggestionData(suggestionData);\n            });\n        }\n    }\n}\n\nconst mainQueueId = Symbol('MainQueueId');\n/**\n * A watchdog for the {@link module:core/context~Context} class.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n */ class ContextWatchdog extends Watchdog {\n    /**\n\t * A map of internal watchdogs for added items.\n\t */ _watchdogs = new Map();\n    /**\n\t * The watchdog configuration.\n\t */ _watchdogConfig;\n    /**\n\t * The current context instance.\n\t */ _context = null;\n    /**\n\t * Context properties (nodes/references) that are gathered during the initial context creation\n\t * and are used to distinguish the origin of an error.\n\t */ _contextProps = new Set();\n    /**\n\t * An action queue, which is used to handle async functions queuing.\n\t */ _actionQueues = new ActionQueues();\n    /**\n\t * The configuration for the {@link module:core/context~Context}.\n\t */ _contextConfig;\n    /**\n\t * The watched item.\n\t */ _item;\n    /**\n\t * The context watchdog class constructor.\n\t *\n\t * ```ts\n\t * const watchdog = new ContextWatchdog( Context );\n\t *\n\t * await watchdog.create( contextConfiguration );\n\t *\n\t * await watchdog.add( item );\n\t * ```\n\t *\n\t * See the {@glink features/watchdog Watchdog feature guide} to learn more how to use this feature.\n\t *\n\t * @param Context The {@link module:core/context~Context} class.\n\t * @param watchdogConfig The watchdog configuration.\n\t */ constructor(Context, watchdogConfig = {}){\n        super(watchdogConfig);\n        this._watchdogConfig = watchdogConfig;\n        // Default creator and destructor.\n        this._creator = (contextConfig)=>Context.create(contextConfig);\n        this._destructor = (context)=>context.destroy();\n        this._actionQueues.onEmpty(()=>{\n            if (this.state === 'initializing') {\n                this.state = 'ready';\n                this._fire('stateChange');\n            }\n        });\n    }\n    /**\n\t * Sets the function that is responsible for the context creation.\n\t * It expects a function that should return a promise (or `undefined`).\n\t *\n\t * ```ts\n\t * watchdog.setCreator( config => Context.create( config ) );\n\t * ```\n\t */ setCreator(creator) {\n        this._creator = creator;\n    }\n    /**\n\t * Sets the function that is responsible for the context destruction.\n\t * Overrides the default destruction function, which destroys only the context instance.\n\t * It expects a function that should return a promise (or `undefined`).\n\t *\n\t * ```ts\n\t * watchdog.setDestructor( context => {\n\t * \t// Do something before the context is destroyed.\n\t *\n\t * \treturn context\n\t * \t\t.destroy()\n\t * \t\t.then( () => {\n\t * \t\t\t// Do something after the context is destroyed.\n\t * \t\t} );\n\t * } );\n\t * ```\n\t */ setDestructor(destructor) {\n        this._destructor = destructor;\n    }\n    /**\n\t * The context instance. Keep in mind that this property might be changed when the context watchdog restarts,\n\t * so do not keep this instance internally. Always operate on the `ContextWatchdog#context` property.\n\t */ get context() {\n        return this._context;\n    }\n    /**\n\t * Initializes the context watchdog. Once it is created, the watchdog takes care about\n\t * recreating the context and the provided items, and starts the error handling mechanism.\n\t *\n\t * ```ts\n\t * await watchdog.create( {\n\t * \tplugins: []\n\t * } );\n\t * ```\n\t *\n\t * @param contextConfig The context configuration. See {@link module:core/context~Context}.\n\t */ create(contextConfig = {}) {\n        return this._actionQueues.enqueue(mainQueueId, ()=>{\n            this._contextConfig = contextConfig;\n            return this._create();\n        });\n    }\n    /**\n\t * Returns an item instance with the given `itemId`.\n\t *\n\t * ```ts\n\t * const editor1 = watchdog.getItem( 'editor1' );\n\t * ```\n\t *\n\t * @param itemId The item ID.\n\t * @returns The item instance or `undefined` if an item with a given ID has not been found.\n\t */ getItem(itemId) {\n        const watchdog = this._getWatchdog(itemId);\n        return watchdog._item;\n    }\n    /**\n\t * Gets the state of the given item. See {@link #state} for a list of available states.\n\t *\n\t * ```ts\n\t * const editor1State = watchdog.getItemState( 'editor1' );\n\t * ```\n\t *\n\t * @param itemId Item ID.\n\t * @returns The state of the item.\n\t */ getItemState(itemId) {\n        const watchdog = this._getWatchdog(itemId);\n        return watchdog.state;\n    }\n    /**\n\t * Adds items to the watchdog. Once created, instances of these items will be available using the {@link #getItem} method.\n\t *\n\t * Items can be passed together as an array of objects:\n\t *\n\t * ```ts\n\t * await watchdog.add( [ {\n\t * \tid: 'editor1',\n\t * \ttype: 'editor',\n\t * \tsourceElementOrData: document.querySelector( '#editor' ),\n\t * \tconfig: {\n\t * \t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t * \t\ttoolbar: [ 'bold', 'italic', 'alignment' ]\n\t * \t},\n\t * \tcreator: ( element, config ) => ClassicEditor.create( element, config )\n\t * } ] );\n\t * ```\n\t *\n\t * Or one by one as objects:\n\t *\n\t * ```ts\n\t * await watchdog.add( {\n\t * \tid: 'editor1',\n\t * \ttype: 'editor',\n\t * \tsourceElementOrData: document.querySelector( '#editor' ),\n\t * \tconfig: {\n\t * \t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t * \t\ttoolbar: [ 'bold', 'italic', 'alignment' ]\n\t * \t},\n\t * \tcreator: ( element, config ) => ClassicEditor.create( element, config )\n\t * ] );\n\t * ```\n\t *\n\t * Then an instance can be retrieved using the {@link #getItem} method:\n\t *\n\t * ```ts\n\t * const editor1 = watchdog.getItem( 'editor1' );\n\t * ```\n\t *\n\t * Note that this method can be called multiple times, but for performance reasons it is better\n\t * to pass all items together.\n\t *\n\t * @param itemConfigurationOrItemConfigurations An item configuration object or an array of item configurations.\n\t */ add(itemConfigurationOrItemConfigurations) {\n        const itemConfigurations = toArray(itemConfigurationOrItemConfigurations);\n        return Promise.all(itemConfigurations.map((item)=>{\n            return this._actionQueues.enqueue(item.id, ()=>{\n                if (this.state === 'destroyed') {\n                    throw new Error('Cannot add items to destroyed watchdog.');\n                }\n                if (!this._context) {\n                    throw new Error('Context was not created yet. You should call the `ContextWatchdog#create()` method first.');\n                }\n                let watchdog;\n                if (this._watchdogs.has(item.id)) {\n                    throw new Error(`Item with the given id is already added: '${item.id}'.`);\n                }\n                if (item.type === 'editor') {\n                    watchdog = new EditorWatchdog(null, this._watchdogConfig);\n                    watchdog.setCreator(item.creator);\n                    watchdog._setExcludedProperties(this._contextProps);\n                    if (item.destructor) {\n                        watchdog.setDestructor(item.destructor);\n                    }\n                    this._watchdogs.set(item.id, watchdog);\n                    // Enqueue the internal watchdog errors within the main queue.\n                    // And propagate the internal `error` events as `itemError` event.\n                    watchdog.on('error', (evt, { error, causesRestart })=>{\n                        this._fire('itemError', {\n                            itemId: item.id,\n                            error\n                        });\n                        // Do not enqueue the item restart action if the item will not restart.\n                        if (!causesRestart) {\n                            return;\n                        }\n                        this._actionQueues.enqueue(item.id, ()=>new Promise((res)=>{\n                                const rethrowRestartEventOnce = ()=>{\n                                    watchdog.off('restart', rethrowRestartEventOnce);\n                                    this._fire('itemRestart', {\n                                        itemId: item.id\n                                    });\n                                    res();\n                                };\n                                watchdog.on('restart', rethrowRestartEventOnce);\n                            }));\n                    });\n                    return watchdog.create(item.sourceElementOrData, item.config, this._context);\n                } else {\n                    throw new Error(`Not supported item type: '${item.type}'.`);\n                }\n            });\n        }));\n    }\n    /**\n\t * Removes and destroys item(s) with given ID(s).\n\t *\n\t * ```ts\n\t * await watchdog.remove( 'editor1' );\n\t * ```\n\t *\n\t * Or\n\t *\n\t * ```ts\n\t * await watchdog.remove( [ 'editor1', 'editor2' ] );\n\t * ```\n\t *\n\t * @param itemIdOrItemIds Item ID or an array of item IDs.\n\t */ remove(itemIdOrItemIds) {\n        const itemIds = toArray(itemIdOrItemIds);\n        return Promise.all(itemIds.map((itemId)=>{\n            return this._actionQueues.enqueue(itemId, ()=>{\n                const watchdog = this._getWatchdog(itemId);\n                this._watchdogs.delete(itemId);\n                return watchdog.destroy();\n            });\n        }));\n    }\n    /**\n\t * Destroys the context watchdog and all added items.\n\t * Once the context watchdog is destroyed, new items cannot be added.\n\t *\n\t * ```ts\n\t * await watchdog.destroy();\n\t * ```\n\t */ destroy() {\n        return this._actionQueues.enqueue(mainQueueId, ()=>{\n            this.state = 'destroyed';\n            this._fire('stateChange');\n            super.destroy();\n            return this._destroy();\n        });\n    }\n    /**\n\t * Restarts the context watchdog.\n\t */ _restart() {\n        return this._actionQueues.enqueue(mainQueueId, ()=>{\n            this.state = 'initializing';\n            this._fire('stateChange');\n            return this._destroy().catch((err)=>{\n                console.error('An error happened during destroying the context or items.', err);\n            }).then(()=>this._create()).then(()=>this._fire('restart'));\n        });\n    }\n    /**\n\t * Initializes the context watchdog.\n\t */ _create() {\n        return Promise.resolve().then(()=>{\n            this._startErrorHandling();\n            return this._creator(this._contextConfig);\n        }).then((context)=>{\n            this._context = context;\n            this._contextProps = getSubNodes(this._context);\n            return Promise.all(Array.from(this._watchdogs.values()).map((watchdog)=>{\n                watchdog._setExcludedProperties(this._contextProps);\n                return watchdog.create(undefined, undefined, this._context);\n            }));\n        });\n    }\n    /**\n\t * Destroys the context instance and all added items.\n\t */ _destroy() {\n        return Promise.resolve().then(()=>{\n            this._stopErrorHandling();\n            const context = this._context;\n            this._context = null;\n            this._contextProps = new Set();\n            return Promise.all(Array.from(this._watchdogs.values()).map((watchdog)=>watchdog.destroy()))// Context destructor destroys each editor.\n            .then(()=>this._destructor(context));\n        });\n    }\n    /**\n\t * Returns the watchdog for a given item ID.\n\t *\n\t * @param itemId Item ID.\n\t */ _getWatchdog(itemId) {\n        const watchdog = this._watchdogs.get(itemId);\n        if (!watchdog) {\n            throw new Error(`Item with the given id was not registered: ${itemId}.`);\n        }\n        return watchdog;\n    }\n    /**\n\t * Checks whether an error comes from the context instance and not from the item instances.\n\t *\n\t * @internal\n\t */ _isErrorComingFromThisItem(error) {\n        for (const watchdog of this._watchdogs.values()){\n            if (watchdog._isErrorComingFromThisItem(error)) {\n                return false;\n            }\n        }\n        return areConnectedThroughProperties(this._context, error.context);\n    }\n}\n/**\n * Manager of action queues that allows queuing async functions.\n */ class ActionQueues {\n    _onEmptyCallbacks = [];\n    _queues = new Map();\n    _activeActions = 0;\n    /**\n\t * Used to register callbacks that will be run when the queue becomes empty.\n\t *\n\t * @param onEmptyCallback A callback that will be run whenever the queue becomes empty.\n\t */ onEmpty(onEmptyCallback) {\n        this._onEmptyCallbacks.push(onEmptyCallback);\n    }\n    /**\n\t * It adds asynchronous actions (functions) to the proper queue and runs them one by one.\n\t *\n\t * @param queueId The action queue ID.\n\t * @param action A function that should be enqueued.\n\t */ enqueue(queueId, action) {\n        const isMainAction = queueId === mainQueueId;\n        this._activeActions++;\n        if (!this._queues.get(queueId)) {\n            this._queues.set(queueId, Promise.resolve());\n        }\n        // List all sources of actions that the current action needs to await for.\n        // For the main action wait for all other actions.\n        // For the item action wait only for the item queue and the main queue.\n        const awaitedActions = isMainAction ? Promise.all(this._queues.values()) : Promise.all([\n            this._queues.get(mainQueueId),\n            this._queues.get(queueId)\n        ]);\n        const queueWithAction = awaitedActions.then(action);\n        // Catch all errors in the main queue to stack promises even if an error occurred in the past.\n        const nonErrorQueue = queueWithAction.catch(()=>{});\n        this._queues.set(queueId, nonErrorQueue);\n        return queueWithAction.finally(()=>{\n            this._activeActions--;\n            if (this._queues.get(queueId) === nonErrorQueue && this._activeActions === 0) {\n                this._onEmptyCallbacks.forEach((cb)=>cb());\n            }\n        });\n    }\n}\n/**\n * Transforms any value to an array. If the provided value is already an array, it is returned unchanged.\n *\n * @param elementOrArray The value to transform to an array.\n * @returns An array created from data.\n */ function toArray(elementOrArray) {\n    return Array.isArray(elementOrArray) ? elementOrArray : [\n        elementOrArray\n    ];\n}\n\n/**\n * A plugin that records user actions and editor state changes for debugging purposes. It tracks commands execution, model operations,\n * UI interactions, and document events. It just collects data locally, and does not send it anywhere, integrator is responsible\n * for gathering data from this plugin for further processing.\n *\n * **Important! `ActionsRecorder` is an experimental feature, and may become deprecated.**\n *\n * By default, plugin stores latest 1000 action entries. Integrator can register an `onError` callback to collect those entries\n * in case of exception. Integrator should augment this data with application specific data such as page-id or session-id,\n * depending on the application. Augmented data should be processed by the integrator, for example integrator should send it\n * to some data collecting endpoint for later analysis.\n *\n * Example:\n *\n * ```ts\n * \tClassicEditor\n * \t\t.create( editorElement, {\n * \t\t\tplugins: [ ActionsRecorder, ... ],\n * \t\t\tactionsRecorder: {\n * \t\t\t\tmaxEntries: 1000, // This is the default value and could be adjusted.\n *\n * \t\t\t\tonError( error, entries ) {\n * \t\t\t\t\tconsole.error( 'ActionsRecorder - Error detected:', error );\n * \t\t\t\t\tconsole.warn( 'Actions recorded before error:', entries );\n *\n * \t\t\t\t\tthis.flushEntries();\n *\n * \t\t\t\t\t// Integrator should send and store the entries. The error is already in the last entry in serializable form.\n * \t\t\t\t}\n * \t\t\t}\n * \t\t} )\n * \t\t.then( ... )\n * \t\t.catch( ... );\n * ```\n *\n * Alternatively integrator could continuously collect actions in batches and send them to theirs endpoint for later analysis:\n *\n * ```ts\n * \tClassicEditor\n * \t\t.create( editorElement, {\n * \t\t\tplugins: [ ActionsRecorder, ... ],\n * \t\t\tactionsRecorder: {\n * \t\t\t\tmaxEntries: 50, // This is the batch size.\n *\n * \t\t\t\tonMaxEntries() {\n * \t\t\t\t\tconst entries = this.getEntries();\n *\n * \t\t\t\t\tthis.flushEntries();\n *\n * \t\t\t\t\tconsole.log( 'ActionsRecorder - Batch of entries:', entries );\n *\n * \t\t\t\t\t// Integrator should send and store the entries.\n * \t\t\t\t},\n *\n * \t\t\t\tonError( error, entries ) {\n * \t\t\t\t\tconsole.error( 'ActionsRecorder - Error detected:', error );\n * \t\t\t\t\tconsole.warn( 'Actions recorded before error:', entries );\n *\n * \t\t\t\t\tthis.flushEntries();\n *\n * \t\t\t\t\t// Integrator should send and store the entries. The error is already in the last entry in serializable form.\n * \t\t\t\t}\n * \t\t\t}\n * \t\t} )\n * \t\t.then( ... )\n * \t\t.catch( ... );\n * ```\n *\n * See {@link module:watchdog/actionsrecorderconfig~ActionsRecorderConfig plugin configuration} for more details.\n *\n */ class ActionsRecorder {\n    /**\n\t * The editor instance.\n\t */ editor;\n    /**\n\t * Array storing all recorded action entries with their context and state snapshots.\n\t */ _entries = [];\n    /**\n\t * Stack tracking nested action frames to maintain call hierarchy.\n\t */ _frameStack = [];\n    /**\n\t * Set of already reported errors used to notify only once for each error (not on every try-catch nested block).\n\t */ _errors = new Set();\n    /**\n\t * Maximum number of action entries to keep in memory.\n\t */ _maxEntries;\n    /**\n\t * Error callback.\n\t */ _errorCallback;\n    /**\n\t * Filter function to determine which entries should be stored.\n\t */ _filterCallback;\n    /**\n\t * Callback triggered every time count of recorded entries reaches maxEntries.\n\t */ _maxEntriesCallback;\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'ActionsRecorder';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        this.editor = editor;\n        editor.config.define('actionsRecorder.maxEntries', 1000);\n        const config = editor.config.get('actionsRecorder');\n        this._maxEntries = config.maxEntries;\n        this._filterCallback = config.onFilter;\n        this._errorCallback = config.onError;\n        this._maxEntriesCallback = config.onMaxEntries || this._maxEntriesDefaultHandler;\n        this._tapCommands();\n        this._tapOperationApply();\n        this._tapModelMethods();\n        this._tapModelSelection();\n        this._tapComponentFactory();\n        this._tapViewDocumentEvents();\n    }\n    /**\n\t * Returns all recorded action entries.\n\t */ getEntries() {\n        // Return a shallow copy instead of reference as this array could be modified.\n        return this._entries.slice();\n    }\n    /**\n\t * Flushes all recorded entries.\n\t */ flushEntries() {\n        this._entries = [];\n    }\n    /**\n\t * Creates a new action frame and adds it to the recording stack.\n\t *\n\t * @param action The name/type of the action being recorded.\n\t * @param params Optional parameters associated with the event.\n\t * @returns The created call frame object.\n\t */ _enterFrame(action, params) {\n        const callFrame = {\n            timeStamp: new Date().toISOString(),\n            ...this._frameStack.length && {\n                parentEntry: this._frameStack.at(-1)\n            },\n            action,\n            params: params?.map((param)=>serializeValue(param)),\n            before: this._buildStateSnapshot()\n        };\n        // Apply filter if configured, only add to entries if filter passes.\n        if (!this._filterCallback || this._filterCallback(callFrame, this._entries)) {\n            // Add the call frame to the entries.\n            this._entries.push(callFrame);\n        }\n        this._frameStack.push(callFrame);\n        return callFrame;\n    }\n    /**\n\t * Closes an action frame and records its final state and results.\n\t *\n\t * @param callFrame The call frame to close.\n\t * @param result Optional result value from the action.\n\t * @param error Optional error that occurred during the action.\n\t */ _leaveFrame(callFrame, result, error) {\n        const topFrame = this._frameStack.pop();\n        // Handle scenario when the stack has been cleared in the meantime\n        // or the callFrame is not the top frame.\n        if (!topFrame || topFrame !== callFrame) {\n            return;\n        }\n        if (result !== undefined) {\n            topFrame.result = serializeValue(result);\n        }\n        if (error) {\n            topFrame.error = serializeValue(error);\n        }\n        topFrame.after = this._buildStateSnapshot();\n        if (error) {\n            this._callErrorCallback(error);\n        }\n        if (this._frameStack.length == 0) {\n            this._errors.clear();\n        }\n        // Enforce max entries limit after leaving the frame so that complete entry is provided.\n        if (this._entries.length >= this._maxEntries) {\n            this._maxEntriesCallback();\n        }\n    }\n    /**\n\t * Builds a snapshot of the current editor state including document version,\n\t * read-only status, focus state, and model selection.\n\t *\n\t * @returns An object containing the current editor state snapshot.\n\t */ _buildStateSnapshot() {\n        const { model, isReadOnly, editing } = this.editor;\n        return {\n            documentVersion: model.document.version,\n            editorReadOnly: isReadOnly,\n            editorFocused: editing.view.document.isFocused,\n            modelSelection: serializeValue(model.document.selection)\n        };\n    }\n    /**\n\t * Sets up recording for all editor commands, both existing and future ones.\n\t * Taps into the command execution to track when commands are run.\n\t */ _tapCommands() {\n        // Tap already registered commands.\n        for (const [commandName, command] of this.editor.commands){\n            this._tapCommand(commandName, command);\n        }\n        // Tap commands registered after the constructor was called.\n        tapObjectMethod(this.editor.commands, 'add', {\n            before: (callContext, [commandName, command])=>{\n                this._tapCommand(commandName, command);\n                return false;\n            }\n        });\n    }\n    /**\n\t * Sets up recording for model operation applications.\n\t * Tracks when operations are applied to the model document.\n\t */ _tapOperationApply() {\n        tapObjectMethod(this.editor.model, 'applyOperation', {\n            before: (callContext, [operation])=>{\n                // Ignore operations applied to document fragments.\n                if (operation.baseVersion === null) {\n                    return false;\n                }\n                callContext.callFrame = this._enterFrame('model.applyOperation', [\n                    operation\n                ]);\n                return true;\n            },\n            after: (callContext)=>{\n                this._leaveFrame(callContext.callFrame);\n            },\n            error: (callContext, error)=>{\n                this._leaveFrame(callContext.callFrame, undefined, error);\n            }\n        });\n    }\n    /**\n\t * Sets up recording for key model methods like insertContent, insertObject, and deleteContent.\n\t * These methods represent high-level model manipulation operations.\n\t */ _tapModelMethods() {\n        for (const methodName of [\n            'insertContent',\n            'insertObject',\n            'deleteContent'\n        ]){\n            tapObjectMethod(this.editor.model, methodName, {\n                before: (callContext, ...params)=>{\n                    callContext.callFrame = this._enterFrame(`model.${methodName}`, params);\n                    return true;\n                },\n                after: (callContext, result)=>{\n                    this._leaveFrame(callContext.callFrame, result);\n                },\n                error: (callContext, error)=>{\n                    this._leaveFrame(callContext.callFrame, undefined, error);\n                }\n            });\n        }\n    }\n    /**\n\t * Sets up recording for model selection changes.\n\t * Tracks when the selection range, attributes, or markers change.\n\t */ _tapModelSelection() {\n        const events = [\n            'change:range',\n            'change:attribute',\n            'change:marker'\n        ];\n        this._tapFireMethod(this.editor.model.document.selection, events, {\n            eventSource: 'model-selection'\n        });\n    }\n    /**\n\t * Sets up recording for a specific command execution.\n\t *\n\t * @param commandName The name of the command to record.\n\t * @param command The command instance to tap into.\n\t */ _tapCommand(commandName, command) {\n        tapObjectMethod(command, 'execute', {\n            before: (callContext, params)=>{\n                callContext.callFrame = this._enterFrame(`commands.${commandName}:execute`, params);\n                return true;\n            },\n            after: (callContext, result)=>{\n                this._leaveFrame(callContext.callFrame, result);\n            },\n            error: (callContext, error)=>{\n                this._leaveFrame(callContext.callFrame, undefined, error);\n            }\n        });\n    }\n    /**\n\t * Sets up recording for UI component factory creation and component interactions.\n\t * Tracks when components are created and their execute events.\n\t */ _tapComponentFactory() {\n        tapObjectMethod(this.editor.ui.componentFactory, 'create', {\n            before: (callContext, [componentName])=>{\n                callContext.componentName = componentName;\n                callContext.callFrame = this._enterFrame(`component-factory.create:${componentName}`);\n                return true;\n            },\n            after: (callContext, componentInstance)=>{\n                const executeContext = {\n                    ...callContext,\n                    eventSource: `component.${callContext.componentName}`\n                };\n                if (typeof componentInstance.fire == 'function') {\n                    this._tapFireMethod(componentInstance, [\n                        'execute'\n                    ], executeContext);\n                }\n                if (typeof componentInstance.panelView?.fire == 'function') {\n                    this._tapFireMethod(componentInstance.panelView, [\n                        'execute'\n                    ], executeContext);\n                }\n                if (typeof componentInstance.buttonView?.actionView?.fire == 'function') {\n                    this._tapFireMethod(componentInstance.buttonView.actionView, [\n                        'execute'\n                    ], executeContext);\n                }\n                this._leaveFrame(callContext.callFrame);\n            },\n            error: (callContext, error)=>{\n                this._leaveFrame(callContext.callFrame, undefined, error);\n            }\n        });\n    }\n    /**\n\t * Sets up recording for view document events like clicks, keyboard input,\n\t * selection changes, and other user interactions.\n\t */ _tapViewDocumentEvents() {\n        const events = [\n            'click',\n            'mousedown',\n            'mouseup',\n            'pointerdown',\n            'pointerup',\n            'focus',\n            'blur',\n            'keydown',\n            'keyup',\n            'selectionChange',\n            'compositionstart',\n            'compositionend',\n            'beforeinput',\n            'mutations',\n            'enter',\n            'delete',\n            'insertText',\n            'paste',\n            'copy',\n            'cut',\n            'dragstart',\n            'drop'\n        ];\n        this._tapFireMethod(this.editor.editing.view.document, events, {\n            eventSource: 'observers'\n        });\n    }\n    /**\n\t * Sets up recording for specific events fired by an emitter object.\n\t *\n\t * @param emitter The object that fires events to be recorded.\n\t * @param eventNames Array of event names to record.\n\t * @param context Additional context to include with recorded events.\n\t */ _tapFireMethod(emitter, eventNames, context = {}) {\n        tapObjectMethod(emitter, 'fire', {\n            before: (callContext, [eventInfoOrName, ...params])=>{\n                const eventName = typeof eventInfoOrName == 'string' ? eventInfoOrName : eventInfoOrName.name;\n                if (!eventNames.includes(eventName)) {\n                    return false;\n                }\n                callContext.callFrame = this._enterFrame(`${callContext.eventSource}:${eventName}`, params);\n                return true;\n            },\n            after: (callContext, result)=>{\n                this._leaveFrame(callContext.callFrame, result);\n            },\n            error: (callContext, error)=>{\n                this._leaveFrame(callContext.callFrame, undefined, error);\n            }\n        }, context);\n    }\n    /**\n\t * Triggers error callback.\n\t */ _callErrorCallback(error) {\n        if (!this._errorCallback || this._errors.has(error)) {\n            return;\n        }\n        this._errors.add(error);\n        try {\n            // Provide a shallow copy of entries as it might be modified before error handler serializes it.\n            this._errorCallback(error, this.getEntries());\n        } catch (observerError) {\n            // Silently catch observer errors to prevent them from affecting the recording.\n            console.error('ActionsRecorder onError callback error:', observerError);\n        }\n    }\n    /**\n\t * The default handler for maxEntries callback.\n\t */ _maxEntriesDefaultHandler() {\n        this._entries.shift();\n    }\n}\n/**\n * Creates a wrapper around a method to record its calls, results, and errors.\n *\n * @internal\n *\n * @param object The object containing the method to tap.\n * @param methodName The name of the method to tap.\n * @param tap The tap configuration with before/after/error hooks.\n * @param context Additional context to include with the method calls.\n */ function tapObjectMethod(object, methodName, tap, context = {}) {\n    const originalMethod = object[methodName];\n    if (originalMethod[Symbol.for('Tapped method')]) {\n        return;\n    }\n    object[methodName] = (...args)=>{\n        const callContext = Object.assign({}, context);\n        let shouldHandle;\n        try {\n            shouldHandle = tap.before?.(callContext, args);\n            const result = originalMethod.apply(object, args);\n            if (shouldHandle) {\n                tap.after?.(callContext, result);\n            }\n            return result;\n        } catch (error) {\n            if (shouldHandle) {\n                tap.error?.(callContext, error);\n            }\n            throw error;\n        }\n    };\n    object[methodName][Symbol.for('Tapped method')] = originalMethod;\n}\n/**\n * Serializes a value into a JSON-serializable format.\n *\n * @internal\n *\n * @param value The value to serialize.\n * @param visited Set of already serialized objects to avoid circular references.\n * @returns A JSON-serializable representation of the value.\n */ function serializeValue(value, visited = new WeakSet()) {\n    if (!value || [\n        'boolean',\n        'number',\n        'string'\n    ].includes(typeof value)) {\n        return value;\n    }\n    if (typeof value.toJSON == 'function') {\n        const jsonData = value.toJSON();\n        // Make sure that toJSON returns plain object, otherwise it could be just a clone with circular references.\n        if (isPlainObject(jsonData) || Array.isArray(jsonData) || [\n            'string',\n            'number',\n            'boolean'\n        ].includes(typeof jsonData)) {\n            return serializeValue(jsonData, visited);\n        }\n    }\n    if (value instanceof Error) {\n        return {\n            name: value.name,\n            message: value.message,\n            stack: value.stack\n        };\n    }\n    // Most TypeCheckable should implement toJSON method so this is a fallback for other TypeCheckable objects.\n    if (isTypeCheckable(value) || typeof value != 'object') {\n        return {\n            type: typeof value,\n            constructor: value.constructor?.name || 'unknown',\n            string: String(value)\n        };\n    }\n    if (value instanceof File || value instanceof Blob || value instanceof FormData || value instanceof DataTransfer) {\n        return String(value);\n    }\n    if (visited.has(value)) {\n        return;\n    }\n    visited.add(value);\n    // Arrays.\n    if (Array.isArray(value)) {\n        return value.length ? value.map((item)=>serializeValue(item, visited)) : undefined;\n    }\n    // Other objects (plain, instances of classes, or events).\n    const result = {};\n    const ignoreFields = [];\n    // DOM event additional fields.\n    if (value.domEvent) {\n        ignoreFields.push('domEvent', 'domTarget', 'view', 'document');\n        result.domEvent = serializeDomEvent(value.domEvent);\n        result.target = serializeValue(value.target);\n        if (value.dataTransfer) {\n            result.dataTransfer = {\n                types: value.dataTransfer.types,\n                htmlData: value.dataTransfer.getData('text/html'),\n                files: serializeValue(value.dataTransfer.files)\n            };\n        }\n    }\n    // Other object types.\n    for (const [key, val] of Object.entries(value)){\n        // Ignore private fields, DOM events serialized above, and decorated methods.\n        if (key.startsWith('_') || ignoreFields.includes(key) || typeof val == 'function') {\n            continue;\n        }\n        const serializedValue = serializeValue(val, visited);\n        if (serializedValue !== undefined) {\n            result[key] = serializedValue;\n        }\n    }\n    if (Symbol.iterator in value) {\n        const items = Array.from(value[Symbol.iterator]()).map((item)=>serializeValue(item, visited));\n        if (items.length) {\n            result._items = items;\n        }\n    }\n    return Object.keys(result).length ? result : undefined;\n}\n/**\n * Serializes a DOM event into a plain object representation.\n *\n * Extracts common properties from DOM events such as type, target information,\n * coordinates, key codes, and other relevant event data for debugging purposes.\n *\n * @param event The DOM event to serialize.\n * @returns A serialized object containing the event's key properties.\n */ function serializeDomEvent(event) {\n    let serialized = {\n        type: event.type,\n        target: serializeDOMTarget(event.target)\n    };\n    // Add mouse event properties.\n    if (event instanceof MouseEvent) {\n        serialized = {\n            ...serialized,\n            button: event.button,\n            buttons: event.buttons,\n            ctrlKey: event.ctrlKey,\n            shiftKey: event.shiftKey,\n            altKey: event.altKey,\n            metaKey: event.metaKey\n        };\n    }\n    // Add keyboard event properties.\n    if (event instanceof KeyboardEvent) {\n        serialized = {\n            ...serialized,\n            key: event.key,\n            code: event.code,\n            keyCode: event.keyCode,\n            ctrlKey: event.ctrlKey,\n            shiftKey: event.shiftKey,\n            altKey: event.altKey,\n            metaKey: event.metaKey,\n            repeat: event.repeat\n        };\n    }\n    // Add input event properties.\n    if (event instanceof InputEvent) {\n        serialized = {\n            ...serialized,\n            data: event.data,\n            inputType: event.inputType,\n            isComposing: event.isComposing\n        };\n    }\n    // Add pointer event properties.\n    if (event instanceof PointerEvent) {\n        serialized = {\n            ...serialized,\n            isPrimary: event.isPrimary\n        };\n    }\n    /**\n\t * Serializes a DOM event target into a plain object representation.\n\t *\n\t * @param target The DOM event target to serialize.\n\t * @returns A serialized object containing the target's information.\n\t */ function serializeDOMTarget(target) {\n        if (!target) {\n            return null;\n        }\n        if (target instanceof Element) {\n            return {\n                tagName: target.tagName,\n                className: target.className,\n                id: target.id\n            };\n        }\n        if (target instanceof Window || target instanceof Document) {\n            return {\n                type: target.constructor.name\n            };\n        }\n        return {};\n    }\n    return serialized;\n}\n/**\n * Checks if a value is type-checkable, meaning it has an `is` method.\n */ function isTypeCheckable(value) {\n    return value && typeof value.is === 'function';\n}\n\nexport { ActionsRecorder, ContextWatchdog, EditorWatchdog, Watchdog };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module watchdog/watchdog\n */\n\nimport type { CKEditorError } from '@ckeditor/ckeditor5-utils';\nimport type { EditorWatchdogRestartEvent } from './editorwatchdog.js';\nimport type { ContextWatchdogItemErrorEvent, ContextWatchdogItemRestartEvent } from './contextwatchdog.js';\n\n/**\n * An abstract watchdog class that handles most of the error handling process and the state of the underlying component.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and how to use it.\n *\n * @internal\n */\nexport abstract class Watchdog {\n\t/**\n\t * An array of crashes saved as an object with the following properties:\n\t *\n\t * * `message`: `String`,\n\t * * `stack`: `String`,\n\t * * `date`: `Number`,\n\t * * `filename`: `String | undefined`,\n\t * * `lineno`: `Number | undefined`,\n\t * * `colno`: `Number | undefined`,\n\t */\n\tpublic readonly crashes: Array<{\n\t\tmessage: string;\n\t\tstack?: string;\n\t\tdate: number;\n\n\t\t// `evt.filename`, `evt.lineno` and `evt.colno` are available only in ErrorEvent events\n\t\tfilename?: string;\n\t\tlineno?: number;\n\t\tcolno?: number;\n\t}> = [];\n\n\t/**\n\t * Specifies the state of the item watched by the watchdog. The state can be one of the following values:\n\t *\n\t * * `initializing` &ndash; Before the first initialization, and after crashes, before the item is ready.\n\t * * `ready` &ndash; A state when the user can interact with the item.\n\t * * `crashed` &ndash; A state when an error occurs. It quickly changes to `initializing` or `crashedPermanently`\n\t * depending on how many and how frequent errors have been caught recently.\n\t * * `crashedPermanently` &ndash; A state when the watchdog stops reacting to errors and keeps the item it is watching crashed,\n\t * * `destroyed` &ndash; A state when the item is manually destroyed by the user after calling `watchdog.destroy()`.\n\t */\n\tpublic state: WatchdogState = 'initializing';\n\n\t/**\n\t * @see module:watchdog/watchdog~WatchdogConfig\n\t */\n\tprivate _crashNumberLimit: number;\n\n\t/**\n\t * Returns the result of the `Date.now()` call. It can be overridden in tests to mock time as some popular\n\t * approaches like `sinon.useFakeTimers()` do not work well with error handling.\n\t */\n\tprivate _now = Date.now;\n\n\t/**\n\t * @see module:watchdog/watchdog~WatchdogConfig\n\t */\n\tprivate _minimumNonErrorTimePeriod: number;\n\n\t/**\n\t * Checks if the event error comes from the underlying item and restarts the item.\n\t */\n\tprivate _boundErrorHandler: ( evt: ErrorEvent | PromiseRejectionEvent ) => void;\n\n\t/**\n\t * The method responsible for restarting the watched item.\n\t */\n\tprotected abstract _restart(): Promise<unknown>;\n\n\t/**\n\t * Traverses the error context and the watched item to find out whether the error should\n\t * be handled by the given item.\n\t *\n\t * @internal\n\t */\n\tpublic abstract _isErrorComingFromThisItem( error: CKEditorError ): boolean;\n\n\t/**\n\t * The watched item.\n\t *\n\t * @internal\n\t */\n\tpublic abstract get _item(): unknown;\n\n\t/**\n\t * A dictionary of event emitter listeners.\n\t */\n\tprivate _listeners: Record<string, Array<( ...args: any ) => void>>;\n\n\t/**\n\t * @param {module:watchdog/watchdog~WatchdogConfig} config The watchdog plugin configuration.\n\t */\n\tconstructor( config: WatchdogConfig ) {\n\t\tthis.crashes = [];\n\t\tthis._crashNumberLimit = typeof config.crashNumberLimit === 'number' ? config.crashNumberLimit : 3;\n\t\tthis._minimumNonErrorTimePeriod = typeof config.minimumNonErrorTimePeriod === 'number' ? config.minimumNonErrorTimePeriod : 5000;\n\n\t\tthis._boundErrorHandler = evt => {\n\t\t\t// `evt.error` is exposed by EventError while `evt.reason` is available in PromiseRejectionEvent.\n\t\t\tconst error = 'error' in evt ? evt.error : evt.reason;\n\n\t\t\t// Note that `evt.reason` might be everything that is in the promise rejection.\n\t\t\t// Similarly everything that is thrown lands in `evt.error`.\n\t\t\tif ( error instanceof Error ) {\n\t\t\t\tthis._handleError( error, evt );\n\t\t\t}\n\t\t};\n\n\t\tthis._listeners = {};\n\n\t\tif ( !( this as any )._restart ) {\n\t\t\tthrow new Error(\n\t\t\t\t'The Watchdog class was split into the abstract `Watchdog` class and the `EditorWatchdog` class. ' +\n\t\t\t\t'Please, use `EditorWatchdog` if you have used the `Watchdog` class previously.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Destroys the watchdog and releases the resources.\n\t */\n\tpublic destroy(): void {\n\t\tthis._stopErrorHandling();\n\n\t\tthis._listeners = {};\n\t}\n\n\t/**\n\t * Starts listening to a specific event name by registering a callback that will be executed\n\t * whenever an event with a given name fires.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param eventName The event name.\n\t * @param callback A callback which will be added to event listeners.\n\t */\n\tpublic on<K extends keyof WatchdogEventMap>( eventName: K, callback: WatchdogEventCallback<K> ): void {\n\t\tif ( !this._listeners[ eventName ] ) {\n\t\t\tthis._listeners[ eventName ] = [];\n\t\t}\n\n\t\tthis._listeners[ eventName ].push( callback );\n\t}\n\n\t/**\n\t * Stops listening to the specified event name by removing the callback from event listeners.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t *\n\t * @param eventName The event name.\n\t * @param callback A callback which will be removed from event listeners.\n\t */\n\tpublic off( eventName: keyof WatchdogEventMap, callback: unknown ): void {\n\t\tthis._listeners[ eventName ] = this._listeners[ eventName ]\n\t\t\t.filter( cb => cb !== callback );\n\t}\n\n\t/**\n\t * Fires an event with a given event name and arguments.\n\t *\n\t * Note that this method differs from the CKEditor 5's default `EventEmitterMixin` implementation.\n\t */\n\tprotected _fire<K extends keyof WatchdogEventMap>( eventName: K, ...args: WatchdogEventArgs<K> ): void {\n\t\tconst callbacks = this._listeners[ eventName ] || [];\n\n\t\tfor ( const callback of callbacks ) {\n\t\t\tcallback.apply( this, [ null, ...args ] );\n\t\t}\n\t}\n\n\t/**\n\t * Starts error handling by attaching global error handlers.\n\t */\n\tprotected _startErrorHandling(): void {\n\t\twindow.addEventListener( 'error', this._boundErrorHandler );\n\t\twindow.addEventListener( 'unhandledrejection', this._boundErrorHandler );\n\t}\n\n\t/**\n\t * Stops error handling by detaching global error handlers.\n\t */\n\tprotected _stopErrorHandling(): void {\n\t\twindow.removeEventListener( 'error', this._boundErrorHandler );\n\t\twindow.removeEventListener( 'unhandledrejection', this._boundErrorHandler );\n\t}\n\n\t/**\n\t * Checks if an error comes from the watched item and restarts it.\n\t * It reacts to {@link module:utils/ckeditorerror~CKEditorError `CKEditorError` errors} only.\n\t *\n\t * @fires error\n\t * @param error Error.\n\t * @param evt An error event.\n\t */\n\tprivate _handleError( error: Error, evt: ErrorEvent | PromiseRejectionEvent ): void {\n\t\t// @if CK_DEBUG // const err = error as CKEditorError;\n\t\t// @if CK_DEBUG // if ( err.is && err.is( 'CKEditorError' ) && err.context === undefined ) {\n\t\t// @if CK_DEBUG // console.warn( 'The error is missing its context and Watchdog cannot restart the proper item.' );\n\t\t// @if CK_DEBUG // }\n\n\t\tif ( this._shouldReactToError( error ) ) {\n\t\t\tthis.crashes.push( {\n\t\t\t\tmessage: error.message,\n\t\t\t\tstack: error.stack,\n\n\t\t\t\t// `evt.filename`, `evt.lineno` and `evt.colno` are available only in ErrorEvent events\n\t\t\t\tfilename: evt instanceof ErrorEvent ? evt.filename : undefined,\n\t\t\t\tlineno: evt instanceof ErrorEvent ? evt.lineno : undefined,\n\t\t\t\tcolno: evt instanceof ErrorEvent ? evt.colno : undefined,\n\t\t\t\tdate: this._now()\n\t\t\t} );\n\n\t\t\tconst causesRestart = this._shouldRestart();\n\n\t\t\tthis.state = 'crashed';\n\t\t\tthis._fire( 'stateChange' );\n\t\t\tthis._fire( 'error', { error, causesRestart } );\n\n\t\t\tif ( causesRestart ) {\n\t\t\t\tthis._restart();\n\t\t\t} else {\n\t\t\t\tthis.state = 'crashedPermanently';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks whether an error should be handled by the watchdog.\n\t *\n\t * @param error An error that was caught by the error handling process.\n\t */\n\tprivate _shouldReactToError( error: Error ): boolean {\n\t\treturn (\n\t\t\t( error as any ).is &&\n\t\t\t( error as any ).is( 'CKEditorError' ) &&\n\t\t\t( error as CKEditorError ).context !== undefined &&\n\n\t\t\t// In some cases the watched item should not be restarted - e.g. during the item initialization.\n\t\t\t// That's why the `null` was introduced as a correct error context which does cause restarting.\n\t\t\t( error as CKEditorError ).context !== null &&\n\n\t\t\t// Do not react to errors if the watchdog is in states other than `ready`.\n\t\t\tthis.state === 'ready' &&\n\n\t\t\tthis._isErrorComingFromThisItem( error as CKEditorError )\n\t\t);\n\t}\n\n\t/**\n\t * Checks if the watchdog should restart the underlying item.\n\t */\n\tprivate _shouldRestart(): boolean {\n\t\tif ( this.crashes.length <= this._crashNumberLimit ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst lastErrorTime = this.crashes[ this.crashes.length - 1 ].date;\n\t\tconst firstMeaningfulErrorTime = this.crashes[ this.crashes.length - 1 - this._crashNumberLimit ].date;\n\n\t\tconst averageNonErrorTimePeriod = ( lastErrorTime - firstMeaningfulErrorTime ) / this._crashNumberLimit;\n\n\t\treturn averageNonErrorTimePeriod > this._minimumNonErrorTimePeriod;\n\t}\n}\n\n/**\n * Fired when a new {@link module:utils/ckeditorerror~CKEditorError `CKEditorError`} error connected to the watchdog instance occurs\n * and the watchdog will react to it.\n *\n * ```ts\n * watchdog.on( 'error', ( evt, { error, causesRestart } ) => {\n * \tconsole.log( 'An error occurred.' );\n * } );\n * ```\n *\n * @eventName ~Watchdog#error\n */\nexport type WatchdogErrorEvent = {\n\tname: 'error';\n\targs: [ WatchdogErrorEventData ];\n};\n\n/**\n * The `error` event data.\n */\nexport type WatchdogErrorEventData = {\n\terror: Error;\n\tcausesRestart: boolean;\n};\n\n/**\n * Fired when the watchdog state changed.\n *\n * @eventName ~Watchdog#stateChange\n */\nexport type WatchdogStateChangeEvent = {\n\tname: 'stateChange';\n\targs: [];\n};\n\n/**\n * The map of watchdog events.\n */\nexport interface WatchdogEventMap {\n\tstateChange: WatchdogStateChangeEvent;\n\terror: WatchdogErrorEvent;\n\trestart: EditorWatchdogRestartEvent;\n\titemError: ContextWatchdogItemErrorEvent;\n\titemRestart: ContextWatchdogItemRestartEvent;\n}\n\n/**\n * Utility type that gets the arguments type for the given event.\n */\nexport type WatchdogEventArgs<K extends keyof WatchdogEventMap> = WatchdogEventMap[ K ][ 'args' ];\n\n/**\n * Utility type that gets the callback type for the given event.\n */\nexport type WatchdogEventCallback<K extends keyof WatchdogEventMap> = ( evt: null, ...args: WatchdogEventArgs<K> ) => void;\n\n/**\n * The watchdog plugin configuration.\n */\nexport interface WatchdogConfig {\n\n\t/**\n\t * A threshold specifying the number of watched item crashes\n\t * when the watchdog stops restarting the item in case of errors.\n\t * After this limit is reached and the time between the last errors is shorter than `minimumNonErrorTimePeriod`,\n\t * the watchdog changes its state to `crashedPermanently` and it stops restarting the item. This prevents an infinite restart loop.\n\t *\n\t * @default 3\n\t */\n\tcrashNumberLimit?: number;\n\n\t/**\n\t * An average number of milliseconds between the last watched item errors\n\t * (defaults to 5000). When the period of time between errors is lower than that and the `crashNumberLimit` is also reached,\n\t * the watchdog changes its state to `crashedPermanently` and it stops restarting the item. This prevents an infinite restart loop.\n\t *\n\t * @default 5000\n\t */\n\tminimumNonErrorTimePeriod?: number;\n\n\t/**\n\t * A minimum number of milliseconds between saving the editor data internally (defaults to 5000).\n\t * Note that for large documents this might impact the editor performance.\n\t *\n\t * @default 5000\n\t */\n\tsaveInterval?: number;\n}\n\n/**\n * Specifies the state of the item watched by the watchdog.\n */\nexport type WatchdogState = 'initializing' | 'ready' | 'crashed' | 'crashedPermanently' | 'destroyed';\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module watchdog/utils/getsubnodes\n */\n\n/**\n * @internal\n */\nexport function getSubNodes( head: unknown, excludedProperties = new Set() ): Set<unknown> {\n\tconst nodes = [ head ];\n\n\t// @if CK_DEBUG_WATCHDOG // const prevNodeMap = new Map();\n\n\t// Nodes are stored to prevent infinite looping.\n\tconst subNodes = new Set();\n\tlet nodeIndex = 0;\n\n\twhile ( nodes.length > nodeIndex ) {\n\t\t// Incrementing the iterator is much faster than changing size of the array with Array.prototype.shift().\n\t\tconst node = nodes[ nodeIndex++ ];\n\n\t\tif ( subNodes.has( node ) || !shouldNodeBeIncluded( node ) || excludedProperties.has( node ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tsubNodes.add( node );\n\n\t\t// Handle arrays, maps, sets, custom collections that implements `[ Symbol.iterator ]()`, etc.\n\t\tif ( Symbol.iterator in node ) {\n\t\t\t// The custom editor iterators might cause some problems if the editor is crashed.\n\t\t\ttry {\n\t\t\t\tfor ( const n of node as Iterable<unknown> ) {\n\t\t\t\t\tnodes.push( n );\n\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( n ) ) {\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( n, node );\n\t\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// Do not log errors for broken structures\n\t\t\t\t// since we are in the error handling process already.\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( const key in node ) {\n\t\t\t\t// We share a reference via the protobuf library within the editors,\n\t\t\t\t// hence the shared value should be skipped. Although, it's not a perfect\n\t\t\t\t// solution since new places like that might occur in the future.\n\t\t\t\tif ( key === 'defaultValue' ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tnodes.push( node[ key ] );\n\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // if ( !prevNodeMap.has( node[ key ] ) ) {\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // \tprevNodeMap.set( node[ key ], node );\n\t\t\t\t// @if CK_DEBUG_WATCHDOG // }\n\t\t\t}\n\t\t}\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return { subNodes, prevNodeMap } as any;\n\n\treturn subNodes;\n}\n\nfunction shouldNodeBeIncluded( node: unknown ): node is Record<string, unknown> | Iterable<unknown> {\n\tconst type = Object.prototype.toString.call( node );\n\tconst typeOfNode = typeof node;\n\n\treturn !(\n\t\ttypeOfNode === 'number' ||\n\t\ttypeOfNode === 'boolean' ||\n\t\ttypeOfNode === 'string' ||\n\t\ttypeOfNode === 'symbol' ||\n\t\ttypeOfNode === 'function' ||\n\t\ttype === '[object Date]' ||\n\t\ttype === '[object RegExp]' ||\n\t\ttype === '[object Module]' ||\n\n\t\tnode === undefined ||\n\t\tnode === null ||\n\n\t\t// This flag is meant to exclude singletons shared across editor instances. So when an error is thrown in one editor,\n\t\t// the other editors connected through the reference to the same singleton are not restarted. This is a temporary workaround\n\t\t// until a better solution is found.\n\t\t// More in https://github.com/ckeditor/ckeditor5/issues/12292.\n\t\t( node as any )._watchdogExcluded ||\n\n\t\t// Skip native DOM objects, e.g. Window, nodes, events, etc.\n\t\tnode instanceof EventTarget ||\n\t\tnode instanceof Event\n\t);\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module watchdog/utils/areconnectedthroughproperties\n */\n\nimport { getSubNodes } from './getsubnodes.js';\n\n/**\n * Traverses both structures to find out whether there is a reference that is shared between both structures.\n *\n * @internal\n */\nexport function areConnectedThroughProperties( target1: unknown, target2: unknown, excludedNodes = new Set() ): boolean {\n\tif ( target1 === target2 && isObject( target1 ) ) {\n\t\treturn true;\n\t}\n\n\t// @if CK_DEBUG_WATCHDOG // return checkConnectionBetweenProps( target1, target2, excludedNodes );\n\n\tconst subNodes1 = getSubNodes( target1, excludedNodes );\n\tconst subNodes2 = getSubNodes( target2, excludedNodes );\n\n\tfor ( const node of subNodes1 ) {\n\t\tif ( subNodes2.has( node ) ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/* istanbul ignore next -- @preserve */\n// eslint-disable-next-line\nfunction checkConnectionBetweenProps( target1: unknown, target2: unknown, excludedNodes: any ) {\n\tconst { subNodes: subNodes1, prevNodeMap: prevNodeMap1 } = getSubNodes( target1, excludedNodes.subNodes ) as any;\n\tconst { subNodes: subNodes2, prevNodeMap: prevNodeMap2 } = getSubNodes( target2, excludedNodes.subNodes ) as any;\n\n\tfor ( const sharedNode of subNodes1 ) {\n\t\tif ( subNodes2.has( sharedNode ) ) {\n\t\t\tconst connection = [];\n\n\t\t\tconnection.push( sharedNode );\n\n\t\t\tlet node = prevNodeMap1.get( sharedNode );\n\n\t\t\twhile ( node && node !== target1 ) {\n\t\t\t\tconnection.push( node );\n\t\t\t\tnode = prevNodeMap1.get( node );\n\t\t\t}\n\n\t\t\tnode = prevNodeMap2.get( sharedNode );\n\n\t\t\twhile ( node && node !== target2 ) {\n\t\t\t\tconnection.unshift( node );\n\t\t\t\tnode = prevNodeMap2.get( node );\n\t\t\t}\n\n\t\t\tconsole.log( '--------' );\n\t\t\tconsole.log( { target1 } );\n\t\t\tconsole.log( { sharedNode } );\n\t\t\tconsole.log( { target2 } );\n\t\t\tconsole.log( { connection } );\n\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction isObject( structure: unknown ): boolean {\n\treturn typeof structure === 'object' && structure !== null;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module watchdog/editorwatchdog\n */\n\nimport { throttle, cloneDeepWith, isElement, type DebouncedFunc } from 'es-toolkit/compat';\nimport { areConnectedThroughProperties } from './utils/areconnectedthroughproperties.js';\nimport { Watchdog, type WatchdogConfig } from './watchdog.js';\nimport type { CKEditorError } from '@ckeditor/ckeditor5-utils';\nimport type { ModelNode, ModelText, ModelElement, ModelWriter } from '@ckeditor/ckeditor5-engine';\nimport type { Editor, EditorConfig, Context, EditorReadyEvent } from '@ckeditor/ckeditor5-core';\nimport type { RootAttributes } from '@ckeditor/ckeditor5-editor-multi-root';\n\n/**\n * A watchdog for CKEditor 5 editors.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n */\nexport class EditorWatchdog<TEditor extends Editor = Editor> extends Watchdog {\n\t/**\n\t * The current editor instance.\n\t */\n\tprivate _editor: TEditor | null = null;\n\n\t/**\n\t * A promise associated with the life cycle of the editor (creation or destruction processes).\n\t *\n\t * It is used to prevent the initialization of the editor if the previous instance has not been destroyed yet,\n\t * and conversely, to prevent the destruction of the editor if it has not been initialized.\n\t */\n\tprivate _lifecyclePromise: Promise<unknown> | null = null;\n\n\t/**\n\t * Throttled save method. The `save()` method is called the specified `saveInterval` after `throttledSave()` is called,\n\t * unless a new action happens in the meantime.\n\t */\n\tprivate _throttledSave: DebouncedFunc<() => void>;\n\n\t/**\n\t * The latest saved editor data represented as a root name -> root data object.\n\t */\n\tprivate _data?: EditorData;\n\n\t/**\n\t * The last document version.\n\t */\n\tprivate _lastDocumentVersion?: number;\n\n\t/**\n\t * The editor source element or data.\n\t */\n\tprivate _elementOrData?: HTMLElement | string | Record<string, string> | Record<string, HTMLElement>;\n\n\t/**\n\t * Specifies whether the editor was initialized using document data (`true`) or HTML elements (`false`).\n\t */\n\tprivate _initUsingData = true;\n\n\t/**\n\t * The latest record of the editor editable elements. Used to restart the editor.\n\t */\n\tprivate _editables: Record<string, HTMLElement> = {};\n\n\t/**\n\t * The editor configuration.\n\t */\n\tprivate _config?: EditorConfig;\n\n\t/**\n\t * The creation method.\n\t *\n\t * @see #setCreator\n\t */\n\tdeclare protected _creator: EditorWatchdogCreatorFunction<TEditor>;\n\n\t/**\n\t * The destruction method.\n\t *\n\t * @see #setDestructor\n\t */\n\tdeclare protected _destructor: ( editor: Editor ) => Promise<unknown>;\n\n\tprivate _excludedProps?: Set<unknown>;\n\n\t/**\n\t * @param Editor The editor class.\n\t * @param watchdogConfig The watchdog plugin configuration.\n\t */\n\tconstructor( Editor: { create( ...args: any ): Promise<TEditor> } | null, watchdogConfig: WatchdogConfig = {} ) {\n\t\tsuper( watchdogConfig );\n\n\t\t// this._editorClass = Editor;\n\n\t\tthis._throttledSave = throttle(\n\t\t\tthis._save.bind( this ),\n\t\t\ttypeof watchdogConfig.saveInterval === 'number' ? watchdogConfig.saveInterval : 5000\n\t\t);\n\n\t\t// Set default creator and destructor functions:\n\t\tif ( Editor ) {\n\t\t\tthis._creator = ( ( elementOrData, config ) => Editor.create( elementOrData, config ) );\n\t\t}\n\n\t\tthis._destructor = editor => editor.destroy();\n\t}\n\n\t/**\n\t * The current editor instance.\n\t */\n\tpublic get editor(): TEditor | null {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic get _item(): TEditor | null {\n\t\treturn this._editor;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the editor creation.\n\t * It expects a function that should return a promise.\n\t *\n\t * ```ts\n\t * watchdog.setCreator( ( element, config ) => ClassicEditor.create( element, config ) );\n\t * ```\n\t */\n\tpublic setCreator( creator: EditorWatchdogCreatorFunction<TEditor> ): void {\n\t\tthis._creator = creator;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the editor destruction.\n\t * Overrides the default destruction function, which destroys only the editor instance.\n\t * It expects a function that should return a promise or `undefined`.\n\t *\n\t * ```ts\n\t * watchdog.setDestructor( editor => {\n\t * \t// Do something before the editor is destroyed.\n\t *\n\t * \treturn editor\n\t * \t\t.destroy()\n\t * \t\t.then( () => {\n\t * \t\t\t// Do something after the editor is destroyed.\n\t * \t\t} );\n\t * } );\n\t * ```\n\t */\n\tpublic setDestructor( destructor: ( editor: Editor ) => Promise<unknown> ): void {\n\t\tthis._destructor = destructor;\n\t}\n\n\t/**\n\t * Restarts the editor instance. This method is called whenever an editor error occurs. It fires the `restart` event and changes\n\t * the state to `initializing`.\n\t *\n\t * @fires restart\n\t */\n\tprotected override _restart(): Promise<unknown> {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'initializing';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\treturn this._destroy();\n\t\t\t} )\n\t\t\t.catch( err => {\n\t\t\t\tconsole.error( 'An error happened during the editor destroying.', err );\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\t// Pre-process some data from the original editor config.\n\t\t\t\t// Our goal here is to make sure that the restarted editor will be reinitialized with correct set of roots.\n\t\t\t\t// We are not interested in any data set in config or in `.create()` first parameter. It will be replaced anyway.\n\t\t\t\t// But we need to set them correctly to make sure that proper roots are created.\n\t\t\t\t//\n\t\t\t\t// Since a different set of roots will be created, `lazyRoots` and `rootsAttributes` properties must be managed too.\n\n\t\t\t\t// Keys are root names, values are ''. Used when the editor was initialized by setting the first parameter to document data.\n\t\t\t\tconst existingRoots: Record<string, string> = {};\n\t\t\t\t// Keeps lazy roots. They may be different when compared to initial config if some of the roots were loaded.\n\t\t\t\tconst lazyRoots: Array<string> = [];\n\t\t\t\t// Roots attributes from the old config. Will be referred when setting new attributes.\n\t\t\t\tconst oldRootsAttributes: Record<string, RootAttributes> = this._config!.rootsAttributes || {};\n\t\t\t\t// New attributes to be set. Is filled only for roots that still exist in the document.\n\t\t\t\tconst rootsAttributes: Record<string, RootAttributes> = {};\n\n\t\t\t\t// Traverse through the roots saved when the editor crashed and set up the discussed values.\n\t\t\t\tfor ( const [ rootName, rootData ] of Object.entries( this._data!.roots ) ) {\n\t\t\t\t\tif ( rootData.isLoaded ) {\n\t\t\t\t\t\texistingRoots[ rootName ] = '';\n\t\t\t\t\t\trootsAttributes[ rootName ] = oldRootsAttributes[ rootName ] || {};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlazyRoots.push( rootName );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst updatedConfig: EditorConfig = {\n\t\t\t\t\t...this._config,\n\t\t\t\t\textraPlugins: this._config!.extraPlugins || [],\n\t\t\t\t\tlazyRoots,\n\t\t\t\t\trootsAttributes,\n\t\t\t\t\t_watchdogInitialData: this._data\n\t\t\t\t};\n\n\t\t\t\t// Delete `initialData` as it is not needed. Data will be set by the watchdog based on `_watchdogInitialData`.\n\t\t\t\t// First parameter of the editor `.create()` will be used to set up initial roots.\n\t\t\t\tdelete updatedConfig.initialData;\n\n\t\t\t\tupdatedConfig.extraPlugins!.push( EditorWatchdogInitPlugin as any );\n\n\t\t\t\tif ( this._initUsingData ) {\n\t\t\t\t\treturn this.create( existingRoots, updatedConfig, updatedConfig.context );\n\t\t\t\t} else {\n\t\t\t\t\t// Set correct editables to make sure that proper roots are created and linked with DOM elements.\n\t\t\t\t\t// No need to set initial data, as it would be discarded anyway.\n\t\t\t\t\t//\n\t\t\t\t\t// If one element was initially set in `elementOrData`, then use that original element to restart the editor.\n\t\t\t\t\t// This is for compatibility purposes with single-root editor types.\n\t\t\t\t\tif ( isElement( this._elementOrData ) ) {\n\t\t\t\t\t\treturn this.create( this._elementOrData, updatedConfig, updatedConfig.context );\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn this.create( this._editables, updatedConfig, updatedConfig.context );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )\n\t\t\t.then( () => {\n\t\t\t\tthis._fire( 'restart' );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates the editor instance and keeps it running, using the defined creator and destructor.\n\t *\n\t * @param elementOrData The editor source element or the editor data.\n\t * @param config The editor configuration.\n\t * @param context A context for the editor.\n\t */\n\tpublic create(\n\t\telementOrData: HTMLElement | string | Record<string, string> | Record<string, HTMLElement> = this._elementOrData!,\n\t\tconfig: EditorConfig = this._config!,\n\t\tcontext?: Context\n\t): Promise<unknown> {\n\t\tthis._lifecyclePromise = Promise.resolve( this._lifecyclePromise )\n\t\t\t.then( () => {\n\t\t\t\tsuper._startErrorHandling();\n\n\t\t\t\tthis._elementOrData = elementOrData;\n\n\t\t\t\t// Use document data in the first parameter of the editor `.create()` call only if it was used like this originally.\n\t\t\t\t// Use document data if a string or object with strings was passed.\n\t\t\t\tthis._initUsingData = typeof elementOrData == 'string' ||\n\t\t\t\t\t( Object.keys( elementOrData ).length > 0 && typeof Object.values( elementOrData )[ 0 ] == 'string' );\n\n\t\t\t\t// Clone configuration because it might be shared within multiple watchdog instances. Otherwise,\n\t\t\t\t// when an error occurs in one of these editors, the watchdog will restart all of them.\n\t\t\t\tthis._config = this._cloneEditorConfiguration( config ) || {};\n\n\t\t\t\tthis._config!.context = context;\n\n\t\t\t\treturn this._creator( elementOrData, this._config! );\n\t\t\t} )\n\t\t\t.then( editor => {\n\t\t\t\tthis._editor = editor;\n\n\t\t\t\teditor.model.document.on( 'change:data', this._throttledSave );\n\n\t\t\t\tthis._lastDocumentVersion = editor.model.document.version;\n\t\t\t\tthis._data = this._getData();\n\n\t\t\t\tif ( !this._initUsingData ) {\n\t\t\t\t\tthis._editables = this._getEditables();\n\t\t\t\t}\n\n\t\t\t\tthis.state = 'ready';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t} ).finally( () => {\n\t\t\t\tthis._lifecyclePromise = null;\n\t\t\t} );\n\n\t\treturn this._lifecyclePromise;\n\t}\n\n\t/**\n\t * Destroys the watchdog and the current editor instance. It fires the callback\n\t * registered in {@link #setDestructor `setDestructor()`} and uses it to destroy the editor instance.\n\t * It also sets the state to `destroyed`.\n\t */\n\tpublic override destroy(): Promise<unknown> {\n\t\tthis._lifecyclePromise = Promise.resolve( this._lifecyclePromise )\n\t\t\t.then( () => {\n\t\t\t\tthis.state = 'destroyed';\n\t\t\t\tthis._fire( 'stateChange' );\n\n\t\t\t\tsuper.destroy();\n\n\t\t\t\treturn this._destroy();\n\t\t\t} ).finally( () => {\n\t\t\t\tthis._lifecyclePromise = null;\n\t\t\t} );\n\n\t\treturn this._lifecyclePromise;\n\t}\n\n\tprivate _destroy(): Promise<unknown> {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._stopErrorHandling();\n\n\t\t\t\tthis._throttledSave.cancel();\n\n\t\t\t\tconst editor = this._editor;\n\n\t\t\t\tthis._editor = null;\n\n\t\t\t\t// Remove the `change:data` listener before destroying the editor.\n\t\t\t\t// Incorrectly written plugins may trigger firing `change:data` events during the editor destruction phase\n\t\t\t\t// causing the watchdog to call `editor.getData()` when some parts of editor are already destroyed.\n\t\t\t\teditor!.model.document.off( 'change:data', this._throttledSave );\n\n\t\t\t\treturn this._destructor( editor! );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Saves the editor data, so it can be restored after the crash even if the data cannot be fetched at\n\t * the moment of the crash.\n\t */\n\tprivate _save(): void {\n\t\tconst version = this._editor!.model.document.version;\n\n\t\ttry {\n\t\t\tthis._data = this._getData();\n\n\t\t\tif ( !this._initUsingData ) {\n\t\t\t\tthis._editables = this._getEditables();\n\t\t\t}\n\n\t\t\tthis._lastDocumentVersion = version;\n\t\t} catch ( err ) {\n\t\t\tconsole.error(\n\t\t\t\terr,\n\t\t\t\t'An error happened during restoring editor data. ' +\n\t\t\t\t'Editor will be restored from the previously saved data.'\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * @internal\n\t */\n\tpublic _setExcludedProperties( props: Set<unknown> ): void {\n\t\tthis._excludedProps = props;\n\t}\n\n\t/**\n\t * Gets all data that is required to reinitialize editor instance.\n\t */\n\tprivate _getData(): EditorData {\n\t\tconst editor = this._editor!;\n\t\tconst roots = editor.model.document.roots.filter( root => root.isAttached() && root.rootName != '$graveyard' );\n\n\t\tconst { plugins } = editor;\n\t\t// `as any` to avoid linking from external private repo.\n\t\tconst commentsRepository = plugins.has( 'CommentsRepository' ) && plugins.get( 'CommentsRepository' ) as any;\n\t\tconst trackChanges = plugins.has( 'TrackChanges' ) && plugins.get( 'TrackChanges' ) as any;\n\n\t\tconst data: EditorData = {\n\t\t\troots: {},\n\t\t\tmarkers: {},\n\t\t\tcommentThreads: JSON.stringify( [] ),\n\t\t\tsuggestions: JSON.stringify( [] )\n\t\t};\n\n\t\troots.forEach( root => {\n\t\t\tdata.roots[ root.rootName ] = {\n\t\t\t\tcontent: JSON.stringify( Array.from( root.getChildren() ) ),\n\t\t\t\tattributes: JSON.stringify( Array.from( root.getAttributes() ) ),\n\t\t\t\tisLoaded: root._isLoaded\n\t\t\t};\n\t\t} );\n\n\t\tfor ( const marker of editor.model.markers ) {\n\t\t\tif ( !marker._affectsData ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tdata.markers[ marker.name ] = {\n\t\t\t\trangeJSON: marker.getRange().toJSON() as any,\n\t\t\t\tusingOperation: marker._managedUsingOperations,\n\t\t\t\taffectsData: marker._affectsData\n\t\t\t};\n\t\t}\n\n\t\tif ( commentsRepository ) {\n\t\t\tdata.commentThreads = JSON.stringify( commentsRepository.getCommentThreads( { toJSON: true, skipNotAttached: true } ) );\n\t\t}\n\n\t\tif ( trackChanges ) {\n\t\t\tdata.suggestions = JSON.stringify( trackChanges.getSuggestions( { toJSON: true, skipNotAttached: true } ) );\n\t\t}\n\n\t\treturn data;\n\t}\n\n\t/**\n\t * For each attached model root, returns its HTML editable element (if available).\n\t */\n\tprivate _getEditables(): Record<string, HTMLElement> {\n\t\tconst editables: Record<string, HTMLElement> = {};\n\n\t\tfor ( const rootName of this.editor!.model.document.getRootNames() ) {\n\t\t\tconst editable = this.editor!.ui.getEditableElement( rootName );\n\n\t\t\tif ( editable ) {\n\t\t\t\teditables[ rootName ] = editable;\n\t\t\t}\n\t\t}\n\n\t\treturn editables;\n\t}\n\n\t/**\n\t * Traverses the error context and the current editor to find out whether these structures are connected\n\t * to each other via properties.\n\t *\n\t * @internal\n\t */\n\tpublic _isErrorComingFromThisItem( error: CKEditorError ): boolean {\n\t\treturn areConnectedThroughProperties( this._editor, error.context, this._excludedProps );\n\t}\n\n\t/**\n\t * Clones the editor configuration.\n\t */\n\tprivate _cloneEditorConfiguration( config: EditorConfig ): EditorConfig {\n\t\treturn cloneDeepWith( config, ( value, key ) => {\n\t\t\t// Leave DOM references.\n\t\t\tif ( isElement( value ) ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif ( key === 'context' ) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Internal plugin that is used to stop the default editor initialization and restoring the editor state\n * based on the `editor.config._watchdogInitialData` data.\n */\nclass EditorWatchdogInitPlugin {\n\tpublic editor: Editor;\n\n\tprivate _data: EditorData;\n\n\tconstructor( editor: Editor ) {\n\t\tthis.editor = editor;\n\n\t\tthis._data = editor.config.get( '_watchdogInitialData' )!;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\t// Stops the default editor initialization and use the saved data to restore the editor state.\n\t\t// Some of data could not be initialize as a config properties. It is important to keep the data\n\t\t// in the same form as it was before the restarting.\n\t\tthis.editor.data.on( 'init', evt => {\n\t\t\tevt.stop();\n\n\t\t\tthis.editor.model.enqueueChange( { isUndoable: false }, writer => {\n\t\t\t\tthis._restoreCollaborationData();\n\t\t\t\tthis._restoreEditorData( writer );\n\t\t\t} );\n\n\t\t\tthis.editor.data.fire<EditorReadyEvent>( 'ready' );\n\n\t\t\t// Keep priority `'high' - 1` to be sure that RTC initialization will be first.\n\t\t}, { priority: 1000 - 1 } );\n\t}\n\n\t/**\n\t * Creates a model node (element or text) based on provided JSON.\n\t */\n\tprivate _createNode( writer: ModelWriter, jsonNode: any ): ModelText | ModelElement {\n\t\tif ( 'name' in jsonNode ) {\n\t\t\t// If child has name property, it is an Element.\n\t\t\tconst element = writer.createElement( jsonNode.name, jsonNode.attributes );\n\n\t\t\tif ( jsonNode.children ) {\n\t\t\t\tfor ( const child of jsonNode.children ) {\n\t\t\t\t\telement._appendChild( this._createNode( writer, child ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn element;\n\t\t} else {\n\t\t\t// Otherwise, it is a Text node.\n\t\t\treturn writer.createText( jsonNode.data, jsonNode.attributes );\n\t\t}\n\t}\n\n\t/**\n\t * Restores the editor by setting the document data, roots attributes and markers.\n\t */\n\tprivate _restoreEditorData( writer: ModelWriter ): void {\n\t\tconst editor = this.editor!;\n\n\t\tObject.entries( this._data!.roots ).forEach( ( [ rootName, { content, attributes } ] ) => {\n\t\t\tconst parsedNodes: Array<ModelNode | ModelElement> = JSON.parse( content );\n\t\t\tconst parsedAttributes: Array<[ string, unknown ]> = JSON.parse( attributes );\n\n\t\t\tconst rootElement = editor.model.document.getRoot( rootName )!;\n\n\t\t\tfor ( const [ key, value ] of parsedAttributes ) {\n\t\t\t\twriter.setAttribute( key, value, rootElement );\n\t\t\t}\n\n\t\t\tfor ( const child of parsedNodes ) {\n\t\t\t\tconst node = this._createNode( writer, child );\n\n\t\t\t\twriter.insert( node, rootElement, 'end' );\n\t\t\t}\n\t\t} );\n\n\t\tObject.entries( this._data!.markers ).forEach( ( [ markerName, markerOptions ] ) => {\n\t\t\tconst { document } = editor.model;\n\t\t\tconst {\n\t\t\t\trangeJSON: { start, end },\n\t\t\t\t...options\n\t\t\t} = markerOptions;\n\n\t\t\tconst root = document.getRoot( start.root )!;\n\t\t\tconst startPosition = writer.createPositionFromPath( root, start.path, start.stickiness );\n\t\t\tconst endPosition = writer.createPositionFromPath( root, end.path, end.stickiness );\n\n\t\t\tconst range = writer.createRange( startPosition, endPosition );\n\n\t\t\twriter.addMarker( markerName, {\n\t\t\t\trange,\n\t\t\t\t...options\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Restores the editor collaboration data - comment threads and suggestions.\n\t */\n\tprivate _restoreCollaborationData() {\n\t\t// `as any` to avoid linking from external private repo.\n\t\tconst parsedCommentThreads: Array<any> = JSON.parse( this._data.commentThreads );\n\t\tconst parsedSuggestions: Array<any> = JSON.parse( this._data.suggestions );\n\n\t\tif ( this.editor!.plugins.has( 'CommentsRepository' ) ) {\n\t\t\tconst commentsRepository = this.editor!.plugins.get( 'CommentsRepository' ) as any;\n\n\t\t\t// First, remove the existing comments that were created by integration plugins during initialization.\n\t\t\t// These comments may be outdated, and new instances will be created in the next step based on the saved data.\n\t\t\tfor ( const commentThread of commentsRepository.getCommentThreads() ) {\n\t\t\t\t// Use the internal API since it removes the comment thread directly and does not trigger events\n\t\t\t\t// that could cause side effects, such as removing markers.\n\t\t\t\tcommentsRepository._removeCommentThread( { threadId: commentThread.id } );\n\t\t\t}\n\n\t\t\tparsedCommentThreads.forEach( commentThreadData => {\n\t\t\t\tconst channelId = this.editor.config.get( 'collaboration.channelId' )!;\n\t\t\t\tconst commentsRepository = this.editor!.plugins.get( 'CommentsRepository' ) as any;\n\n\t\t\t\tcommentsRepository.addCommentThread( { channelId, ...commentThreadData } );\n\t\t\t} );\n\t\t}\n\n\t\tif ( this.editor!.plugins.has( 'TrackChangesEditing' ) ) {\n\t\t\tconst trackChangesEditing = this.editor!.plugins.get( 'TrackChangesEditing' ) as any;\n\n\t\t\t// First, remove the existing suggestions that were created by integration plugins during initialization.\n\t\t\t// These suggestions may be outdated, and new instances will be created in the next step based on the saved data.\n\t\t\tfor ( const suggestion of trackChangesEditing.getSuggestions() ) {\n\t\t\t\ttrackChangesEditing._removeSuggestion( suggestion );\n\t\t\t}\n\n\t\t\tparsedSuggestions.forEach( suggestionData => {\n\t\t\t\ttrackChangesEditing.addSuggestionData( suggestionData );\n\t\t\t} );\n\t\t}\n\t}\n}\n\n/**\n * @internal\n */\nexport type EditorData = {\n\troots: Record<string, {\n\t\tcontent: string;\n\t\tattributes: string;\n\t\tisLoaded: boolean;\n\t}>;\n\tmarkers: Record<string, {\n\t\trangeJSON: { start: any; end: any };\n\t\tusingOperation: boolean;\n\t\taffectsData: boolean;\n\t}>;\n\tcommentThreads: string;\n\tsuggestions: string;\n};\n\n/**\n * Fired after the watchdog restarts the error in case of a crash.\n *\n * @eventName ~EditorWatchdog#restart\n */\nexport type EditorWatchdogRestartEvent = {\n\tname: 'restart';\n\targs: [];\n\treturn: undefined;\n};\n\nexport type EditorWatchdogCreatorFunction<TEditor = Editor> = (\n\telementOrData: HTMLElement | string | Record<string, string> | Record<string, HTMLElement>,\n\tconfig: EditorConfig\n) => Promise<TEditor>;\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module watchdog/contextwatchdog\n */\n\nimport { Watchdog, type WatchdogConfig, type WatchdogState } from './watchdog.js';\nimport { EditorWatchdog, type EditorWatchdogCreatorFunction } from './editorwatchdog.js';\nimport { areConnectedThroughProperties } from './utils/areconnectedthroughproperties.js';\nimport { getSubNodes } from './utils/getsubnodes.js';\nimport type { ArrayOrItem, CKEditorError } from '@ckeditor/ckeditor5-utils';\nimport type { Context, Editor, EditorConfig, ContextConfig } from '@ckeditor/ckeditor5-core';\n\nconst mainQueueId = Symbol( 'MainQueueId' );\n\n/**\n * A watchdog for the {@link module:core/context~Context} class.\n *\n * See the {@glink features/watchdog Watchdog feature guide} to learn the rationale behind it and\n * how to use it.\n */\nexport class ContextWatchdog<TContext extends Context = Context> extends Watchdog {\n\t/**\n\t * A map of internal watchdogs for added items.\n\t */\n\tprotected _watchdogs = new Map<string, EditorWatchdog>();\n\n\t/**\n\t * The watchdog configuration.\n\t */\n\tprivate readonly _watchdogConfig: WatchdogConfig;\n\n\t/**\n\t * The current context instance.\n\t */\n\tprivate _context: TContext | null = null;\n\n\t/**\n\t * Context properties (nodes/references) that are gathered during the initial context creation\n\t * and are used to distinguish the origin of an error.\n\t */\n\tprivate _contextProps = new Set<unknown>();\n\n\t/**\n\t * An action queue, which is used to handle async functions queuing.\n\t */\n\tprivate _actionQueues = new ActionQueues();\n\n\t/**\n\t * The configuration for the {@link module:core/context~Context}.\n\t */\n\tprivate _contextConfig?: ContextConfig;\n\n\t/**\n\t * The creation method.\n\t *\n\t * @see #setCreator\n\t */\n\tdeclare protected _creator: ( config: ContextConfig ) => Promise<TContext>;\n\n\t/**\n\t * The destruction method.\n\t *\n\t * @see #setDestructor\n\t */\n\tdeclare protected _destructor: ( context: Context ) => Promise<unknown>;\n\n\t/**\n\t * The watched item.\n\t */\n\tpublic _item: unknown;\n\n\t/**\n\t * The context watchdog class constructor.\n\t *\n\t * ```ts\n\t * const watchdog = new ContextWatchdog( Context );\n\t *\n\t * await watchdog.create( contextConfiguration );\n\t *\n\t * await watchdog.add( item );\n\t * ```\n\t *\n\t * See the {@glink features/watchdog Watchdog feature guide} to learn more how to use this feature.\n\t *\n\t * @param Context The {@link module:core/context~Context} class.\n\t * @param watchdogConfig The watchdog configuration.\n\t */\n\tconstructor(\n\t\tContext: { create( ...args: any ): Promise<TContext> },\n\t\twatchdogConfig: WatchdogConfig = {}\n\t) {\n\t\tsuper( watchdogConfig );\n\n\t\tthis._watchdogConfig = watchdogConfig;\n\n\t\t// Default creator and destructor.\n\t\tthis._creator = contextConfig => Context.create( contextConfig );\n\t\tthis._destructor = context => context.destroy();\n\n\t\tthis._actionQueues.onEmpty( () => {\n\t\t\tif ( this.state === 'initializing' ) {\n\t\t\t\tthis.state = 'ready';\n\t\t\t\tthis._fire( 'stateChange' );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the context creation.\n\t * It expects a function that should return a promise (or `undefined`).\n\t *\n\t * ```ts\n\t * watchdog.setCreator( config => Context.create( config ) );\n\t * ```\n\t */\n\tpublic setCreator( creator: ( config: ContextConfig ) => Promise<TContext> ): void {\n\t\tthis._creator = creator;\n\t}\n\n\t/**\n\t * Sets the function that is responsible for the context destruction.\n\t * Overrides the default destruction function, which destroys only the context instance.\n\t * It expects a function that should return a promise (or `undefined`).\n\t *\n\t * ```ts\n\t * watchdog.setDestructor( context => {\n\t * \t// Do something before the context is destroyed.\n\t *\n\t * \treturn context\n\t * \t\t.destroy()\n\t * \t\t.then( () => {\n\t * \t\t\t// Do something after the context is destroyed.\n\t * \t\t} );\n\t * } );\n\t * ```\n\t */\n\tpublic setDestructor( destructor: ( context: Context ) => Promise<unknown> ): void {\n\t\tthis._destructor = destructor;\n\t}\n\n\t/**\n\t * The context instance. Keep in mind that this property might be changed when the context watchdog restarts,\n\t * so do not keep this instance internally. Always operate on the `ContextWatchdog#context` property.\n\t */\n\tpublic get context(): Context | null {\n\t\treturn this._context;\n\t}\n\n\t/**\n\t * Initializes the context watchdog. Once it is created, the watchdog takes care about\n\t * recreating the context and the provided items, and starts the error handling mechanism.\n\t *\n\t * ```ts\n\t * await watchdog.create( {\n\t * \tplugins: []\n\t * } );\n\t * ```\n\t *\n\t * @param contextConfig The context configuration. See {@link module:core/context~Context}.\n\t */\n\tpublic create( contextConfig: ContextConfig = {} ): Promise<unknown> {\n\t\treturn this._actionQueues.enqueue( mainQueueId, () => {\n\t\t\tthis._contextConfig = contextConfig;\n\n\t\t\treturn this._create();\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an item instance with the given `itemId`.\n\t *\n\t * ```ts\n\t * const editor1 = watchdog.getItem( 'editor1' );\n\t * ```\n\t *\n\t * @param itemId The item ID.\n\t * @returns The item instance or `undefined` if an item with a given ID has not been found.\n\t */\n\tpublic getItem( itemId: string ): unknown {\n\t\tconst watchdog = this._getWatchdog( itemId );\n\n\t\treturn watchdog._item;\n\t}\n\n\t/**\n\t * Gets the state of the given item. See {@link #state} for a list of available states.\n\t *\n\t * ```ts\n\t * const editor1State = watchdog.getItemState( 'editor1' );\n\t * ```\n\t *\n\t * @param itemId Item ID.\n\t * @returns The state of the item.\n\t */\n\tpublic getItemState( itemId: string ): WatchdogState {\n\t\tconst watchdog = this._getWatchdog( itemId );\n\n\t\treturn watchdog.state;\n\t}\n\n\t/**\n\t * Adds items to the watchdog. Once created, instances of these items will be available using the {@link #getItem} method.\n\t *\n\t * Items can be passed together as an array of objects:\n\t *\n\t * ```ts\n\t * await watchdog.add( [ {\n\t * \tid: 'editor1',\n\t * \ttype: 'editor',\n\t * \tsourceElementOrData: document.querySelector( '#editor' ),\n\t * \tconfig: {\n\t * \t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t * \t\ttoolbar: [ 'bold', 'italic', 'alignment' ]\n\t * \t},\n\t * \tcreator: ( element, config ) => ClassicEditor.create( element, config )\n\t * } ] );\n\t * ```\n\t *\n\t * Or one by one as objects:\n\t *\n\t * ```ts\n\t * await watchdog.add( {\n\t * \tid: 'editor1',\n\t * \ttype: 'editor',\n\t * \tsourceElementOrData: document.querySelector( '#editor' ),\n\t * \tconfig: {\n\t * \t\tplugins: [ Essentials, Paragraph, Bold, Italic ],\n\t * \t\ttoolbar: [ 'bold', 'italic', 'alignment' ]\n\t * \t},\n\t * \tcreator: ( element, config ) => ClassicEditor.create( element, config )\n\t * ] );\n\t * ```\n\t *\n\t * Then an instance can be retrieved using the {@link #getItem} method:\n\t *\n\t * ```ts\n\t * const editor1 = watchdog.getItem( 'editor1' );\n\t * ```\n\t *\n\t * Note that this method can be called multiple times, but for performance reasons it is better\n\t * to pass all items together.\n\t *\n\t * @param itemConfigurationOrItemConfigurations An item configuration object or an array of item configurations.\n\t */\n\tpublic add( itemConfigurationOrItemConfigurations: ArrayOrItem<ContextWatchdogItemConfiguration> ): Promise<unknown> {\n\t\tconst itemConfigurations = toArray( itemConfigurationOrItemConfigurations );\n\n\t\treturn Promise.all( itemConfigurations.map( item => {\n\t\t\treturn this._actionQueues.enqueue( item.id, () => {\n\t\t\t\tif ( this.state === 'destroyed' ) {\n\t\t\t\t\tthrow new Error( 'Cannot add items to destroyed watchdog.' );\n\t\t\t\t}\n\n\t\t\t\tif ( !this._context ) {\n\t\t\t\t\tthrow new Error( 'Context was not created yet. You should call the `ContextWatchdog#create()` method first.' );\n\t\t\t\t}\n\n\t\t\t\tlet watchdog: EditorWatchdog;\n\n\t\t\t\tif ( this._watchdogs.has( item.id ) ) {\n\t\t\t\t\tthrow new Error( `Item with the given id is already added: '${ item.id }'.` );\n\t\t\t\t}\n\n\t\t\t\tif ( item.type === 'editor' ) {\n\t\t\t\t\twatchdog = new EditorWatchdog( null, this._watchdogConfig );\n\t\t\t\t\twatchdog.setCreator( item.creator );\n\t\t\t\t\twatchdog._setExcludedProperties( this._contextProps );\n\n\t\t\t\t\tif ( item.destructor ) {\n\t\t\t\t\t\twatchdog.setDestructor( item.destructor );\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._watchdogs.set( item.id, watchdog );\n\n\t\t\t\t\t// Enqueue the internal watchdog errors within the main queue.\n\t\t\t\t\t// And propagate the internal `error` events as `itemError` event.\n\t\t\t\t\twatchdog.on( 'error', ( evt, { error, causesRestart } ) => {\n\t\t\t\t\t\tthis._fire( 'itemError', { itemId: item.id, error } );\n\n\t\t\t\t\t\t// Do not enqueue the item restart action if the item will not restart.\n\t\t\t\t\t\tif ( !causesRestart ) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._actionQueues.enqueue( item.id, () => new Promise<void>( res => {\n\t\t\t\t\t\t\tconst rethrowRestartEventOnce = () => {\n\t\t\t\t\t\t\t\twatchdog.off( 'restart', rethrowRestartEventOnce );\n\n\t\t\t\t\t\t\t\tthis._fire( 'itemRestart', { itemId: item.id } );\n\n\t\t\t\t\t\t\t\tres();\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\twatchdog.on( 'restart', rethrowRestartEventOnce );\n\t\t\t\t\t\t} ) );\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn watchdog.create( item.sourceElementOrData, item.config, this._context );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( `Not supported item type: '${ item.type }'.` );\n\t\t\t\t}\n\t\t\t} );\n\t\t} ) );\n\t}\n\n\t/**\n\t * Removes and destroys item(s) with given ID(s).\n\t *\n\t * ```ts\n\t * await watchdog.remove( 'editor1' );\n\t * ```\n\t *\n\t * Or\n\t *\n\t * ```ts\n\t * await watchdog.remove( [ 'editor1', 'editor2' ] );\n\t * ```\n\t *\n\t * @param itemIdOrItemIds Item ID or an array of item IDs.\n\t */\n\tpublic remove( itemIdOrItemIds: ArrayOrItem<string> ): Promise<unknown> {\n\t\tconst itemIds = toArray( itemIdOrItemIds );\n\n\t\treturn Promise.all( itemIds.map( itemId => {\n\t\t\treturn this._actionQueues.enqueue( itemId, () => {\n\t\t\t\tconst watchdog = this._getWatchdog( itemId );\n\n\t\t\t\tthis._watchdogs.delete( itemId );\n\n\t\t\t\treturn watchdog.destroy();\n\t\t\t} );\n\t\t} ) );\n\t}\n\n\t/**\n\t * Destroys the context watchdog and all added items.\n\t * Once the context watchdog is destroyed, new items cannot be added.\n\t *\n\t * ```ts\n\t * await watchdog.destroy();\n\t * ```\n\t */\n\tpublic override destroy(): Promise<unknown> {\n\t\treturn this._actionQueues.enqueue( mainQueueId, () => {\n\t\t\tthis.state = 'destroyed';\n\t\t\tthis._fire( 'stateChange' );\n\n\t\t\tsuper.destroy();\n\n\t\t\treturn this._destroy();\n\t\t} );\n\t}\n\n\t/**\n\t * Restarts the context watchdog.\n\t */\n\tprotected _restart(): Promise<unknown> {\n\t\treturn this._actionQueues.enqueue( mainQueueId, () => {\n\t\t\tthis.state = 'initializing';\n\t\t\tthis._fire( 'stateChange' );\n\n\t\t\treturn this._destroy()\n\t\t\t\t.catch( err => {\n\t\t\t\t\tconsole.error( 'An error happened during destroying the context or items.', err );\n\t\t\t\t} )\n\t\t\t\t.then( () => this._create() )\n\t\t\t\t.then( () => this._fire( 'restart' ) );\n\t\t} );\n\t}\n\n\t/**\n\t * Initializes the context watchdog.\n\t */\n\tprivate _create(): Promise<unknown> {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._startErrorHandling();\n\n\t\t\t\treturn this._creator( this._contextConfig! );\n\t\t\t} )\n\t\t\t.then( context => {\n\t\t\t\tthis._context = context;\n\t\t\t\tthis._contextProps = getSubNodes( this._context );\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tArray.from( this._watchdogs.values() )\n\t\t\t\t\t\t.map( watchdog => {\n\t\t\t\t\t\t\twatchdog._setExcludedProperties( this._contextProps );\n\n\t\t\t\t\t\t\treturn watchdog.create( undefined, undefined, this._context! );\n\t\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t} );\n\t}\n\n\t/**\n\t * Destroys the context instance and all added items.\n\t */\n\tprivate _destroy(): Promise<unknown> {\n\t\treturn Promise.resolve()\n\t\t\t.then( () => {\n\t\t\t\tthis._stopErrorHandling();\n\n\t\t\t\tconst context = this._context!;\n\n\t\t\t\tthis._context = null;\n\t\t\t\tthis._contextProps = new Set();\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tArray.from( this._watchdogs.values() )\n\t\t\t\t\t\t.map( watchdog => watchdog.destroy() )\n\t\t\t\t)\n\t\t\t\t\t// Context destructor destroys each editor.\n\t\t\t\t\t.then( () => this._destructor( context ) );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Returns the watchdog for a given item ID.\n\t *\n\t * @param itemId Item ID.\n\t */\n\tprotected _getWatchdog( itemId: string ): Watchdog {\n\t\tconst watchdog = this._watchdogs.get( itemId );\n\n\t\tif ( !watchdog ) {\n\t\t\tthrow new Error( `Item with the given id was not registered: ${ itemId }.` );\n\t\t}\n\n\t\treturn watchdog;\n\t}\n\n\t/**\n\t * Checks whether an error comes from the context instance and not from the item instances.\n\t *\n\t * @internal\n\t */\n\tpublic _isErrorComingFromThisItem( error: CKEditorError ): boolean {\n\t\tfor ( const watchdog of this._watchdogs.values() ) {\n\t\t\tif ( watchdog._isErrorComingFromThisItem( error ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn areConnectedThroughProperties( this._context, error.context );\n\t}\n}\n\n/**\n * Fired after the watchdog restarts the context and the added items because of a crash.\n *\n * ```ts\n * watchdog.on( 'restart', () => {\n * \tconsole.log( 'The context has been restarted.' );\n * } );\n * ```\n *\n * @eventName ~ContextWatchdog#restart\n */\nexport type ContextWatchdogRestartEvent = {\n\tname: 'restart';\n\targs: [];\n\treturn: undefined;\n};\n\n/**\n * Fired when a new error occurred in one of the added items.\n *\n * ```ts\n * watchdog.on( 'itemError', ( evt, { error, itemId } ) => {\n * \tconsole.log( `An error occurred in an item with the '${ itemId }' ID.` );\n * } );\n * ```\n *\n * @eventName ~ContextWatchdog#itemError\n */\nexport type ContextWatchdogItemErrorEvent = {\n\tname: 'itemError';\n\targs: [ ContextWatchdogItemErrorEventData ];\n\treturn: undefined;\n};\n\n/**\n * The `itemError` event data.\n */\nexport type ContextWatchdogItemErrorEventData = {\n\titemId: string;\n\terror: Error;\n};\n\n/**\n * Fired after an item has been restarted.\n *\n * ```ts\n * \twatchdog.on( 'itemRestart', ( evt, { itemId } ) => {\n *\t\tconsole.log( 'An item with with the '${ itemId }' ID has been restarted.' );\n * \t} );\n * ```\n *\n * @eventName ~ContextWatchdog#itemRestart\n */\nexport type ContextWatchdogItemRestartEvent = {\n\tname: 'itemRestart';\n\targs: [ ContextWatchdogItemRestartEventData ];\n\treturn: undefined;\n};\n\n/**\n * The `itemRestart` event data.\n */\nexport type ContextWatchdogItemRestartEventData = {\n\titemId: string;\n};\n\n/**\n * Manager of action queues that allows queuing async functions.\n */\nclass ActionQueues {\n\tpublic _onEmptyCallbacks: Array<() => void> = [];\n\tpublic _queues = new Map<symbol | string | number, Promise<unknown>>();\n\tpublic _activeActions = 0;\n\n\t/**\n\t * Used to register callbacks that will be run when the queue becomes empty.\n\t *\n\t * @param onEmptyCallback A callback that will be run whenever the queue becomes empty.\n\t */\n\tpublic onEmpty( onEmptyCallback: () => void ): void {\n\t\tthis._onEmptyCallbacks.push( onEmptyCallback );\n\t}\n\n\t/**\n\t * It adds asynchronous actions (functions) to the proper queue and runs them one by one.\n\t *\n\t * @param queueId The action queue ID.\n\t * @param action A function that should be enqueued.\n\t */\n\tpublic enqueue( queueId: symbol | string | number, action: () => unknown ): Promise<unknown> {\n\t\tconst isMainAction = queueId === mainQueueId;\n\n\t\tthis._activeActions++;\n\n\t\tif ( !this._queues.get( queueId ) ) {\n\t\t\tthis._queues.set( queueId, Promise.resolve() );\n\t\t}\n\n\t\t// List all sources of actions that the current action needs to await for.\n\t\t// For the main action wait for all other actions.\n\t\t// For the item action wait only for the item queue and the main queue.\n\t\tconst awaitedActions = isMainAction ?\n\t\t\tPromise.all( this._queues.values() ) :\n\t\t\tPromise.all( [ this._queues.get( mainQueueId ), this._queues.get( queueId ) ] );\n\n\t\tconst queueWithAction = awaitedActions.then( action );\n\n\t\t// Catch all errors in the main queue to stack promises even if an error occurred in the past.\n\t\tconst nonErrorQueue = queueWithAction.catch( () => {} );\n\n\t\tthis._queues.set( queueId, nonErrorQueue );\n\n\t\treturn queueWithAction.finally( () => {\n\t\t\tthis._activeActions--;\n\n\t\t\tif ( this._queues.get( queueId ) === nonErrorQueue && this._activeActions === 0 ) {\n\t\t\t\tthis._onEmptyCallbacks.forEach( cb => cb() );\n\t\t\t}\n\t\t} );\n\t}\n}\n\n/**\n * Transforms any value to an array. If the provided value is already an array, it is returned unchanged.\n *\n * @param elementOrArray The value to transform to an array.\n * @returns An array created from data.\n */\nfunction toArray<T>( elementOrArray: ArrayOrItem<T> ): Array<T> {\n\treturn Array.isArray( elementOrArray ) ? elementOrArray : [ elementOrArray ];\n}\n\n/**\n * The watchdog item configuration interface.\n */\nexport interface ContextWatchdogItemConfiguration {\n\n\t/**\n\t * id A unique item identificator.\n\t */\n\tid: string;\n\n\t/**\n\t * The type of the item to create. At the moment, only `'editor'` is supported.\n\t */\n\ttype: 'editor';\n\n\t/**\n\t * A function that initializes the item (the editor). The function takes editor initialization arguments\n\t * and should return a promise. For example: `( el, config ) => ClassicEditor.create( el, config )`.\n\t */\n\tcreator: EditorWatchdogCreatorFunction;\n\n\t/**\n\t * A function that destroys the item instance (the editor). The function\n\t * takes an item and should return a promise. For example: `editor => editor.destroy()`\n\t */\n\tdestructor?: ( editor: Editor ) => Promise<unknown>;\n\n\t/**\n\t * The source element or data that will be passed\n\t * as the first argument to the `Editor.create()` method.\n\t */\n\tsourceElementOrData: string | HTMLElement;\n\n\t/**\n\t * An editor configuration.\n \t */\n\tconfig: EditorConfig;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module watchdog/actionsrecorder\n */\n\n/* istanbul ignore file -- @preserve */\n\nimport type {\n\tCommand,\n\tEditor\n} from '@ckeditor/ckeditor5-core';\n\nimport type {\n\tViewTypeCheckable,\n\tModelTypeCheckable\n} from '@ckeditor/ckeditor5-engine';\n\nimport type {\n\tActionsRecorderEntry,\n\tActionsRecorderEntryEditorSnapshot,\n\tActionsRecorderFilterCallback,\n\tActionsRecorderErrorCallback,\n\tActionsRecorderMaxEntriesCallback\n} from './actionsrecorderconfig.js';\n\nimport { isPlainObject } from 'es-toolkit/compat';\n\n/**\n * A plugin that records user actions and editor state changes for debugging purposes. It tracks commands execution, model operations,\n * UI interactions, and document events. It just collects data locally, and does not send it anywhere, integrator is responsible\n * for gathering data from this plugin for further processing.\n *\n * **Important! `ActionsRecorder` is an experimental feature, and may become deprecated.**\n *\n * By default, plugin stores latest 1000 action entries. Integrator can register an `onError` callback to collect those entries\n * in case of exception. Integrator should augment this data with application specific data such as page-id or session-id,\n * depending on the application. Augmented data should be processed by the integrator, for example integrator should send it\n * to some data collecting endpoint for later analysis.\n *\n * Example:\n *\n * ```ts\n * \tClassicEditor\n * \t\t.create( editorElement, {\n * \t\t\tplugins: [ ActionsRecorder, ... ],\n * \t\t\tactionsRecorder: {\n * \t\t\t\tmaxEntries: 1000, // This is the default value and could be adjusted.\n *\n * \t\t\t\tonError( error, entries ) {\n * \t\t\t\t\tconsole.error( 'ActionsRecorder - Error detected:', error );\n * \t\t\t\t\tconsole.warn( 'Actions recorded before error:', entries );\n *\n * \t\t\t\t\tthis.flushEntries();\n *\n * \t\t\t\t\t// Integrator should send and store the entries. The error is already in the last entry in serializable form.\n * \t\t\t\t}\n * \t\t\t}\n * \t\t} )\n * \t\t.then( ... )\n * \t\t.catch( ... );\n * ```\n *\n * Alternatively integrator could continuously collect actions in batches and send them to theirs endpoint for later analysis:\n *\n * ```ts\n * \tClassicEditor\n * \t\t.create( editorElement, {\n * \t\t\tplugins: [ ActionsRecorder, ... ],\n * \t\t\tactionsRecorder: {\n * \t\t\t\tmaxEntries: 50, // This is the batch size.\n *\n * \t\t\t\tonMaxEntries() {\n * \t\t\t\t\tconst entries = this.getEntries();\n *\n * \t\t\t\t\tthis.flushEntries();\n *\n * \t\t\t\t\tconsole.log( 'ActionsRecorder - Batch of entries:', entries );\n *\n * \t\t\t\t\t// Integrator should send and store the entries.\n * \t\t\t\t},\n *\n * \t\t\t\tonError( error, entries ) {\n * \t\t\t\t\tconsole.error( 'ActionsRecorder - Error detected:', error );\n * \t\t\t\t\tconsole.warn( 'Actions recorded before error:', entries );\n *\n * \t\t\t\t\tthis.flushEntries();\n *\n * \t\t\t\t\t// Integrator should send and store the entries. The error is already in the last entry in serializable form.\n * \t\t\t\t}\n * \t\t\t}\n * \t\t} )\n * \t\t.then( ... )\n * \t\t.catch( ... );\n * ```\n *\n * See {@link module:watchdog/actionsrecorderconfig~ActionsRecorderConfig plugin configuration} for more details.\n *\n */\nexport class ActionsRecorder {\n\t/**\n\t * The editor instance.\n\t */\n\tpublic readonly editor: Editor;\n\n\t/**\n\t * Array storing all recorded action entries with their context and state snapshots.\n\t */\n\tprivate _entries: Array<ActionsRecorderEntry> = [];\n\n\t/**\n\t * Stack tracking nested action frames to maintain call hierarchy.\n\t */\n\tprivate _frameStack: Array<ActionsRecorderEntry> = [];\n\n\t/**\n\t * Set of already reported errors used to notify only once for each error (not on every try-catch nested block).\n\t */\n\tprivate _errors = new Set<Error>();\n\n\t/**\n\t * Maximum number of action entries to keep in memory.\n\t */\n\tprivate _maxEntries: number;\n\n\t/**\n\t * Error callback.\n\t */\n\tprivate _errorCallback?: ActionsRecorderErrorCallback;\n\n\t/**\n\t * Filter function to determine which entries should be stored.\n\t */\n\tprivate _filterCallback?: ActionsRecorderFilterCallback;\n\n\t/**\n\t * Callback triggered every time count of recorded entries reaches maxEntries.\n\t */\n\tprivate _maxEntriesCallback: ActionsRecorderMaxEntriesCallback;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'ActionsRecorder' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic constructor( editor: Editor ) {\n\t\tthis.editor = editor;\n\n\t\teditor.config.define( 'actionsRecorder.maxEntries', 1000 );\n\n\t\tconst config = editor.config.get( 'actionsRecorder' )!;\n\n\t\tthis._maxEntries = config.maxEntries!;\n\t\tthis._filterCallback = config.onFilter;\n\t\tthis._errorCallback = config.onError;\n\t\tthis._maxEntriesCallback = config.onMaxEntries || this._maxEntriesDefaultHandler;\n\n\t\tthis._tapCommands();\n\t\tthis._tapOperationApply();\n\t\tthis._tapModelMethods();\n\t\tthis._tapModelSelection();\n\t\tthis._tapComponentFactory();\n\t\tthis._tapViewDocumentEvents();\n\t}\n\n\t/**\n\t * Returns all recorded action entries.\n\t */\n\tpublic getEntries(): Array<ActionsRecorderEntry> {\n\t\t// Return a shallow copy instead of reference as this array could be modified.\n\t\treturn this._entries.slice();\n\t}\n\n\t/**\n\t * Flushes all recorded entries.\n\t */\n\tpublic flushEntries(): void {\n\t\tthis._entries = [];\n\t}\n\n\t/**\n\t * Creates a new action frame and adds it to the recording stack.\n\t *\n\t * @param action The name/type of the action being recorded.\n\t * @param params Optional parameters associated with the event.\n\t * @returns The created call frame object.\n\t */\n\tprivate _enterFrame( action: string, params?: Array<unknown> ): ActionsRecorderEntry {\n\t\tconst callFrame: ActionsRecorderEntry = {\n\t\t\ttimeStamp: new Date().toISOString(),\n\t\t\t...this._frameStack.length && { parentEntry: this._frameStack.at( -1 ) },\n\t\t\taction,\n\t\t\tparams: params?.map( param => serializeValue( param ) ),\n\t\t\tbefore: this._buildStateSnapshot()\n\t\t};\n\n\t\t// Apply filter if configured, only add to entries if filter passes.\n\t\tif ( !this._filterCallback || this._filterCallback( callFrame, this._entries ) ) {\n\t\t\t// Add the call frame to the entries.\n\t\t\tthis._entries.push( callFrame );\n\t\t}\n\n\t\tthis._frameStack.push( callFrame );\n\n\t\treturn callFrame;\n\t}\n\n\t/**\n\t * Closes an action frame and records its final state and results.\n\t *\n\t * @param callFrame The call frame to close.\n\t * @param result Optional result value from the action.\n\t * @param error Optional error that occurred during the action.\n\t */\n\tprivate _leaveFrame( callFrame: ActionsRecorderEntry, result?: any, error?: any ): void {\n\t\tconst topFrame = this._frameStack.pop();\n\n\t\t// Handle scenario when the stack has been cleared in the meantime\n\t\t// or the callFrame is not the top frame.\n\t\tif ( !topFrame || topFrame !== callFrame ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( result !== undefined ) {\n\t\t\ttopFrame.result = serializeValue( result );\n\t\t}\n\n\t\tif ( error ) {\n\t\t\ttopFrame.error = serializeValue( error );\n\t\t}\n\n\t\ttopFrame.after = this._buildStateSnapshot();\n\n\t\tif ( error ) {\n\t\t\tthis._callErrorCallback( error );\n\t\t}\n\n\t\tif ( this._frameStack.length == 0 ) {\n\t\t\tthis._errors.clear();\n\t\t}\n\n\t\t// Enforce max entries limit after leaving the frame so that complete entry is provided.\n\t\tif ( this._entries.length >= this._maxEntries ) {\n\t\t\tthis._maxEntriesCallback();\n\t\t}\n\t}\n\n\t/**\n\t * Builds a snapshot of the current editor state including document version,\n\t * read-only status, focus state, and model selection.\n\t *\n\t * @returns An object containing the current editor state snapshot.\n\t */\n\tprivate _buildStateSnapshot(): ActionsRecorderEntryEditorSnapshot {\n\t\tconst { model, isReadOnly, editing } = this.editor;\n\n\t\treturn {\n\t\t\tdocumentVersion: model.document.version,\n\t\t\teditorReadOnly: isReadOnly,\n\t\t\teditorFocused: editing.view.document.isFocused,\n\t\t\tmodelSelection: serializeValue( model.document.selection )\n\t\t};\n\t}\n\n\t/**\n\t * Sets up recording for all editor commands, both existing and future ones.\n\t * Taps into the command execution to track when commands are run.\n\t */\n\tprivate _tapCommands() {\n\t\t// Tap already registered commands.\n\t\tfor ( const [ commandName, command ] of this.editor.commands ) {\n\t\t\tthis._tapCommand( commandName, command );\n\t\t}\n\n\t\t// Tap commands registered after the constructor was called.\n\t\ttapObjectMethod( this.editor.commands, 'add', {\n\t\t\tbefore: ( callContext, [ commandName, command ] ) => {\n\t\t\t\tthis._tapCommand( commandName, command );\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Sets up recording for model operation applications.\n\t * Tracks when operations are applied to the model document.\n\t */\n\tprivate _tapOperationApply() {\n\t\ttapObjectMethod( this.editor.model, 'applyOperation', {\n\t\t\tbefore: ( callContext, [ operation ] ) => {\n\t\t\t\t// Ignore operations applied to document fragments.\n\t\t\t\tif ( operation.baseVersion === null ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tcallContext.callFrame = this._enterFrame( 'model.applyOperation', [ operation ] );\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tafter: callContext => {\n\t\t\t\tthis._leaveFrame( callContext.callFrame );\n\t\t\t},\n\t\t\terror: ( callContext, error ) => {\n\t\t\t\tthis._leaveFrame( callContext.callFrame, undefined, error );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Sets up recording for key model methods like insertContent, insertObject, and deleteContent.\n\t * These methods represent high-level model manipulation operations.\n\t */\n\tprivate _tapModelMethods() {\n\t\tfor ( const methodName of [ 'insertContent', 'insertObject', 'deleteContent' ] ) {\n\t\t\ttapObjectMethod( this.editor.model, methodName, {\n\t\t\t\tbefore: ( callContext, ...params ) => {\n\t\t\t\t\tcallContext.callFrame = this._enterFrame( `model.${ methodName }`, params );\n\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\t\t\t\tafter: ( callContext, result ) => {\n\t\t\t\t\tthis._leaveFrame( callContext.callFrame, result );\n\t\t\t\t},\n\t\t\t\terror: ( callContext, error ) => {\n\t\t\t\t\tthis._leaveFrame( callContext.callFrame, undefined, error );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Sets up recording for model selection changes.\n\t * Tracks when the selection range, attributes, or markers change.\n\t */\n\tprivate _tapModelSelection() {\n\t\tconst events = [ 'change:range', 'change:attribute', 'change:marker' ];\n\n\t\tthis._tapFireMethod( this.editor.model.document.selection, events, {\n\t\t\teventSource: 'model-selection'\n\t\t} );\n\t}\n\n\t/**\n\t * Sets up recording for a specific command execution.\n\t *\n\t * @param commandName The name of the command to record.\n\t * @param command The command instance to tap into.\n\t */\n\tprivate _tapCommand( commandName: string, command: Command ) {\n\t\ttapObjectMethod( command, 'execute', {\n\t\t\tbefore: ( callContext, params ) => {\n\t\t\t\tcallContext.callFrame = this._enterFrame( `commands.${ commandName }:execute`, params );\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tafter: ( callContext, result ) => {\n\t\t\t\tthis._leaveFrame( callContext.callFrame, result );\n\t\t\t},\n\t\t\terror: ( callContext, error ) => {\n\t\t\t\tthis._leaveFrame( callContext.callFrame, undefined, error );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Sets up recording for UI component factory creation and component interactions.\n\t * Tracks when components are created and their execute events.\n\t */\n\tprivate _tapComponentFactory() {\n\t\ttapObjectMethod( this.editor.ui.componentFactory, 'create', {\n\t\t\tbefore: ( callContext, [ componentName ] ) => {\n\t\t\t\tcallContext.componentName = componentName;\n\t\t\t\tcallContext.callFrame = this._enterFrame( `component-factory.create:${ componentName }` );\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tafter: ( callContext, componentInstance ) => {\n\t\t\t\tconst executeContext = {\n\t\t\t\t\t...callContext,\n\t\t\t\t\teventSource: `component.${ callContext.componentName }`\n\t\t\t\t};\n\n\t\t\t\tif ( typeof componentInstance.fire == 'function' ) {\n\t\t\t\t\tthis._tapFireMethod( componentInstance, [ 'execute' ], executeContext );\n\t\t\t\t}\n\n\t\t\t\tif ( typeof componentInstance.panelView?.fire == 'function' ) {\n\t\t\t\t\tthis._tapFireMethod( componentInstance.panelView, [ 'execute' ], executeContext );\n\t\t\t\t}\n\n\t\t\t\tif ( typeof componentInstance.buttonView?.actionView?.fire == 'function' ) {\n\t\t\t\t\tthis._tapFireMethod( componentInstance.buttonView.actionView, [ 'execute' ], executeContext );\n\t\t\t\t}\n\n\t\t\t\tthis._leaveFrame( callContext.callFrame );\n\t\t\t},\n\t\t\terror: ( callContext, error ) => {\n\t\t\t\tthis._leaveFrame( callContext.callFrame, undefined, error );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Sets up recording for view document events like clicks, keyboard input,\n\t * selection changes, and other user interactions.\n\t */\n\tprivate _tapViewDocumentEvents() {\n\t\tconst events = [\n\t\t\t'click',\n\t\t\t'mousedown',\n\t\t\t'mouseup',\n\t\t\t'pointerdown',\n\t\t\t'pointerup',\n\t\t\t'focus',\n\t\t\t'blur',\n\n\t\t\t'keydown',\n\t\t\t'keyup',\n\t\t\t'selectionChange',\n\t\t\t'compositionstart',\n\t\t\t'compositionend',\n\t\t\t'beforeinput',\n\t\t\t'mutations',\n\t\t\t'enter',\n\t\t\t'delete',\n\t\t\t'insertText',\n\n\t\t\t'paste',\n\t\t\t'copy',\n\t\t\t'cut',\n\t\t\t'dragstart',\n\t\t\t'drop'\n\t\t];\n\n\t\tthis._tapFireMethod( this.editor.editing.view.document, events, { eventSource: 'observers' } );\n\t}\n\n\t/**\n\t * Sets up recording for specific events fired by an emitter object.\n\t *\n\t * @param emitter The object that fires events to be recorded.\n\t * @param eventNames Array of event names to record.\n\t * @param context Additional context to include with recorded events.\n\t */\n\tprivate _tapFireMethod( emitter: any, eventNames: Array<string>, context: Record<string, any> = {} ) {\n\t\ttapObjectMethod( emitter, 'fire', {\n\t\t\tbefore: ( callContext, [ eventInfoOrName, ...params ] ) => {\n\t\t\t\tconst eventName = typeof eventInfoOrName == 'string' ? eventInfoOrName : eventInfoOrName.name;\n\n\t\t\t\tif ( !eventNames.includes( eventName ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tcallContext.callFrame = this._enterFrame( `${ callContext.eventSource }:${ eventName }`, params );\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tafter: ( callContext, result ) => {\n\t\t\t\tthis._leaveFrame( callContext.callFrame, result );\n\t\t\t},\n\t\t\terror: ( callContext, error ) => {\n\t\t\t\tthis._leaveFrame( callContext.callFrame, undefined, error );\n\t\t\t}\n\t\t}, context );\n\t}\n\n\t/**\n\t * Triggers error callback.\n\t */\n\tprivate _callErrorCallback( error?: any ): void {\n\t\tif ( !this._errorCallback || this._errors.has( error ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._errors.add( error );\n\n\t\ttry {\n\t\t\t// Provide a shallow copy of entries as it might be modified before error handler serializes it.\n\t\t\tthis._errorCallback( error, this.getEntries() );\n\t\t} catch ( observerError ) {\n\t\t\t// Silently catch observer errors to prevent them from affecting the recording.\n\t\t\tconsole.error( 'ActionsRecorder onError callback error:', observerError );\n\t\t}\n\t}\n\n\t/**\n\t * The default handler for maxEntries callback.\n\t */\n\tprivate _maxEntriesDefaultHandler() {\n\t\tthis._entries.shift();\n\t}\n}\n\n/**\n * Creates a wrapper around a method to record its calls, results, and errors.\n *\n * @internal\n *\n * @param object The object containing the method to tap.\n * @param methodName The name of the method to tap.\n * @param tap The tap configuration with before/after/error hooks.\n * @param context Additional context to include with the method calls.\n */\nexport function tapObjectMethod(\n\tobject: any,\n\tmethodName: string,\n\ttap: MethodTap,\n\tcontext: Record<string, any> = {}\n): void {\n\tconst originalMethod = object[ methodName ];\n\n\tif ( originalMethod[ Symbol.for( 'Tapped method' ) ] ) {\n\t\treturn;\n\t}\n\n\tobject[ methodName ] = ( ...args: Array<any> ) => {\n\t\tconst callContext = Object.assign( {}, context );\n\t\tlet shouldHandle;\n\n\t\ttry {\n\t\t\tshouldHandle = tap.before?.( callContext, args );\n\n\t\t\tconst result = originalMethod.apply( object, args );\n\n\t\t\tif ( shouldHandle ) {\n\t\t\t\ttap.after?.( callContext, result );\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} catch ( error ) {\n\t\t\tif ( shouldHandle ) {\n\t\t\t\ttap.error?.( callContext, error );\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t};\n\n\tobject[ methodName ][ Symbol.for( 'Tapped method' ) ] = originalMethod;\n}\n\n/**\n * Represents a method tap with optional hooks for before, after, and error handling.\n */\ninterface MethodTap extends Record<string, any> {\n\n\t/**\n\t * Hook called before the original method execution.\n\t *\n\t * @param context The call context object for storing state between hooks.\n\t * @param args The arguments passed to the original method.\n\t * @returns True if the method call should be recorded, false to ignore it.\n\t */\n\tbefore?: ( context: Record<string, any>, args: Array<any> ) => boolean;\n\n\t/**\n\t * Hook called after successful method execution.\n\t *\n\t * @param context The call context object with state from the before hook.\n\t * @param result The result returned by the original method.\n\t */\n\tafter?: ( context: Record<string, any>, result: any ) => void;\n\n\t/**\n\t * Hook called when the method execution throws an error.\n\t *\n\t * @param context The call context object with state from the before hook.\n\t * @param error The error thrown by the original method.\n\t */\n\terror?: ( context: Record<string, any>, error: any ) => void;\n}\n\n/**\n * Serializes a value into a JSON-serializable format.\n *\n * @internal\n *\n * @param value The value to serialize.\n * @param visited Set of already serialized objects to avoid circular references.\n * @returns A JSON-serializable representation of the value.\n */\nexport function serializeValue( value: any, visited = new WeakSet() ): any {\n\tif ( !value || [ 'boolean', 'number', 'string' ].includes( typeof value ) ) {\n\t\treturn value;\n\t}\n\n\tif ( typeof value.toJSON == 'function' ) {\n\t\tconst jsonData = value.toJSON();\n\n\t\t// Make sure that toJSON returns plain object, otherwise it could be just a clone with circular references.\n\t\tif ( isPlainObject( jsonData ) || Array.isArray( jsonData ) || [ 'string', 'number', 'boolean' ].includes( typeof jsonData ) ) {\n\t\t\treturn serializeValue( jsonData, visited );\n\t\t}\n\t}\n\n\tif ( value instanceof Error ) {\n\t\treturn {\n\t\t\tname: value.name,\n\t\t\tmessage: value.message,\n\t\t\tstack: value.stack\n\t\t};\n\t}\n\n\t// Most TypeCheckable should implement toJSON method so this is a fallback for other TypeCheckable objects.\n\tif ( isTypeCheckable( value ) || typeof value != 'object' ) {\n\t\treturn {\n\t\t\ttype: typeof value,\n\t\t\tconstructor: value.constructor?.name || 'unknown',\n\t\t\tstring: String( value )\n\t\t};\n\t}\n\n\tif ( value instanceof File || value instanceof Blob || value instanceof FormData || value instanceof DataTransfer ) {\n\t\treturn String( value );\n\t}\n\n\tif ( visited.has( value ) ) {\n\t\treturn;\n\t}\n\n\tvisited.add( value );\n\n\t// Arrays.\n\tif ( Array.isArray( value ) ) {\n\t\treturn value.length ? value.map( item => serializeValue( item, visited ) ) : undefined;\n\t}\n\n\t// Other objects (plain, instances of classes, or events).\n\tconst result: Record<string, any> = {};\n\tconst ignoreFields: Array<string> = [];\n\n\t// DOM event additional fields.\n\tif ( value.domEvent ) {\n\t\tignoreFields.push( 'domEvent', 'domTarget', 'view', 'document' );\n\n\t\tresult.domEvent = serializeDomEvent( value.domEvent );\n\t\tresult.target = serializeValue( value.target );\n\n\t\tif ( value.dataTransfer ) {\n\t\t\tresult.dataTransfer = {\n\t\t\t\ttypes: value.dataTransfer.types,\n\t\t\t\thtmlData: value.dataTransfer.getData( 'text/html' ),\n\t\t\t\tfiles: serializeValue( value.dataTransfer.files )\n\t\t\t};\n\t\t}\n\t}\n\n\t// Other object types.\n\tfor ( const [ key, val ] of Object.entries( value ) ) {\n\t\t// Ignore private fields, DOM events serialized above, and decorated methods.\n\t\tif ( key.startsWith( '_' ) || ignoreFields.includes( key ) || typeof val == 'function' ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst serializedValue = serializeValue( val, visited );\n\n\t\tif ( serializedValue !== undefined ) {\n\t\t\tresult[ key ] = serializedValue;\n\t\t}\n\t}\n\n\tif ( Symbol.iterator in value ) {\n\t\tconst items = Array.from( value[ Symbol.iterator ]() ).map( item => serializeValue( item, visited ) );\n\n\t\tif ( items.length ) {\n\t\t\tresult._items = items;\n\t\t}\n\t}\n\n\treturn Object.keys( result ).length ? result : undefined;\n}\n\n/**\n * Serializes a DOM event into a plain object representation.\n *\n * Extracts common properties from DOM events such as type, target information,\n * coordinates, key codes, and other relevant event data for debugging purposes.\n *\n * @param event The DOM event to serialize.\n * @returns A serialized object containing the event's key properties.\n */\nfunction serializeDomEvent( event: Event ): any {\n\tlet serialized: Record<string, any> = {\n\t\ttype: event.type,\n\t\ttarget: serializeDOMTarget( event.target )\n\t};\n\n\t// Add mouse event properties.\n\tif ( event instanceof MouseEvent ) {\n\t\tserialized = {\n\t\t\t...serialized,\n\t\t\tbutton: event.button,\n\t\t\tbuttons: event.buttons,\n\t\t\tctrlKey: event.ctrlKey,\n\t\t\tshiftKey: event.shiftKey,\n\t\t\taltKey: event.altKey,\n\t\t\tmetaKey: event.metaKey\n\t\t};\n\t}\n\n\t// Add keyboard event properties.\n\tif ( event instanceof KeyboardEvent ) {\n\t\tserialized = {\n\t\t\t...serialized,\n\t\t\tkey: event.key,\n\t\t\tcode: event.code,\n\t\t\tkeyCode: event.keyCode,\n\t\t\tctrlKey: event.ctrlKey,\n\t\t\tshiftKey: event.shiftKey,\n\t\t\taltKey: event.altKey,\n\t\t\tmetaKey: event.metaKey,\n\t\t\trepeat: event.repeat\n\t\t};\n\t}\n\n\t// Add input event properties.\n\tif ( event instanceof InputEvent ) {\n\t\tserialized = {\n\t\t\t...serialized,\n\t\t\tdata: event.data,\n\t\t\tinputType: event.inputType,\n\t\t\tisComposing: event.isComposing\n\t\t};\n\t}\n\n\t// Add pointer event properties.\n\tif ( event instanceof PointerEvent ) {\n\t\tserialized = {\n\t\t\t...serialized,\n\t\t\tisPrimary: event.isPrimary\n\t\t};\n\t}\n\n\t/**\n\t * Serializes a DOM event target into a plain object representation.\n\t *\n\t * @param target The DOM event target to serialize.\n\t * @returns A serialized object containing the target's information.\n\t */\n\tfunction serializeDOMTarget( target: EventTarget | null ) {\n\t\tif ( !target ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( target instanceof Element ) {\n\t\t\treturn {\n\t\t\t\ttagName: target.tagName,\n\t\t\t\tclassName: target.className,\n\t\t\t\tid: target.id\n\t\t\t};\n\t\t}\n\n\t\tif ( target instanceof Window || target instanceof Document ) {\n\t\t\treturn {\n\t\t\t\ttype: target.constructor.name\n\t\t\t};\n\t\t}\n\n\t\treturn {};\n\t}\n\n\treturn serialized;\n}\n\n/**\n * Checks if a value is type-checkable, meaning it has an `is` method.\n */\nfunction isTypeCheckable( value: any ): value is ViewTypeCheckable & ModelTypeCheckable {\n\treturn value && typeof value.is === 'function';\n}\n"]}