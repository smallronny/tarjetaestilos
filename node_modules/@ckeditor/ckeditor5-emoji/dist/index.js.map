{"version":3,"sources":["index.js","../src/utils/isemojisupported.ts","../src/emojiutils.ts","../src/emojirepository.ts","../src/emojimention.ts","../src/emojicommand.ts","../src/ui/emojigridview.ts","../src/ui/emojicategoriesview.ts","../src/ui/emojisearchview.ts","../src/ui/emojitoneview.ts","../src/ui/emojipickerview.ts","../src/ui/emojipickerformview.ts","../src/emojipicker.ts","../src/emoji.ts"],"names":["isEmojiSupported","unicode","ctx","getCanvas","CANVAS_HEIGHT","CANVAS_WIDTH","textSize","Math","floor","font","textBaseline","canvas","width","height","clearRect","fillStyle","fillText","a","getImageData","data","count","length","i","x","y","b","measureText","document","createElement","getContext","willReadFrequently","SKIN_TONE_MAP","EMOJI_SUPPORT_LEVEL","BASELINE_EMOJI_WIDTH","EmojiUtils","Plugin","_emojiCanvas","pluginName","isOfficialPlugin","init","item","emojiSupportedVersionByOs","container","isEmojiVersionSupported","version","hasZwj","emoji","isEmojiZwjSupported","getEmojiSupportedVersionByOs","emojiVersion","Object","entries","_isEmojiSupported","includes","canvasWidth","getNodeWidthUsingCanvas","domWidth","getNodeWidth","node","span","textContent","appendChild","nodeWidth","offsetWidth","removeChild","style","getComputedStyle","fontStyle","fontVariant","fontWeight","fontFamily","join","ceil","createEmojiWidthTestingContainer","setAttribute","position","left","whiteSpace","fontSize","normalizeEmojiSkinTone","entry","skins","default","forEach","skin","skinTone","tone","isEmojiCategoryAllowed","group","DEFAULT_EMOJI_DATABASE_URL","DEFAULT_EMOJI_VERSION","EmojiRepository","_items","_url","_repositoryPromise","requires","editor","config","define","undefined","definitionsUrl","useCustomFont","_getUrl","Promise","resolve","_repositoryPromiseResolveCallback","_warnAboutCdnUse","_loadAndCacheEmoji","_getItems","logWarning","getEmojiByQuery","searchQuery","searchQueryTokens","split","filter","Boolean","shouldSearch","some","token","fuzzysort","go","threshold","keys","emojiEntry","matchedTags","flatMap","tok","tags","t","startsWith","map","result","obj","getEmojiCategories","repository","locale","categories","title","icon","groupId","groups","groupBy","category","items","getSkinTones","id","tooltip","isReady","get","urlVersion","url","URL","replace","toString","searchParams","set","editorVersion","licenseKey","distributionChannel","Symbol","for","_results","href","fetch","cache","then","response","ok","json","catch","_normalizeEmoji","emojiUtils","plugins","insertableEmoji","body","results","remove","EMOJI_MENTION_MARKER","EMOJI_SHOW_ALL_OPTION_ID","EMOJI_HINT_OPTION_ID","EmojiMention","_emojiDropdownLimit","_skinTone","Typing","dropdownLimit","_setupMentionConfiguration","mergeFieldsPrefix","mentionFeedsConfigs","isEmojiMarkerUsedByMergeFields","isEmojiMarkerUsedByMention","_isEmojiMarker","marker","isEmojiConfigDefined","emojiMentionFeedConfig","itemRenderer","_customItemRendererFactory","feed","_queryEmojiCallbackFactory","emojiPickerPlugin","has","emojiRepositoryPlugin","_isEmojiRepositoryAvailable","once","_overrideMentionExecuteListener","bind","itemElement","classList","add","slice","type","tabIndex","labelElement","text","commands","on","event","eventData","stop","mention","range","getItems","is","reduce","model","change","writer","deleteContent","createSelection","showUI","setTimeout","emojiPickerView","focus","execute","priority","emojis","annotation","actionItem","EmojiCommand","Command","refresh","schema","selection","isEnabled","checkChild","getFirstPosition","searchValue","EmojiGridView","View","tiles","focusTracker","keystrokes","emojiCategories","cachedTiles","_getEmojiByQuery","categoryName","createCollection","FocusTracker","KeystrokeHandler","bindTemplate","setTemplate","tag","children","attributes","role","class","if","value","addKeyboardHandlingForGrid","keystrokeHandler","gridItems","numberOfColumns","global","window","element","firstChild","getPropertyValue","uiLanguageDirection","render","listenTo","destroy","firstTile","first","pattern","matchingItems","allItems","_getItemsByQuery","source","_getItemsByCategory","_updateGrid","resultsCount","totalItemsCount","query","emojiCategory","find","_createTile","name","tile","ButtonView","viewUid","extendTemplate","label","withText","ariaLabel","ariaLabelledBy","fire","EmojiCategoriesView","focusCycler","buttonViews","_createCategoryButton","FocusCycler","focusables","actions","focusPrevious","focusNext","newValue","oldValue","oldCategoryButton","button","isOn","newCategoryButton","buttonView","enableCategories","disableCategories","to","EmojiSearchView","inputView","gridView","resultsView","SearchTextView","queryView","creator","createLabeledInputText","filteredView","infoView","instance","tabindex","delegate","search","regExp","RegExp","escapeRegExp","filteringResults","setInputValue","fieldView","reset","getInputValue","EmojiToneView","dropdownView","_skinTones","skinTones","accessibleLabel","createDropdown","itemDefinitions","Collection","def","UIModel","tooltipPosition","addListToDropdown","_getSkinTone","evt","EmojiPickerView","searchView","toneView","categoriesView","SearchInfoView","_setupEventListeners","primaryText","secondaryText","isVisible","scrollTo","ev","args","propertyName","EmojiPickerFormView","backButtonView","_focusables","ViewCollection","_focusCycler","_createBackButton","_createHeaderView","childViews","isFocusable","v","isViewWithFocusCycler","chain","focusFirst","backButton","IconPreviousArrow","header","FormHeaderView","VISUAL_SELECTION_MARKER_NAME","EmojiPicker","ContextualBalloon","Dialog","balloonPlugin","command","ui","componentFactory","_createButton","MenuBarMenuListItemButtonView","_setupConversion","_showFakeVisualSelection","_createEmojiPickerView","emojiPickerFormView","_createEmojiPickerFormView","hasView","visibleView","view","_getBalloonPositionData","balloonClassName","ViewClass","IconEmoji","isToggleable","editing","scrollToTheSelection","textToInsert","_hideUI","updatePosition","cancel","clickOutsideHandler","emitter","contextElements","callback","activator","updateFocus","_hideFakeVisualSelection","conversion","markerToHighlight","classes","markerToElement","markerRange","isCollapsed","markerElement","createUIElement","addClass","viewDocument","target","domConverter","viewRangeToDom","getFirstRange","markers","updateMarker","start","isAtEnd","startPosition","getLastMatchingPosition","isContent","boundaries","addMarker","usingOperation","affectsData","createRange","end","removeMarker","Emoji"],"mappings":"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","file":"index.js.map","sourcesContent":["import { Plugin, Command } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { logWarning, version, FocusTracker, KeystrokeHandler, global, Collection } from '@ckeditor/ckeditor5-utils/dist/index.js';\nimport { Typing } from '@ckeditor/ckeditor5-typing/dist/index.js';\nimport fuzzysort from 'fuzzysort';\nimport { groupBy, escapeRegExp } from 'es-toolkit/compat';\nimport { View, addKeyboardHandlingForGrid, ButtonView, FocusCycler, SearchTextView, createLabeledInputText, createDropdown, UIModel, addListToDropdown, SearchInfoView, ViewCollection, isFocusable, isViewWithFocusCycler, FormHeaderView, ContextualBalloon, Dialog, MenuBarMenuListItemButtonView, clickOutsideHandler } from '@ckeditor/ckeditor5-ui/dist/index.js';\nimport { IconPreviousArrow, IconEmoji } from '@ckeditor/ckeditor5-icons/dist/index.js';\n\n/**\n * @license Copyright (c) 2023, Koala Interactive SAS\n * For licensing, see https://github.com/koala-interactive/is-emoji-supported/blob/master/LICENSE.md\n */ /**\n * @module emoji/utils/isemojisupported\n */ /**\n * Checks if the two pixels parts are the same using canvas.\n *\n * @internal\n */ function isEmojiSupported(unicode) {\n    const ctx = getCanvas();\n    /* istanbul ignore next -- @preserve */ if (!ctx) {\n        return false;\n    }\n    const CANVAS_HEIGHT = 25;\n    const CANVAS_WIDTH = 20;\n    const textSize = Math.floor(CANVAS_HEIGHT / 2);\n    // Initialize canvas context.\n    ctx.font = textSize + 'px Arial, Sans-Serif';\n    ctx.textBaseline = 'top';\n    ctx.canvas.width = CANVAS_WIDTH * 2;\n    ctx.canvas.height = CANVAS_HEIGHT;\n    ctx.clearRect(0, 0, CANVAS_WIDTH * 2, CANVAS_HEIGHT);\n    // Draw in red on the left.\n    ctx.fillStyle = '#FF0000';\n    ctx.fillText(unicode, 0, 22);\n    // Draw in blue on right.\n    ctx.fillStyle = '#0000FF';\n    ctx.fillText(unicode, CANVAS_WIDTH, 22);\n    const a = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT).data;\n    const count = a.length;\n    let i = 0;\n    // Search the first visible pixel.\n    for(; i < count && !a[i + 3]; i += 4);\n    // No visible pixel.\n    /* istanbul ignore next -- @preserve */ if (i >= count) {\n        return false;\n    }\n    // Emoji has immutable color, so we check the color of the emoji in two different colors.\n    // the result show be the same.\n    const x = CANVAS_WIDTH + i / 4 % CANVAS_WIDTH;\n    const y = Math.floor(i / 4 / CANVAS_WIDTH);\n    const b = ctx.getImageData(x, y, 1, 1).data;\n    /* istanbul ignore next -- @preserve */ if (a[i] !== b[0] || a[i + 2] !== b[2]) {\n        return false;\n    }\n    //Some emojis consist of different ones, so they will show multiple characters if they are not supported.\n    /* istanbul ignore next -- @preserve */ if (ctx.measureText(unicode).width >= CANVAS_WIDTH) {\n        return false;\n    }\n    // Supported.\n    return true;\n}\nfunction getCanvas() {\n    try {\n        return document.createElement('canvas').getContext('2d', {\n            willReadFrequently: true\n        });\n    } catch  {\n        /* istanbul ignore next -- @preserve */ return null;\n    }\n}\n\n/**\n * @module emoji/emojiutils\n */ const SKIN_TONE_MAP = {\n    0: 'default',\n    1: 'light',\n    2: 'medium-light',\n    3: 'medium',\n    4: 'medium-dark',\n    5: 'dark'\n};\n/**\n * A map representing an emoji and its release version.\n * It's used to identify a user's minimal supported emoji level.\n * We skip versions with older patches, such as 15.0 instead of 15.1 etc.\n */ const EMOJI_SUPPORT_LEVEL = {\n    '🫩': 16,\n    '🫨': 15.1,\n    '🫠': 14,\n    '😶‍🌫️': 13.1,\n    '🧑‍💻': 12.1,\n    '🥰': 11,\n    '🤪': 5,\n    '⚕️': 4,\n    '🤣': 3,\n    '👋🏽': 2,\n    '😀': 1,\n    '😐': 0.7,\n    '😂': 0.6 // Face with Tears of Joy.\n};\nconst BASELINE_EMOJI_WIDTH = 24;\n/**\n * The Emoji utilities plugin.\n */ class EmojiUtils extends Plugin {\n    /**\n\t * Used for testing whether the environment supports the given emoji.\n\t */ _emojiCanvas = null;\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiUtils';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        this._emojiCanvas = document.createElement('canvas').getContext('2d');\n    }\n    /**\n\t * Checks if the emoji is supported by verifying the emoji version supported by the system first.\n\t * Then checks if emoji contains a zero width joiner (ZWJ), and if yes, then checks if it is supported by the system.\n\t */ isEmojiSupported(item, emojiSupportedVersionByOs, container) {\n        const isEmojiVersionSupported = item.version <= emojiSupportedVersionByOs;\n        if (!isEmojiVersionSupported) {\n            return false;\n        }\n        if (!this.hasZwj(item.emoji)) {\n            return true;\n        }\n        return this.isEmojiZwjSupported(item, container);\n    }\n    /**\n\t * Checks the supported emoji version by the OS, by sampling some representatives from different emoji releases.\n\t */ getEmojiSupportedVersionByOs() {\n        for (const [emoji, emojiVersion] of Object.entries(EMOJI_SUPPORT_LEVEL)){\n            if (EmojiUtils._isEmojiSupported(emoji)) {\n                return emojiVersion;\n            }\n        }\n        return 0;\n    }\n    /**\n\t * Check for ZWJ (zero width joiner) character.\n\t */ hasZwj(emoji) {\n        return emoji.includes('\\u200d');\n    }\n    /**\n\t * Checks whether the emoji is supported in the operating system.\n\t */ isEmojiZwjSupported(item, container) {\n        // On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n        // against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n        // floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n        // So here we set the threshold at 1.8 times the size of the baseline emoji.\n        const canvasWidth = this.getNodeWidthUsingCanvas(container, item.emoji);\n        // Checking emoji using canvas is much faster, so always try it first. Unfortunately canvas has worse emoji coverage.\n        if (canvasWidth < BASELINE_EMOJI_WIDTH * 1.8) {\n            return true;\n        }\n        const domWidth = this.getNodeWidth(container, item.emoji);\n        // Checking emoji using DOM is much slower, so use it as a fallback.\n        return domWidth < BASELINE_EMOJI_WIDTH * 1.8;\n    }\n    /**\n\t * Returns the width of the provided node.\n\t */ getNodeWidth(container, node) {\n        const span = document.createElement('span');\n        span.textContent = node;\n        container.appendChild(span);\n        const nodeWidth = span.offsetWidth;\n        container.removeChild(span);\n        return nodeWidth;\n    }\n    /**\n\t * Returns the width of the provided node.\n\t *\n\t * This is a faster alternative to `getNodeWidth` method, which works for great majority of emojis.\n\t */ getNodeWidthUsingCanvas(container, node) {\n        const style = getComputedStyle(container);\n        this._emojiCanvas.font = [\n            style.fontStyle,\n            style.fontVariant,\n            style.fontWeight,\n            `${BASELINE_EMOJI_WIDTH}px`,\n            `\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Noto Color Emoji\", ${style.fontFamily}`\n        ].join(' ');\n        return Math.ceil(this._emojiCanvas.measureText(node).width);\n    }\n    /**\n\t * Creates a div for emoji width testing purposes.\n\t */ createEmojiWidthTestingContainer() {\n        const container = document.createElement('div');\n        container.setAttribute('aria-hidden', 'true');\n        container.style.position = 'absolute';\n        container.style.left = '-9999px';\n        container.style.whiteSpace = 'nowrap';\n        container.style.fontSize = BASELINE_EMOJI_WIDTH + 'px';\n        return container;\n    }\n    /**\n\t * Adds default skin tone property to each emoji. If emoji defines other skin tones, they are added as well.\n\t */ normalizeEmojiSkinTone(item) {\n        const entry = {\n            ...item,\n            skins: {\n                default: item.emoji\n            }\n        };\n        if (item.skins) {\n            item.skins.forEach((skin)=>{\n                const skinTone = SKIN_TONE_MAP[skin.tone];\n                entry.skins[skinTone] = skin.emoji;\n            });\n        }\n        return entry;\n    }\n    /**\n\t * Checks whether the emoji belongs to a group that is allowed.\n\t */ isEmojiCategoryAllowed(item) {\n        // Category group=2 contains skin tones only, which we do not want to render.\n        return item.group !== 2;\n    }\n    /**\n\t * A function used to determine if emoji is supported by detecting pixels.\n\t *\n\t * Referenced for unit testing purposes. Kept in a separate file because of licensing.\n\t */ static _isEmojiSupported = isEmojiSupported;\n}\n\n// An endpoint from which the emoji data will be downloaded during plugin initialization.\n// The `{version}` placeholder is replaced with the value from editor config.\nconst DEFAULT_EMOJI_DATABASE_URL = 'https://cdn.ckeditor.com/ckeditor5/data/emoji/{version}/en.json';\nconst DEFAULT_EMOJI_VERSION = 16;\n/**\n * The emoji repository plugin.\n *\n * Loads the emoji repository from URL during plugin initialization and provides utility methods to search it.\n */ class EmojiRepository extends Plugin {\n    /**\n\t * Emoji repository in a configured version.\n\t */ _items;\n    /**\n\t * The resolved URL from which the emoji repository is downloaded.\n\t */ _url;\n    /**\n\t * A promise resolved after downloading the emoji collection.\n\t * The promise resolves with `true` when the repository is successfully downloaded or `false` otherwise.\n\t */ _repositoryPromise;\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiUtils\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiRepository';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        editor.config.define('emoji', {\n            version: undefined,\n            skinTone: 'default',\n            definitionsUrl: undefined,\n            useCustomFont: false\n        });\n        this._url = this._getUrl();\n        this._repositoryPromise = new Promise((resolve)=>{\n            this._repositoryPromiseResolveCallback = resolve;\n        });\n        this._items = null;\n    }\n    /**\n\t * @inheritDoc\n\t */ async init() {\n        this._warnAboutCdnUse();\n        await this._loadAndCacheEmoji();\n        this._items = this._getItems();\n        if (!this._items) {\n            /**\n\t\t\t * Unable to identify the available emoji to display.\n\t\t\t *\n\t\t\t * See the {@glink features/emoji#troubleshooting troubleshooting} section in the {@glink features/emoji Emoji feature} guide\n\t\t\t * for more details.\n\t\t\t *\n\t\t\t * @error emoji-repository-empty\n\t\t\t */ logWarning('emoji-repository-empty');\n            return this._repositoryPromiseResolveCallback(false);\n        }\n        return this._repositoryPromiseResolveCallback(true);\n    }\n    /**\n\t * Returns an array of emoji entries that match the search query.\n\t * If the emoji repository is not loaded this method returns an empty array.\n\t *\n\t * @param searchQuery A search query to match emoji.\n\t * @returns An array of emoji entries that match the search query.\n\t */ getEmojiByQuery(searchQuery) {\n        if (!this._items) {\n            return [];\n        }\n        const searchQueryTokens = searchQuery.split(/\\s/).filter(Boolean);\n        // Perform the search only if there is at least two non-white characters next to each other.\n        const shouldSearch = searchQueryTokens.some((token)=>token.length >= 2);\n        if (!shouldSearch) {\n            return [];\n        }\n        return fuzzysort.go(searchQuery, this._items, {\n            threshold: 0.6,\n            keys: [\n                'emoticon',\n                'annotation',\n                (emojiEntry)=>{\n                    // Instead of searching over all tags, let's use only those that matches the query.\n                    // It enables searching in tags with the space character in names.\n                    const searchQueryTokens = searchQuery.split(/\\s/).filter(Boolean);\n                    const matchedTags = searchQueryTokens.flatMap((tok)=>{\n                        return emojiEntry.tags?.filter((t)=>t.startsWith(tok));\n                    });\n                    return matchedTags.join();\n                }\n            ]\n        }).map((result)=>result.obj);\n    }\n    /**\n\t * Groups all emojis by categories.\n\t * If the emoji repository is not loaded, it returns an empty array.\n\t *\n\t * @returns An array of emoji entries grouped by categories.\n\t */ getEmojiCategories() {\n        const repository = this._getItems();\n        if (!repository) {\n            return [];\n        }\n        const { t } = this.editor.locale;\n        const categories = [\n            {\n                title: t('Smileys & Expressions'),\n                icon: '😄',\n                groupId: 0\n            },\n            {\n                title: t('Gestures & People'),\n                icon: '👋',\n                groupId: 1\n            },\n            {\n                title: t('Animals & Nature'),\n                icon: '🐻',\n                groupId: 3\n            },\n            {\n                title: t('Food & Drinks'),\n                icon: '🍎',\n                groupId: 4\n            },\n            {\n                title: t('Travel & Places'),\n                icon: '🚘',\n                groupId: 5\n            },\n            {\n                title: t('Activities'),\n                icon: '🏀',\n                groupId: 6\n            },\n            {\n                title: t('Objects'),\n                icon: '💡',\n                groupId: 7\n            },\n            {\n                title: t('Symbols'),\n                icon: '🔵',\n                groupId: 8\n            },\n            {\n                title: t('Flags'),\n                icon: '🏁',\n                groupId: 9\n            }\n        ];\n        const groups = groupBy(repository, (item)=>item.group);\n        return categories.map((category)=>{\n            return {\n                ...category,\n                items: groups[category.groupId]\n            };\n        });\n    }\n    /**\n\t * Returns an array of available skin tones.\n\t */ getSkinTones() {\n        const { t } = this.editor.locale;\n        return [\n            {\n                id: 'default',\n                icon: '👋',\n                tooltip: t('Default skin tone')\n            },\n            {\n                id: 'light',\n                icon: '👋🏻',\n                tooltip: t('Light skin tone')\n            },\n            {\n                id: 'medium-light',\n                icon: '👋🏼',\n                tooltip: t('Medium Light skin tone')\n            },\n            {\n                id: 'medium',\n                icon: '👋🏽',\n                tooltip: t('Medium skin tone')\n            },\n            {\n                id: 'medium-dark',\n                icon: '👋🏾',\n                tooltip: t('Medium Dark skin tone')\n            },\n            {\n                id: 'dark',\n                icon: '👋🏿',\n                tooltip: t('Dark skin tone')\n            }\n        ];\n    }\n    /**\n\t * Indicates whether the emoji repository has been successfully downloaded and the plugin is operational.\n\t */ isReady() {\n        return this._repositoryPromise;\n    }\n    /**\n\t * Returns the URL from which the emoji repository is downloaded. If the URL is not provided\n\t * in the configuration, the default URL is used with the version from the configuration.\n\t *\n\t * If both the URL and version are provided, a warning is logged.\n\t */ _getUrl() {\n        const { definitionsUrl, version: version$1 } = this.editor.config.get('emoji');\n        if (!definitionsUrl || definitionsUrl === 'cdn') {\n            // URL was not provided or is set to 'cdn', so we use the default CDN URL.\n            const urlVersion = version$1 || DEFAULT_EMOJI_VERSION;\n            const url = new URL(DEFAULT_EMOJI_DATABASE_URL.replace('{version}', urlVersion.toString()));\n            url.searchParams.set('editorVersion', version);\n            return url;\n        }\n        if (version$1) {\n            /**\n\t\t\t * Both {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`} and\n\t\t\t * {@link module:emoji/emojiconfig~EmojiConfig#version `emoji.version`} configuration options\n\t\t\t * are set. Only the `emoji.definitionsUrl` option will be used.\n\t\t\t *\n\t\t\t * The `emoji.version` option will be ignored and should be removed from the configuration.\n\t\t\t *\n\t\t\t * @error emoji-repository-redundant-version\n\t\t\t */ logWarning('emoji-repository-redundant-version');\n        }\n        return new URL(definitionsUrl);\n    }\n    /**\n\t * Warn users on self-hosted installations that this plugin uses a CDN to fetch the emoji repository.\n\t */ _warnAboutCdnUse() {\n        const editor = this.editor;\n        const config = editor.config.get('emoji');\n        const licenseKey = editor.config.get('licenseKey');\n        const distributionChannel = window[Symbol.for('cke distribution')];\n        if (licenseKey === 'GPL') {\n            // Don't warn GPL users.\n            return;\n        }\n        if (distributionChannel === 'cloud') {\n            // Don't warn cloud users, because they already use our CDN.\n            return;\n        }\n        if (config && config.definitionsUrl) {\n            // Don't warn users who have configured their own definitions URL.\n            return;\n        }\n        /**\n\t\t * It was detected that your installation uses a commercial license key,\n\t\t * and the default {@glink features/emoji#emoji-source CKEditor CDN for Emoji plugin data}.\n\t\t *\n\t\t * To avoid this, you can use the {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`}\n\t\t * configuration option to provide a URL to your own emoji repository.\n\t\t *\n\t\t * If you want to suppress this warning, while using the default CDN, set this configuration option to `cdn`.\n\t\t *\n\t\t * @error emoji-repository-cdn-use\n\t\t */ logWarning('emoji-repository-cdn-use');\n    }\n    /**\n\t * Returns the emoji repository in a configured version if it is a non-empty array. Returns `null` otherwise.\n\t */ _getItems() {\n        const repository = EmojiRepository._results[this._url.href];\n        return repository && repository.length ? repository : null;\n    }\n    /**\n\t * Loads the emoji repository. If the repository is already loaded, it returns the cached result.\n\t * Otherwise, it fetches the repository from the URL and adds it to the cache.\n\t */ async _loadAndCacheEmoji() {\n        if (EmojiRepository._results[this._url.href]) {\n            // The repository has already been downloaded.\n            return;\n        }\n        const result = await fetch(this._url, {\n            cache: 'force-cache'\n        }).then((response)=>{\n            if (!response.ok) {\n                return [];\n            }\n            return response.json();\n        }).catch(()=>{\n            return [];\n        });\n        EmojiRepository._results[this._url.href] = this._normalizeEmoji(result);\n    }\n    /**\n\t * Normalizes the raw data fetched from CDN. By normalization, we meant:\n\t *\n\t *  * Filter out unsupported emoji (these that will not render correctly),\n\t *  * Prepare skin tone variants if an emoji defines them.\n\t */ _normalizeEmoji(data) {\n        const editor = this.editor;\n        const useCustomFont = editor.config.get('emoji.useCustomFont');\n        const emojiUtils = editor.plugins.get('EmojiUtils');\n        const insertableEmoji = data.filter((item)=>emojiUtils.isEmojiCategoryAllowed(item));\n        // When using a custom font, the feature does not filter any emoji.\n        if (useCustomFont) {\n            return insertableEmoji.map((item)=>emojiUtils.normalizeEmojiSkinTone(item));\n        }\n        const emojiSupportedVersionByOs = emojiUtils.getEmojiSupportedVersionByOs();\n        const container = emojiUtils.createEmojiWidthTestingContainer();\n        document.body.appendChild(container);\n        const results = insertableEmoji.filter((item)=>emojiUtils.isEmojiSupported(item, emojiSupportedVersionByOs, container)).map((item)=>emojiUtils.normalizeEmojiSkinTone(item));\n        container.remove();\n        return results;\n    }\n    /**\n\t * Versioned emoji repository.\n\t */ static _results = {};\n}\n /**\n * Unable to load the emoji repository from the URL.\n *\n * If the URL works properly and there is no disruption of communication, please check your\n * {@glink getting-started/setup/csp Content Security Policy (CSP)} setting and make sure\n * the URL connection is allowed by the editor.\n *\n * @error emoji-repository-load-failed\n */\n\nconst EMOJI_MENTION_MARKER = ':';\nconst EMOJI_SHOW_ALL_OPTION_ID = ':__EMOJI_SHOW_ALL:';\nconst EMOJI_HINT_OPTION_ID = ':__EMOJI_HINT:';\n/**\n * The emoji mention plugin.\n *\n * Introduces the autocomplete of emojis while typing.\n */ class EmojiMention extends Plugin {\n    /**\n\t * Defines a number of displayed items in the auto complete dropdown.\n\t *\n\t * It includes the \"Show all emoji...\" option if the `EmojiPicker` plugin is loaded.\n\t */ _emojiDropdownLimit;\n    /**\n\t * Defines a skin tone that is set in the emoji config.\n\t */ _skinTone;\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiRepository,\n            Typing,\n            'Mention'\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiMention';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ constructor(editor){\n        super(editor);\n        this.editor.config.define('emoji', {\n            dropdownLimit: 6\n        });\n        this._emojiDropdownLimit = editor.config.get('emoji.dropdownLimit');\n        this._skinTone = editor.config.get('emoji.skinTone');\n        this._setupMentionConfiguration(editor);\n    }\n    /**\n\t * Initializes the configuration for emojis in the mention feature.\n\t * If the marker used by emoji mention is already registered, it displays a warning.\n\t * If emoji mention configuration is detected, it does not register it for a second time.\n\t */ _setupMentionConfiguration(editor) {\n        const mergeFieldsPrefix = editor.config.get('mergeFields.prefix');\n        const mentionFeedsConfigs = editor.config.get('mention.feeds');\n        const isEmojiMarkerUsedByMergeFields = mergeFieldsPrefix ? mergeFieldsPrefix[0] === EMOJI_MENTION_MARKER : false;\n        const isEmojiMarkerUsedByMention = mentionFeedsConfigs.filter((config)=>!config._isEmojiMarker).some((config)=>config.marker === EMOJI_MENTION_MARKER);\n        if (isEmojiMarkerUsedByMention || isEmojiMarkerUsedByMergeFields) {\n            /**\n\t\t\t * The `marker` in the `emoji` config is already used by other plugin configuration.\n\t\t\t *\n\t\t\t * @error emoji-config-marker-already-used\n\t\t\t * @param {string} marker Used marker.\n\t\t\t */ logWarning('emoji-config-marker-already-used', {\n                marker: EMOJI_MENTION_MARKER\n            });\n            return;\n        }\n        const isEmojiConfigDefined = mentionFeedsConfigs.some((config)=>config._isEmojiMarker);\n        if (isEmojiConfigDefined) {\n            return;\n        }\n        const emojiMentionFeedConfig = {\n            _isEmojiMarker: true,\n            marker: EMOJI_MENTION_MARKER,\n            dropdownLimit: this._emojiDropdownLimit,\n            itemRenderer: this._customItemRendererFactory(this.editor.t),\n            feed: this._queryEmojiCallbackFactory()\n        };\n        this.editor.config.set('mention.feeds', [\n            ...mentionFeedsConfigs,\n            emojiMentionFeedConfig\n        ]);\n    }\n    /**\n\t * @inheritDoc\n\t */ async init() {\n        const editor = this.editor;\n        this.emojiPickerPlugin = editor.plugins.has('EmojiPicker') ? editor.plugins.get('EmojiPicker') : null;\n        this.emojiRepositoryPlugin = editor.plugins.get('EmojiRepository');\n        this._isEmojiRepositoryAvailable = await this.emojiRepositoryPlugin.isReady();\n        // Override the `mention` command listener if the emoji repository is ready.\n        if (this._isEmojiRepositoryAvailable) {\n            editor.once('ready', this._overrideMentionExecuteListener.bind(this));\n        }\n    }\n    /**\n\t * Returns the `itemRenderer()` callback for mention config.\n\t */ _customItemRendererFactory(t) {\n        return (item)=>{\n            const itemElement = document.createElement('button');\n            itemElement.classList.add('ck');\n            itemElement.classList.add('ck-button');\n            itemElement.classList.add('ck-button_with-text');\n            itemElement.id = `mention-list-item-id${item.id.slice(0, -1)}`;\n            itemElement.type = 'button';\n            itemElement.tabIndex = -1;\n            const labelElement = document.createElement('span');\n            labelElement.classList.add('ck');\n            labelElement.classList.add('ck-button__label');\n            itemElement.appendChild(labelElement);\n            if (item.id === EMOJI_HINT_OPTION_ID) {\n                itemElement.classList.add('ck-list-item-button');\n                itemElement.classList.add('ck-disabled');\n                labelElement.textContent = t('Keep on typing to see the emoji.');\n            } else if (item.id === EMOJI_SHOW_ALL_OPTION_ID) {\n                labelElement.textContent = t('Show all emoji...');\n            } else {\n                labelElement.textContent = `${item.text} ${item.id}`;\n            }\n            return itemElement;\n        };\n    }\n    /**\n\t * Overrides the default mention execute listener to insert an emoji as plain text instead.\n\t */ _overrideMentionExecuteListener() {\n        const editor = this.editor;\n        editor.commands.get('mention').on('execute', (event, data)=>{\n            const eventData = data[0];\n            // Ignore non-emoji auto-complete actions.\n            if (eventData.marker !== EMOJI_MENTION_MARKER) {\n                return;\n            }\n            // Do not propagate the event.\n            event.stop();\n            // Do nothing when executing after selecting a hint message.\n            if (eventData.mention.id === EMOJI_HINT_OPTION_ID) {\n                return;\n            }\n            // Trigger the picker UI.\n            if (eventData.mention.id === EMOJI_SHOW_ALL_OPTION_ID) {\n                const text = [\n                    ...eventData.range.getItems()\n                ].filter((item)=>item.is('$textProxy')).map((item)=>item.data).reduce((result, text)=>result + text, '');\n                editor.model.change((writer)=>{\n                    editor.model.deleteContent(writer.createSelection(eventData.range));\n                });\n                const emojiPickerPlugin = this.emojiPickerPlugin;\n                emojiPickerPlugin.showUI(text.slice(1));\n                setTimeout(()=>{\n                    emojiPickerPlugin.emojiPickerView.focus();\n                });\n            } else {\n                editor.execute('insertText', {\n                    text: eventData.mention.text,\n                    range: eventData.range\n                });\n            }\n        }, {\n            priority: 'high'\n        });\n    }\n    /**\n\t * Returns the `feed()` callback for mention config.\n\t */ _queryEmojiCallbackFactory() {\n        return (searchQuery)=>{\n            // Do not show anything when a query starts with a space.\n            if (searchQuery.startsWith(' ')) {\n                return [];\n            }\n            // Do not show anything when a query starts with a marker character.\n            if (searchQuery.startsWith(EMOJI_MENTION_MARKER)) {\n                return [];\n            }\n            // If the repository plugin is not available, return an empty feed to avoid confusion. See: #17842.\n            if (!this._isEmojiRepositoryAvailable) {\n                return [];\n            }\n            const emojis = this.emojiRepositoryPlugin.getEmojiByQuery(searchQuery).map((emoji)=>{\n                let text = emoji.skins[this._skinTone] || emoji.skins.default;\n                if (this.emojiPickerPlugin) {\n                    text = emoji.skins[this.emojiPickerPlugin.skinTone] || emoji.skins.default;\n                }\n                return {\n                    id: `:${emoji.annotation}:`,\n                    text\n                };\n            });\n            if (!this.emojiPickerPlugin) {\n                return emojis.slice(0, this._emojiDropdownLimit);\n            }\n            const actionItem = {\n                id: searchQuery.length > 1 ? EMOJI_SHOW_ALL_OPTION_ID : EMOJI_HINT_OPTION_ID\n            };\n            return [\n                ...emojis.slice(0, this._emojiDropdownLimit - 1),\n                actionItem\n            ];\n        };\n    }\n}\n\n/**\n * Command that shows the emoji user interface.\n */ class EmojiCommand extends Command {\n    /**\n\t * Updates the command's {@link #isEnabled} based on the current selection.\n\t */ refresh() {\n        const editor = this.editor;\n        const model = editor.model;\n        const schema = model.schema;\n        const selection = model.document.selection;\n        this.isEnabled = schema.checkChild(selection.getFirstPosition(), '$text');\n    }\n    /**\n\t * Opens emoji user interface for the current document selection.\n\t *\n\t * @fires execute\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */ execute(searchValue = '') {\n        const emojiPickerPlugin = this.editor.plugins.get('EmojiPicker');\n        emojiPickerPlugin.showUI(searchValue);\n    }\n}\n\n/**\n * A grid of emoji tiles. It allows browsing emojis and selecting them to be inserted into the content.\n */ class EmojiGridView extends View {\n    /**\n\t * A collection of the child tile views. Each tile represents a particular emoji.\n\t */ tiles;\n    /**\n\t * Tracks information about the DOM focus in the grid.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * An array containing all emojis grouped by their categories.\n\t */ emojiCategories;\n    /**\n\t * A collection of all already created tile views. Each tile represents a particular emoji.\n\t * The cached tiles collection is used for efficiency purposes to avoid re-creating a particular\n\t * tile again when the grid view has changed.\n\t */ cachedTiles;\n    /**\n\t * A callback used to filter grid items by a specified query.\n\t */ _getEmojiByQuery;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { categoryName, emojiCategories, getEmojiByQuery, skinTone }){\n        super(locale);\n        this.set('isEmpty', true);\n        this.set('categoryName', categoryName);\n        this.set('skinTone', skinTone);\n        this.tiles = this.createCollection();\n        this.cachedTiles = this.createCollection();\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this._getEmojiByQuery = getEmojiByQuery;\n        this.emojiCategories = emojiCategories;\n        const bind = this.bindTemplate;\n        this.setTemplate({\n            tag: 'div',\n            children: [\n                {\n                    tag: 'div',\n                    attributes: {\n                        role: 'grid',\n                        class: [\n                            'ck',\n                            'ck-emoji__grid'\n                        ]\n                    },\n                    children: this.tiles\n                }\n            ],\n            attributes: {\n                role: 'tabpanel',\n                class: [\n                    'ck',\n                    'ck-emoji__tiles',\n                    // To avoid issues with focus cycling, ignore a grid when it's empty.\n                    bind.if('isEmpty', 'ck-hidden', (value)=>value)\n                ]\n            }\n        });\n        addKeyboardHandlingForGrid({\n            keystrokeHandler: this.keystrokes,\n            focusTracker: this.focusTracker,\n            gridItems: this.tiles,\n            numberOfColumns: ()=>global.window.getComputedStyle(this.element.firstChild) // Responsive `.ck-emoji-grid__tiles`.\n                .getPropertyValue('grid-template-columns').split(' ').length,\n            uiLanguageDirection: this.locale && this.locale.uiLanguageDirection\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.keystrokes.destroy();\n        this.focusTracker.destroy();\n    }\n    /**\n\t * Focuses the first focusable in {@link ~EmojiGridView#tiles} if available.\n\t */ focus() {\n        const firstTile = this.tiles.first;\n        if (firstTile) {\n            firstTile.focus();\n        }\n    }\n    /**\n\t * Filters the grid view by the given regular expression.\n\t *\n\t * It filters either by the pattern or an emoji category, but never both.\n\t *\n\t * @param pattern Expression to search or `null` when filter by category name.\n\t */ filter(pattern) {\n        const { matchingItems, allItems } = pattern ? this._getItemsByQuery(pattern.source) : this._getItemsByCategory();\n        this._updateGrid(matchingItems);\n        this.set('isEmpty', matchingItems.length === 0);\n        return {\n            resultsCount: matchingItems.length,\n            totalItemsCount: allItems.length\n        };\n    }\n    /**\n\t * Filters emojis to show based on the specified query phrase.\n\t *\n\t * @param query A query used to filter the grid.\n\t */ _getItemsByQuery(query) {\n        return {\n            matchingItems: this._getEmojiByQuery(query),\n            allItems: this.emojiCategories.flatMap((group)=>group.items)\n        };\n    }\n    /**\n\t * Returns emojis that belong to the specified category.\n\t */ _getItemsByCategory() {\n        const emojiCategory = this.emojiCategories.find((item)=>item.title === this.categoryName);\n        const { items } = emojiCategory;\n        return {\n            matchingItems: items,\n            allItems: items\n        };\n    }\n    /**\n\t * Updates the grid by removing the existing items and insert the new ones.\n\t *\n\t * @param items An array of items to insert.\n\t */ _updateGrid(items) {\n        // Clean-up.\n        [\n            ...this.tiles\n        ].forEach((item)=>{\n            this.focusTracker.remove(item);\n            this.tiles.remove(item);\n        });\n        items// Create tiles from matching results.\n        .map((item)=>{\n            const emoji = item.skins[this.skinTone] || item.skins.default;\n            return this.cachedTiles.get(emoji) || this._createTile(emoji, item.annotation);\n        })// Insert new elements.\n        .forEach((item)=>{\n            this.tiles.add(item);\n            this.focusTracker.add(item);\n        });\n    }\n    /**\n\t * Creates a new tile for the grid. Created tile is added to the {@link #cachedTiles} collection for further usage, if needed.\n\t *\n\t * @param emoji The emoji itself.\n\t * @param name The name of the emoji (e.g. \"Smiling Face with Smiling Eyes\").\n\t */ _createTile(emoji, name) {\n        const tile = new ButtonView(this.locale);\n        tile.viewUid = emoji;\n        tile.extendTemplate({\n            attributes: {\n                class: [\n                    'ck-emoji__tile'\n                ]\n            }\n        });\n        tile.set({\n            label: emoji,\n            tooltip: name,\n            withText: true,\n            ariaLabel: name,\n            // To improve accessibility, disconnect a button and its label connection so that screen\n            // readers can read the `[aria-label]` attribute directly from the more descriptive button.\n            ariaLabelledBy: undefined\n        });\n        tile.on('execute', ()=>{\n            this.fire('execute', {\n                name,\n                emoji\n            });\n        });\n        this.cachedTiles.add(tile);\n        return tile;\n    }\n}\n\n/**\n * A class representing the navigation part of the emoji UI.\n * It is responsible allowing the user to select a particular emoji category.\n */ class EmojiCategoriesView extends View {\n    /**\n\t * Tracks information about the DOM focus in the grid.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * Helps cycling over focusable children in the input view.\n\t */ focusCycler;\n    /**\n\t * A collection of the categories buttons.\n\t */ buttonViews;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { emojiCategories, categoryName }){\n        super(locale);\n        this.buttonViews = this.createCollection(emojiCategories.map((emojiCategory)=>this._createCategoryButton(emojiCategory)));\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.focusCycler = new FocusCycler({\n            focusables: this.buttonViews,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                focusPrevious: 'arrowleft',\n                focusNext: 'arrowright'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-emoji__categories-list'\n                ],\n                role: 'tablist'\n            },\n            children: this.buttonViews\n        });\n        this.on('change:categoryName', (event, name, newValue, oldValue)=>{\n            const oldCategoryButton = this.buttonViews.find((button)=>button.tooltip === oldValue);\n            if (oldCategoryButton) {\n                oldCategoryButton.isOn = false;\n            }\n            const newCategoryButton = this.buttonViews.find((button)=>button.tooltip === newValue);\n            newCategoryButton.isOn = true;\n        });\n        this.set('categoryName', categoryName);\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.buttonViews.forEach((buttonView)=>{\n            this.focusTracker.add(buttonView);\n        });\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n        this.buttonViews.destroy();\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.buttonViews.first.focus();\n    }\n    /**\n\t * Marks all categories buttons as enabled (clickable).\n\t */ enableCategories() {\n        this.buttonViews.forEach((buttonView)=>{\n            buttonView.isEnabled = true;\n        });\n    }\n    /**\n\t * Marks all categories buttons as disabled (non-clickable).\n\t */ disableCategories() {\n        this.buttonViews.forEach((buttonView)=>{\n            buttonView.set({\n                class: '',\n                isEnabled: false,\n                isOn: false\n            });\n        });\n    }\n    /**\n\t * Creates a button representing a category item.\n\t */ _createCategoryButton(emojiCategory) {\n        const buttonView = new ButtonView();\n        const bind = buttonView.bindTemplate;\n        // A `[role=\"tab\"]` element requires also the `[aria-selected]` attribute with its state.\n        buttonView.extendTemplate({\n            attributes: {\n                'aria-selected': bind.to('isOn', (value)=>value.toString()),\n                class: [\n                    'ck-emoji__category-item'\n                ]\n            }\n        });\n        buttonView.set({\n            ariaLabel: emojiCategory.title,\n            label: emojiCategory.icon,\n            role: 'tab',\n            tooltip: emojiCategory.title,\n            withText: true,\n            // To improve accessibility, disconnect a button and its label connection so that screen\n            // readers can read the `[aria-label]` attribute directly from the more descriptive button.\n            ariaLabelledBy: undefined\n        });\n        buttonView.on('execute', ()=>{\n            this.categoryName = emojiCategory.title;\n        });\n        buttonView.on('change:isEnabled', ()=>{\n            if (buttonView.isEnabled && buttonView.tooltip === this.categoryName) {\n                buttonView.isOn = true;\n            }\n        });\n        return buttonView;\n    }\n}\n\n/**\n * A view responsible for providing an input element that allows filtering emoji by the provided query.\n */ class EmojiSearchView extends View {\n    /**\n\t * The find in text input view that stores the searched string.\n\t */ inputView;\n    /**\n\t * An instance of the `EmojiGridView`.\n\t */ gridView;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { gridView, resultsView }){\n        super(locale);\n        this.gridView = gridView;\n        const t = locale.t;\n        this.inputView = new SearchTextView(this.locale, {\n            queryView: {\n                label: t('Find an emoji (min. 2 characters)'),\n                creator: createLabeledInputText\n            },\n            filteredView: this.gridView,\n            infoView: {\n                instance: resultsView\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-search'\n                ],\n                tabindex: '-1'\n            },\n            children: [\n                this.inputView.queryView\n            ]\n        });\n        // Pass through the `search` event to handle it by a parent view.\n        this.inputView.delegate('search').to(this);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.inputView.destroy();\n    }\n    /**\n\t * Searches the {@link #gridView} for the given query.\n\t *\n\t * @param query The search query string.\n\t */ search(query) {\n        const regExp = query ? new RegExp(escapeRegExp(query), 'ig') : null;\n        const filteringResults = this.gridView.filter(regExp);\n        this.inputView.fire('search', {\n            query,\n            ...filteringResults\n        });\n    }\n    /**\n\t * Allows defining the default value in the search text field.\n\t *\n\t * @param value The new value.\n\t */ setInputValue(value) {\n        if (!value) {\n            this.inputView.queryView.fieldView.reset();\n        } else {\n            this.inputView.queryView.fieldView.value = value;\n        }\n    }\n    /**\n\t * Returns an input provided by a user in the search text field.\n\t */ getInputValue() {\n        return this.inputView.queryView.fieldView.element.value;\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.inputView.focus();\n    }\n}\n\n/**\n * A view responsible for selecting a skin tone for an emoji.\n */ class EmojiToneView extends View {\n    /**\n\t * A dropdown element for selecting an active skin tone.\n\t */ dropdownView;\n    /**\n\t * An array of available skin tones.\n\t */ _skinTones;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { skinTone, skinTones }){\n        super(locale);\n        this.set('skinTone', skinTone);\n        this._skinTones = skinTones;\n        const t = locale.t;\n        const accessibleLabel = t('Select skin tone');\n        const dropdownView = createDropdown(locale);\n        const itemDefinitions = new Collection();\n        for (const { id, icon, tooltip } of this._skinTones){\n            const def = {\n                type: 'button',\n                model: new UIModel({\n                    value: id,\n                    label: icon,\n                    ariaLabel: tooltip,\n                    tooltip,\n                    tooltipPosition: 'e',\n                    role: 'menuitemradio',\n                    withText: true,\n                    // To improve accessibility, disconnect a button and its label connection so that screen\n                    // readers can read the `[aria-label]` attribute directly from the more descriptive button.\n                    ariaLabelledBy: undefined\n                })\n            };\n            def.model.bind('isOn').to(this, 'skinTone', (value)=>value === id);\n            itemDefinitions.add(def);\n        }\n        addListToDropdown(dropdownView, itemDefinitions, {\n            ariaLabel: accessibleLabel,\n            role: 'menu'\n        });\n        dropdownView.buttonView.set({\n            label: this._getSkinTone().icon,\n            ariaLabel: accessibleLabel,\n            ariaLabelledBy: undefined,\n            isOn: false,\n            withText: true,\n            tooltip: accessibleLabel\n        });\n        this.dropdownView = dropdownView;\n        // Execute command when an item from the dropdown is selected.\n        this.listenTo(dropdownView, 'execute', (evt)=>{\n            this.skinTone = evt.source.value;\n        });\n        dropdownView.buttonView.bind('label').to(this, 'skinTone', ()=>{\n            return this._getSkinTone().icon;\n        });\n        dropdownView.buttonView.bind('ariaLabel').to(this, 'skinTone', ()=>{\n            // Render a current state, but also what the dropdown does.\n            return `${this._getSkinTone().tooltip}, ${accessibleLabel}`;\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-emoji__skin-tone'\n                ]\n            },\n            children: [\n                dropdownView\n            ]\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ focus() {\n        this.dropdownView.buttonView.focus();\n    }\n    /**\n\t * Helper method for receiving an object describing the active skin tone.\n\t */ _getSkinTone() {\n        return this._skinTones.find((tone)=>tone.id === this.skinTone);\n    }\n}\n\n/**\n * A view that glues pieces of the emoji panel together.\n */ class EmojiPickerView extends View {\n    /**\n\t * A collection of the focusable children of the view.\n\t */ items;\n    /**\n\t * Tracks information about the DOM focus in the view.\n\t */ focusTracker;\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes;\n    /**\n\t * Helps cycling over focusable {@link #items} in the view.\n\t */ focusCycler;\n    /**\n\t * An instance of the `EmojiSearchView`.\n\t */ searchView;\n    /**\n\t * An instance of the `EmojiToneView`.\n\t */ toneView;\n    /**\n\t * An instance of the `EmojiCategoriesView`.\n\t */ categoriesView;\n    /**\n\t * An instance of the `EmojiGridView`.\n\t */ gridView;\n    /**\n\t * An instance of the `EmojiGridView`.\n\t */ infoView;\n    /**\n\t * @inheritDoc\n\t */ constructor(locale, { emojiCategories, getEmojiByQuery, skinTone, skinTones }){\n        super(locale);\n        const categoryName = emojiCategories[0].title;\n        this.gridView = new EmojiGridView(locale, {\n            categoryName,\n            emojiCategories,\n            getEmojiByQuery,\n            skinTone\n        });\n        this.infoView = new SearchInfoView();\n        this.searchView = new EmojiSearchView(locale, {\n            gridView: this.gridView,\n            resultsView: this.infoView\n        });\n        this.categoriesView = new EmojiCategoriesView(locale, {\n            emojiCategories,\n            categoryName\n        });\n        this.toneView = new EmojiToneView(locale, {\n            skinTone,\n            skinTones\n        });\n        this.items = this.createCollection([\n            this.searchView,\n            this.toneView,\n            this.categoriesView,\n            this.gridView,\n            this.infoView\n        ]);\n        this.focusTracker = new FocusTracker();\n        this.keystrokes = new KeystrokeHandler();\n        this.focusCycler = new FocusCycler({\n            focusables: this.items,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                focusPrevious: 'shift + tab',\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            children: [\n                {\n                    tag: 'div',\n                    children: [\n                        this.searchView,\n                        this.toneView\n                    ],\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-emoji__search'\n                        ]\n                    }\n                },\n                this.categoriesView,\n                this.gridView,\n                {\n                    tag: 'div',\n                    children: [\n                        this.infoView\n                    ],\n                    attributes: {\n                        class: [\n                            'ck',\n                            'ck-search__results'\n                        ]\n                    }\n                }\n            ],\n            attributes: {\n                tabindex: '-1',\n                class: [\n                    'ck',\n                    'ck-emoji',\n                    'ck-search'\n                ]\n            }\n        });\n        this._setupEventListeners();\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        this.focusTracker.add(this.searchView.element);\n        this.focusTracker.add(this.toneView.element);\n        this.focusTracker.add(this.categoriesView.element);\n        this.focusTracker.add(this.gridView.element);\n        this.focusTracker.add(this.infoView.element);\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Focuses the search input.\n\t */ focus() {\n        this.searchView.focus();\n    }\n    /**\n\t * Initializes interactions between sub-views.\n\t */ _setupEventListeners() {\n        const t = this.locale.t;\n        // Disable the category switcher when filtering by a query.\n        this.searchView.on('search', (evt, data)=>{\n            if (data.query) {\n                this.categoriesView.disableCategories();\n            } else {\n                this.categoriesView.enableCategories();\n            }\n        });\n        // Show a user-friendly message depending on the search query.\n        this.searchView.on('search', (evt, data)=>{\n            if (data.query.length === 1) {\n                this.infoView.set({\n                    primaryText: t('Keep on typing to see the emoji.'),\n                    secondaryText: t('The query must contain at least two characters.'),\n                    isVisible: true\n                });\n            } else if (!data.resultsCount) {\n                this.infoView.set({\n                    primaryText: t('No emojis were found matching \"%0\".', data.query),\n                    secondaryText: t('Please try a different phrase or check the spelling.'),\n                    isVisible: true\n                });\n            } else {\n                this.infoView.set({\n                    isVisible: false\n                });\n            }\n        });\n        // Emit an update event to react to balloon dimensions changes.\n        this.searchView.on('search', ()=>{\n            this.fire('update');\n            this.gridView.element.scrollTo(0, 0);\n        });\n        // Update the grid of emojis when the selected category is changed.\n        this.categoriesView.on('change:categoryName', (ev, args, categoryName)=>{\n            this.gridView.categoryName = categoryName;\n            this.searchView.search('');\n        });\n        // Update the grid of emojis when the selected skin tone is changed.\n        // In such a case, the displayed emoji should use an updated skin tone value.\n        this.toneView.on('change:skinTone', (evt, propertyName, newValue)=>{\n            this.gridView.skinTone = newValue;\n            this.searchView.search(this.searchView.getInputValue());\n        });\n    }\n}\n\n/**\n * The emoji picker form view.\n */ class EmojiPickerFormView extends View {\n    /**\n\t * The Back button view displayed in the header.\n\t */ backButtonView;\n    /**\n\t * Tracks information about DOM focus in the form.\n\t */ focusTracker = new FocusTracker();\n    /**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */ keystrokes = new KeystrokeHandler();\n    /**\n\t * A collection of child views.\n\t */ children;\n    /**\n\t * A collection of views that can be focused in the form.\n\t */ _focusables = new ViewCollection();\n    /**\n\t * Helps cycling over {@link #_focusables} in the form.\n\t */ _focusCycler;\n    /**\n\t * Creates an instance of the {@link module:emoji/ui/emojipickerformview~EmojiPickerFormView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */ constructor(locale){\n        super(locale);\n        this.backButtonView = this._createBackButton();\n        this.children = this.createCollection([\n            this._createHeaderView()\n        ]);\n        this._focusCycler = new FocusCycler({\n            focusables: this._focusables,\n            focusTracker: this.focusTracker,\n            keystrokeHandler: this.keystrokes,\n            actions: {\n                // Navigate form fields backward using the Shift + Tab keystroke.\n                focusPrevious: 'shift + tab',\n                // Navigate form fields forwards using the Tab key.\n                focusNext: 'tab'\n            }\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-form',\n                    'ck-emoji-picker-form',\n                    'ck-responsive-form'\n                ],\n                // https://github.com/ckeditor/ckeditor5-link/issues/90\n                tabindex: '-1'\n            },\n            children: this.children\n        });\n    }\n    /**\n\t * @inheritDoc\n\t */ render() {\n        super.render();\n        const childViews = [\n            ...this.children.filter(isFocusable),\n            this.backButtonView\n        ];\n        childViews.forEach((v)=>{\n            // Register the view as focusable.\n            this._focusables.add(v);\n            // Register the view in the focus tracker.\n            this.focusTracker.add(v.element);\n            // Register the view in the focus cycler to avoid nested focus cycles traps.\n            if (isViewWithFocusCycler(v)) {\n                this._focusCycler.chain(v.focusCycler);\n            }\n        });\n        // Start listening for the keystrokes coming from #element.\n        this.keystrokes.listenTo(this.element);\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        this.focusTracker.destroy();\n        this.keystrokes.destroy();\n    }\n    /**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */ focus() {\n        this._focusCycler.focusFirst();\n    }\n    /**\n\t * Creates a back button view that cancels the form.\n\t */ _createBackButton() {\n        const t = this.locale.t;\n        const backButton = new ButtonView(this.locale);\n        backButton.set({\n            class: 'ck-button-back',\n            label: t('Back'),\n            icon: IconPreviousArrow,\n            tooltip: true\n        });\n        backButton.delegate('execute').to(this, 'cancel');\n        return backButton;\n    }\n    /**\n\t * Creates a header view for the form.\n\t */ _createHeaderView() {\n        const t = this.locale.t;\n        const header = new FormHeaderView(this.locale, {\n            label: t('Emoji picker')\n        });\n        header.children.add(this.backButtonView, 0);\n        return header;\n    }\n}\n\nconst VISUAL_SELECTION_MARKER_NAME = 'emoji-picker';\n/**\n * The emoji picker plugin.\n *\n * Introduces the `'emoji'` dropdown.\n */ class EmojiPicker extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiRepository,\n            ContextualBalloon,\n            Dialog,\n            Typing\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'EmojiPicker';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n    /**\n\t * @inheritDoc\n\t */ async init() {\n        const editor = this.editor;\n        this.balloonPlugin = editor.plugins.get('ContextualBalloon');\n        this.emojiRepositoryPlugin = editor.plugins.get('EmojiRepository');\n        // Skip registering a button in the toolbar and list item in the menu bar if the emoji repository is not ready.\n        if (!await this.emojiRepositoryPlugin.isReady()) {\n            return;\n        }\n        const command = new EmojiCommand(editor);\n        editor.commands.add('emoji', command);\n        editor.ui.componentFactory.add('emoji', ()=>{\n            const button = this._createButton(ButtonView, command);\n            button.set({\n                tooltip: true\n            });\n            return button;\n        });\n        editor.ui.componentFactory.add('menuBar:emoji', ()=>{\n            return this._createButton(MenuBarMenuListItemButtonView, command);\n        });\n        this._setupConversion();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        super.destroy();\n        if (this.emojiPickerView) {\n            this.emojiPickerView.destroy();\n        }\n    }\n    /**\n\t * Represents an active skin tone. Its value depends on the emoji UI plugin.\n\t *\n\t * Before opening the UI for the first time, the returned value is read from the editor configuration.\n\t * Otherwise, it reflects the user's intention.\n\t */ get skinTone() {\n        if (!this.emojiPickerView) {\n            return this.editor.config.get('emoji.skinTone');\n        }\n        return this.emojiPickerView.gridView.skinTone;\n    }\n    /**\n\t * Displays the balloon with the emoji picker.\n\t *\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */ showUI(searchValue = '') {\n        // Show visual selection on a text when the contextual balloon is displayed.\n        // See #17654.\n        this._showFakeVisualSelection();\n        if (!this.emojiPickerView) {\n            this.emojiPickerView = this._createEmojiPickerView();\n        }\n        if (searchValue) {\n            this.emojiPickerView.searchView.setInputValue(searchValue);\n        }\n        this.emojiPickerView.searchView.search(searchValue);\n        if (!this.emojiPickerFormView) {\n            this.emojiPickerFormView = this._createEmojiPickerFormView();\n        }\n        if (!this.balloonPlugin.hasView(this.emojiPickerFormView)) {\n            // Show back button if there is another balloon view visible.\n            this.emojiPickerFormView.backButtonView.isVisible = !!this.balloonPlugin.visibleView;\n            this.balloonPlugin.add({\n                view: this.emojiPickerFormView,\n                position: this._getBalloonPositionData(),\n                balloonClassName: 'ck-emoji-picker-balloon'\n            });\n        }\n        this.emojiPickerView.focus();\n    }\n    /**\n\t * Creates a button for toolbar and menu bar that will show the emoji dialog.\n\t */ _createButton(ViewClass, command) {\n        const buttonView = new ViewClass(this.editor.locale);\n        const t = this.editor.locale.t;\n        buttonView.bind('isEnabled').to(command, 'isEnabled');\n        buttonView.set({\n            label: t('Emoji'),\n            icon: IconEmoji,\n            isToggleable: true\n        });\n        buttonView.on('execute', ()=>{\n            this.editor.editing.view.scrollToTheSelection();\n            this.showUI();\n        });\n        return buttonView;\n    }\n    /**\n\t * Creates an instance of the `EmojiPickerView` class that represents an emoji balloon.\n\t */ _createEmojiPickerView() {\n        const emojiPickerView = new EmojiPickerView(this.editor.locale, {\n            emojiCategories: this.emojiRepositoryPlugin.getEmojiCategories(),\n            skinTone: this.editor.config.get('emoji.skinTone'),\n            skinTones: this.emojiRepositoryPlugin.getSkinTones(),\n            getEmojiByQuery: (query)=>{\n                return this.emojiRepositoryPlugin.getEmojiByQuery(query);\n            }\n        });\n        // Insert an emoji on a tile click.\n        this.listenTo(emojiPickerView.gridView, 'execute', (evt, data)=>{\n            const editor = this.editor;\n            const textToInsert = data.emoji;\n            this._hideUI();\n            editor.execute('insertText', {\n                text: textToInsert\n            });\n        });\n        return emojiPickerView;\n    }\n    /**\n\t * Creates an instance of the `EmojiPickerFormView` class that represents a balloon with the emoji picker.\n\t */ _createEmojiPickerFormView() {\n        const emojiPickerFormView = new EmojiPickerFormView(this.editor.locale);\n        emojiPickerFormView.children.add(this.emojiPickerView);\n        // Update the balloon position when layout is changed.\n        this.listenTo(this.emojiPickerView, 'update', ()=>{\n            if (this.balloonPlugin.visibleView === emojiPickerFormView) {\n                this.balloonPlugin.updatePosition();\n            }\n        });\n        // Close the dialog when the back button is clicked.\n        this.listenTo(emojiPickerFormView, 'cancel', ()=>{\n            this._hideUI();\n        });\n        // Close the panel on `Esc` key press when the **actions have focus**.\n        emojiPickerFormView.keystrokes.set('Esc', (data, cancel)=>{\n            this._hideUI();\n            cancel();\n        });\n        // Close the dialog when clicking outside of it.\n        clickOutsideHandler({\n            emitter: emojiPickerFormView,\n            contextElements: [\n                this.balloonPlugin.view.element\n            ],\n            callback: ()=>{\n                // Focusing on the editable during a click outside the balloon panel might\n                // cause the selection to move to the beginning of the editable, so we avoid\n                // focusing on it during this action.\n                // See: https://github.com/ckeditor/ckeditor5/issues/18253\n                this._hideUI(false);\n            },\n            activator: ()=>this.balloonPlugin.visibleView === emojiPickerFormView\n        });\n        return emojiPickerFormView;\n    }\n    /**\n\t * Hides the balloon with the emoji picker.\n\t *\n\t * @param updateFocus Whether to focus the editor after closing the emoji picker.\n\t */ _hideUI(updateFocus = true) {\n        this.balloonPlugin.remove(this.emojiPickerFormView);\n        this.emojiPickerView.searchView.setInputValue('');\n        if (updateFocus) {\n            this.editor.editing.view.focus();\n        }\n        this._hideFakeVisualSelection();\n    }\n    /**\n\t * Registers converters.\n\t */ _setupConversion() {\n        const editor = this.editor;\n        // Renders a fake visual selection marker on an expanded selection.\n        editor.conversion.for('editingDowncast').markerToHighlight({\n            model: VISUAL_SELECTION_MARKER_NAME,\n            view: {\n                classes: [\n                    'ck-fake-emoji-selection'\n                ]\n            }\n        });\n        // Renders a fake visual selection marker on a collapsed selection.\n        editor.conversion.for('editingDowncast').markerToElement({\n            model: VISUAL_SELECTION_MARKER_NAME,\n            view: (data, { writer })=>{\n                if (!data.markerRange.isCollapsed) {\n                    return null;\n                }\n                const markerElement = writer.createUIElement('span');\n                writer.addClass([\n                    'ck-fake-emoji-selection',\n                    'ck-fake-emoji-selection_collapsed'\n                ], markerElement);\n                return markerElement;\n            }\n        });\n    }\n    /**\n\t * Returns positioning options for the {@link #balloonPlugin}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t */ _getBalloonPositionData() {\n        const view = this.editor.editing.view;\n        const viewDocument = view.document;\n        // Set a target position by converting view selection range to DOM.\n        const target = ()=>view.domConverter.viewRangeToDom(viewDocument.selection.getFirstRange());\n        return {\n            target\n        };\n    }\n    /**\n\t * Displays a fake visual selection when the contextual balloon is displayed.\n\t *\n\t * This adds an 'emoji-picker' marker into the document that is rendered as a highlight on selected text fragment.\n\t */ _showFakeVisualSelection() {\n        const model = this.editor.model;\n        model.change((writer)=>{\n            const range = model.document.selection.getFirstRange();\n            if (model.markers.has(VISUAL_SELECTION_MARKER_NAME)) {\n                writer.updateMarker(VISUAL_SELECTION_MARKER_NAME, {\n                    range\n                });\n            } else {\n                if (range.start.isAtEnd) {\n                    const startPosition = range.start.getLastMatchingPosition(({ item })=>!model.schema.isContent(item), {\n                        boundaries: range\n                    });\n                    writer.addMarker(VISUAL_SELECTION_MARKER_NAME, {\n                        usingOperation: false,\n                        affectsData: false,\n                        range: writer.createRange(startPosition, range.end)\n                    });\n                } else {\n                    writer.addMarker(VISUAL_SELECTION_MARKER_NAME, {\n                        usingOperation: false,\n                        affectsData: false,\n                        range\n                    });\n                }\n            }\n        });\n    }\n    /**\n\t * Hides the fake visual selection.\n\t */ _hideFakeVisualSelection() {\n        const model = this.editor.model;\n        if (model.markers.has(VISUAL_SELECTION_MARKER_NAME)) {\n            model.change((writer)=>{\n                writer.removeMarker(VISUAL_SELECTION_MARKER_NAME);\n            });\n        }\n    }\n}\n\n/**\n * The emoji plugin.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * {@link module:emoji/emojimention~EmojiMention},\n * * {@link module:emoji/emojipicker~EmojiPicker},\n */ class Emoji extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            EmojiMention,\n            EmojiPicker\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'Emoji';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get isOfficialPlugin() {\n        return true;\n    }\n}\n\nexport { Emoji, EmojiCategoriesView, EmojiCommand, EmojiGridView, EmojiMention, EmojiPicker, EmojiPickerFormView, EmojiPickerView, EmojiRepository, EmojiSearchView, EmojiToneView, EmojiUtils, isEmojiSupported as _isEmojiSupported };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2023, Koala Interactive SAS\n * For licensing, see https://github.com/koala-interactive/is-emoji-supported/blob/master/LICENSE.md\n */\n\n/**\n * @module emoji/utils/isemojisupported\n */\n\n/**\n * Checks if the two pixels parts are the same using canvas.\n *\n * @internal\n */\nexport function isEmojiSupported( unicode: string ): boolean {\n\tconst ctx = getCanvas();\n\n\t/* istanbul ignore next -- @preserve */\n\tif ( !ctx ) {\n\t\treturn false;\n\t}\n\n\tconst CANVAS_HEIGHT = 25;\n\tconst CANVAS_WIDTH = 20;\n\tconst textSize = Math.floor( CANVAS_HEIGHT / 2 );\n\n\t// Initialize canvas context.\n\tctx.font = textSize + 'px Arial, Sans-Serif';\n\tctx.textBaseline = 'top';\n\tctx.canvas.width = CANVAS_WIDTH * 2;\n\tctx.canvas.height = CANVAS_HEIGHT;\n\n\tctx.clearRect( 0, 0, CANVAS_WIDTH * 2, CANVAS_HEIGHT );\n\n\t// Draw in red on the left.\n\tctx.fillStyle = '#FF0000';\n\tctx.fillText( unicode, 0, 22 );\n\n\t// Draw in blue on right.\n\tctx.fillStyle = '#0000FF';\n\tctx.fillText( unicode, CANVAS_WIDTH, 22 );\n\n\tconst a = ctx.getImageData( 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT ).data;\n\tconst count = a.length;\n\tlet i = 0;\n\n\t// Search the first visible pixel.\n\tfor ( ; i < count && !a[ i + 3 ]; i += 4 );\n\n\t// No visible pixel.\n\t/* istanbul ignore next -- @preserve */\n\tif ( i >= count ) {\n\t\treturn false;\n\t}\n\n\t// Emoji has immutable color, so we check the color of the emoji in two different colors.\n\t// the result show be the same.\n\tconst x = CANVAS_WIDTH + ( ( i / 4 ) % CANVAS_WIDTH );\n\tconst y = Math.floor( i / 4 / CANVAS_WIDTH );\n\tconst b = ctx.getImageData( x, y, 1, 1 ).data;\n\n\t/* istanbul ignore next -- @preserve */\n\tif ( a[ i ] !== b[ 0 ] || a[ i + 2 ] !== b[ 2 ]) {\n\t\treturn false;\n\t}\n\n\t//Some emojis consist of different ones, so they will show multiple characters if they are not supported.\n\t/* istanbul ignore next -- @preserve */\n\tif ( ctx.measureText( unicode ).width >= CANVAS_WIDTH ) {\n\t\treturn false;\n\t}\n\n\t// Supported.\n\treturn true;\n};\n\nfunction getCanvas(): CanvasRenderingContext2D | null {\n\ttry {\n\t\treturn document.createElement( 'canvas' ).getContext( '2d', { willReadFrequently: true } );\n\t} catch {\n\t\t/* istanbul ignore next -- @preserve */\n\t\treturn null;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport type { EmojiCdnResource, EmojiEntry } from './emojirepository.js';\nimport type { EmojiSkinToneId } from './emojiconfig.js';\nimport { isEmojiSupported } from './utils/isemojisupported.js';\n\n/**\n * @module emoji/emojiutils\n */\n\nconst SKIN_TONE_MAP: Record<number, EmojiSkinToneId> = {\n\t0: 'default',\n\t1: 'light',\n\t2: 'medium-light',\n\t3: 'medium',\n\t4: 'medium-dark',\n\t5: 'dark'\n};\n\n/**\n * A map representing an emoji and its release version.\n * It's used to identify a user's minimal supported emoji level.\n * We skip versions with older patches, such as 15.0 instead of 15.1 etc.\n */\nconst EMOJI_SUPPORT_LEVEL: Record<string, number> = {\n\t'🫩': 16, // Face with bags under eyes.\n\t'🫨': 15.1, // Shaking Face.\n\t'🫠': 14, // Melting Face.\n\t'😶‍🌫️': 13.1, // Face in Clouds.\n\t'🧑‍💻': 12.1, // Technologist.\n\t'🥰': 11, // Smiling Face with Hearts.\n\t'🤪': 5, // Zany Face.\n\t'⚕️': 4, // Medical Symbol.\n\t'🤣': 3, // Rolling on the Floor Laughing.\n\t'👋🏽': 2, // Waving Hand: Medium Skin Tone.\n\t'😀': 1, // Grinning Face.\n\t'😐': 0.7, // Neutral Face.\n\t'😂': 0.6 // Face with Tears of Joy.\n};\n\nconst BASELINE_EMOJI_WIDTH = 24;\n\n/**\n * The Emoji utilities plugin.\n */\nexport class EmojiUtils extends Plugin {\n\t/**\n\t * Used for testing whether the environment supports the given emoji.\n\t */\n\tprivate _emojiCanvas: CanvasRenderingContext2D | null = null;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiUtils' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tthis._emojiCanvas = document.createElement( 'canvas' ).getContext( '2d' );\n\t}\n\n\t/**\n\t * Checks if the emoji is supported by verifying the emoji version supported by the system first.\n\t * Then checks if emoji contains a zero width joiner (ZWJ), and if yes, then checks if it is supported by the system.\n\t */\n\tpublic isEmojiSupported( item: EmojiCdnResource, emojiSupportedVersionByOs: number, container: HTMLDivElement ): boolean {\n\t\tconst isEmojiVersionSupported = item.version <= emojiSupportedVersionByOs;\n\n\t\tif ( !isEmojiVersionSupported ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !this.hasZwj( item.emoji ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn this.isEmojiZwjSupported( item, container );\n\t}\n\n\t/**\n\t * Checks the supported emoji version by the OS, by sampling some representatives from different emoji releases.\n\t */\n\tpublic getEmojiSupportedVersionByOs(): number {\n\t\tfor ( const [ emoji, emojiVersion ] of Object.entries( EMOJI_SUPPORT_LEVEL ) ) {\n\t\t\tif ( EmojiUtils._isEmojiSupported( emoji ) ) {\n\t\t\t\treturn emojiVersion;\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Check for ZWJ (zero width joiner) character.\n\t */\n\tpublic hasZwj( emoji: string ): boolean {\n\t\treturn emoji.includes( '\\u200d' );\n\t}\n\n\t/**\n\t * Checks whether the emoji is supported in the operating system.\n\t */\n\tpublic isEmojiZwjSupported( item: EmojiCdnResource, container: HTMLDivElement ): boolean {\n\t\t// On Windows, some supported emoji are ~50% bigger than the baseline emoji, but what we really want to guard\n\t\t// against are the ones that are 2x the size, because those are truly broken (person with red hair = person with\n\t\t// floating red wig, black cat = cat with black square, polar bear = bear with snowflake, etc.)\n\t\t// So here we set the threshold at 1.8 times the size of the baseline emoji.\n\n\t\tconst canvasWidth = this.getNodeWidthUsingCanvas( container, item.emoji );\n\n\t\t// Checking emoji using canvas is much faster, so always try it first. Unfortunately canvas has worse emoji coverage.\n\t\tif ( canvasWidth < BASELINE_EMOJI_WIDTH * 1.8 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst domWidth = this.getNodeWidth( container, item.emoji );\n\n\t\t// Checking emoji using DOM is much slower, so use it as a fallback.\n\t\treturn domWidth < BASELINE_EMOJI_WIDTH * 1.8;\n\t}\n\n\t/**\n\t * Returns the width of the provided node.\n\t */\n\tpublic getNodeWidth( container: HTMLDivElement, node: string ): number {\n\t\tconst span = document.createElement( 'span' );\n\t\tspan.textContent = node;\n\t\tcontainer.appendChild( span );\n\t\tconst nodeWidth = span.offsetWidth;\n\t\tcontainer.removeChild( span );\n\n\t\treturn nodeWidth;\n\t}\n\n\t/**\n\t * Returns the width of the provided node.\n\t *\n\t * This is a faster alternative to `getNodeWidth` method, which works for great majority of emojis.\n\t */\n\tpublic getNodeWidthUsingCanvas( container: HTMLDivElement, node: string ): number {\n\t\tconst style = getComputedStyle( container );\n\n\t\tthis._emojiCanvas!.font = [\n\t\t\tstyle.fontStyle,\n\t\t\tstyle.fontVariant,\n\t\t\tstyle.fontWeight,\n\t\t\t`${ BASELINE_EMOJI_WIDTH }px`,\n\t\t\t`\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Noto Color Emoji\", ${ style.fontFamily }`\n\t\t].join( ' ' );\n\n\t\treturn Math.ceil( this._emojiCanvas!.measureText( node ).width );\n\t}\n\n\t/**\n\t * Creates a div for emoji width testing purposes.\n\t */\n\tpublic createEmojiWidthTestingContainer(): HTMLDivElement {\n\t\tconst container = document.createElement( 'div' );\n\n\t\tcontainer.setAttribute( 'aria-hidden', 'true' );\n\t\tcontainer.style.position = 'absolute';\n\t\tcontainer.style.left = '-9999px';\n\t\tcontainer.style.whiteSpace = 'nowrap';\n\t\tcontainer.style.fontSize = BASELINE_EMOJI_WIDTH + 'px';\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Adds default skin tone property to each emoji. If emoji defines other skin tones, they are added as well.\n\t */\n\tpublic normalizeEmojiSkinTone( item: EmojiCdnResource ): EmojiEntry {\n\t\tconst entry: EmojiEntry = {\n\t\t\t...item,\n\t\t\tskins: {\n\t\t\t\tdefault: item.emoji\n\t\t\t}\n\t\t};\n\n\t\tif ( item.skins ) {\n\t\t\titem.skins.forEach( skin => {\n\t\t\t\tconst skinTone = SKIN_TONE_MAP[ skin.tone ];\n\n\t\t\t\tentry.skins[ skinTone ] = skin.emoji;\n\t\t\t} );\n\t\t}\n\n\t\treturn entry;\n\t}\n\n\t/**\n\t * Checks whether the emoji belongs to a group that is allowed.\n\t */\n\tpublic isEmojiCategoryAllowed( item: EmojiCdnResource ): boolean {\n\t\t// Category group=2 contains skin tones only, which we do not want to render.\n\t\treturn item.group !== 2;\n\t}\n\n\t/**\n\t * A function used to determine if emoji is supported by detecting pixels.\n\t *\n\t * Referenced for unit testing purposes. Kept in a separate file because of licensing.\n\t */\n\tprivate static _isEmojiSupported = isEmojiSupported;\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojirepository\n */\n\nimport fuzzysort from 'fuzzysort';\nimport { groupBy } from 'es-toolkit/compat';\n\nimport { type Editor, Plugin } from 'ckeditor5/src/core.js';\nimport { logWarning, version as editorVersion } from 'ckeditor5/src/utils.js';\nimport { EmojiUtils } from './emojiutils.js';\nimport type { EmojiSkinToneId } from './emojiconfig.js';\n\n// An endpoint from which the emoji data will be downloaded during plugin initialization.\n// The `{version}` placeholder is replaced with the value from editor config.\nconst DEFAULT_EMOJI_DATABASE_URL = 'https://cdn.ckeditor.com/ckeditor5/data/emoji/{version}/en.json';\n\nconst DEFAULT_EMOJI_VERSION = 16;\n\n/**\n * The emoji repository plugin.\n *\n * Loads the emoji repository from URL during plugin initialization and provides utility methods to search it.\n */\nexport class EmojiRepository extends Plugin {\n\t/**\n\t * A callback to resolve the {@link #_repositoryPromise} to control the return value of this promise.\n\t */\n\tdeclare private _repositoryPromiseResolveCallback: ( value: boolean ) => void;\n\n\t/**\n\t * Emoji repository in a configured version.\n\t */\n\tprivate _items: Array<EmojiEntry> | null;\n\n\t/**\n\t * The resolved URL from which the emoji repository is downloaded.\n\t */\n\tprivate readonly _url: URL;\n\n\t/**\n\t * A promise resolved after downloading the emoji collection.\n\t * The promise resolves with `true` when the repository is successfully downloaded or `false` otherwise.\n\t */\n\tprivate readonly _repositoryPromise: Promise<boolean>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiUtils ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiRepository' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\teditor.config.define( 'emoji', {\n\t\t\tversion: undefined,\n\t\t\tskinTone: 'default',\n\t\t\tdefinitionsUrl: undefined,\n\t\t\tuseCustomFont: false\n\t\t} );\n\n\t\tthis._url = this._getUrl();\n\n\t\tthis._repositoryPromise = new Promise<boolean>( resolve => {\n\t\t\tthis._repositoryPromiseResolveCallback = resolve;\n\t\t} );\n\n\t\tthis._items = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic async init(): Promise<void> {\n\t\tthis._warnAboutCdnUse();\n\n\t\tawait this._loadAndCacheEmoji();\n\n\t\tthis._items = this._getItems();\n\n\t\tif ( !this._items ) {\n\t\t\t/**\n\t\t\t * Unable to identify the available emoji to display.\n\t\t\t *\n\t\t\t * See the {@glink features/emoji#troubleshooting troubleshooting} section in the {@glink features/emoji Emoji feature} guide\n\t\t\t * for more details.\n\t\t\t *\n\t\t\t * @error emoji-repository-empty\n\t\t\t */\n\t\t\tlogWarning( 'emoji-repository-empty' );\n\n\t\t\treturn this._repositoryPromiseResolveCallback( false );\n\t\t}\n\n\t\treturn this._repositoryPromiseResolveCallback( true );\n\t}\n\n\t/**\n\t * Returns an array of emoji entries that match the search query.\n\t * If the emoji repository is not loaded this method returns an empty array.\n\t *\n\t * @param searchQuery A search query to match emoji.\n\t * @returns An array of emoji entries that match the search query.\n\t */\n\tpublic getEmojiByQuery( searchQuery: string ): Array<EmojiEntry> {\n\t\tif ( !this._items ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst searchQueryTokens = searchQuery.split( /\\s/ ).filter( Boolean );\n\n\t\t// Perform the search only if there is at least two non-white characters next to each other.\n\t\tconst shouldSearch = searchQueryTokens.some( token => token.length >= 2 );\n\n\t\tif ( !shouldSearch ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn fuzzysort\n\t\t\t.go( searchQuery, this._items, {\n\t\t\t\tthreshold: 0.6,\n\t\t\t\tkeys: [\n\t\t\t\t\t'emoticon',\n\t\t\t\t\t'annotation',\n\t\t\t\t\t( emojiEntry: EmojiEntry ) => {\n\t\t\t\t\t\t// Instead of searching over all tags, let's use only those that matches the query.\n\t\t\t\t\t\t// It enables searching in tags with the space character in names.\n\t\t\t\t\t\tconst searchQueryTokens = searchQuery.split( /\\s/ ).filter( Boolean );\n\n\t\t\t\t\t\tconst matchedTags = searchQueryTokens.flatMap( tok => {\n\t\t\t\t\t\t\treturn emojiEntry.tags?.filter( t => t.startsWith( tok ) );\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\treturn matchedTags.join();\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t} )\n\t\t\t.map( result => result.obj );\n\t}\n\n\t/**\n\t * Groups all emojis by categories.\n\t * If the emoji repository is not loaded, it returns an empty array.\n\t *\n\t * @returns An array of emoji entries grouped by categories.\n\t */\n\tpublic getEmojiCategories(): Array<EmojiCategory> {\n\t\tconst repository = this._getItems();\n\n\t\tif ( !repository ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst { t } = this.editor.locale;\n\n\t\tconst categories = [\n\t\t\t{ title: t( 'Smileys & Expressions' ), icon: '😄', groupId: 0 },\n\t\t\t{ title: t( 'Gestures & People' ), icon: '👋', groupId: 1 },\n\t\t\t{ title: t( 'Animals & Nature' ), icon: '🐻', groupId: 3 },\n\t\t\t{ title: t( 'Food & Drinks' ), icon: '🍎', groupId: 4 },\n\t\t\t{ title: t( 'Travel & Places' ), icon: '🚘', groupId: 5 },\n\t\t\t{ title: t( 'Activities' ), icon: '🏀', groupId: 6 },\n\t\t\t{ title: t( 'Objects' ), icon: '💡', groupId: 7 },\n\t\t\t{ title: t( 'Symbols' ), icon: '🔵', groupId: 8 },\n\t\t\t{ title: t( 'Flags' ), icon: '🏁', groupId: 9 }\n\t\t];\n\n\t\tconst groups = groupBy( repository, item => item.group );\n\n\t\treturn categories.map( category => {\n\t\t\treturn {\n\t\t\t\t...category,\n\t\t\t\titems: groups[ category.groupId ]\n\t\t\t};\n\t\t} );\n\t}\n\n\t/**\n\t * Returns an array of available skin tones.\n\t */\n\tpublic getSkinTones(): Array<EmojiSkinTone> {\n\t\tconst { t } = this.editor.locale;\n\n\t\treturn [\n\t\t\t{ id: 'default', icon: '👋', tooltip: t( 'Default skin tone' ) },\n\t\t\t{ id: 'light', icon: '👋🏻', tooltip: t( 'Light skin tone' ) },\n\t\t\t{ id: 'medium-light', icon: '👋🏼', tooltip: t( 'Medium Light skin tone' ) },\n\t\t\t{ id: 'medium', icon: '👋🏽', tooltip: t( 'Medium skin tone' ) },\n\t\t\t{ id: 'medium-dark', icon: '👋🏾', tooltip: t( 'Medium Dark skin tone' ) },\n\t\t\t{ id: 'dark', icon: '👋🏿', tooltip: t( 'Dark skin tone' ) }\n\t\t];\n\t}\n\n\t/**\n\t * Indicates whether the emoji repository has been successfully downloaded and the plugin is operational.\n\t */\n\tpublic isReady(): Promise<boolean> {\n\t\treturn this._repositoryPromise;\n\t}\n\n\t/**\n\t * Returns the URL from which the emoji repository is downloaded. If the URL is not provided\n\t * in the configuration, the default URL is used with the version from the configuration.\n\t *\n\t * If both the URL and version are provided, a warning is logged.\n\t */\n\tprivate _getUrl(): URL {\n\t\tconst { definitionsUrl, version } = this.editor.config.get( 'emoji' )!;\n\n\t\tif ( !definitionsUrl || definitionsUrl === 'cdn' ) {\n\t\t\t// URL was not provided or is set to 'cdn', so we use the default CDN URL.\n\t\t\tconst urlVersion = version || DEFAULT_EMOJI_VERSION;\n\t\t\tconst url = new URL( DEFAULT_EMOJI_DATABASE_URL.replace( '{version}', urlVersion.toString() ) );\n\n\t\t\turl.searchParams.set( 'editorVersion', editorVersion );\n\n\t\t\treturn url;\n\t\t}\n\n\t\tif ( version ) {\n\t\t\t/**\n\t\t\t * Both {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`} and\n\t\t\t * {@link module:emoji/emojiconfig~EmojiConfig#version `emoji.version`} configuration options\n\t\t\t * are set. Only the `emoji.definitionsUrl` option will be used.\n\t\t\t *\n\t\t\t * The `emoji.version` option will be ignored and should be removed from the configuration.\n\t\t\t *\n\t\t\t * @error emoji-repository-redundant-version\n\t\t\t */\n\t\t\tlogWarning( 'emoji-repository-redundant-version' );\n\t\t}\n\n\t\treturn new URL( definitionsUrl );\n\t}\n\n\t/**\n\t * Warn users on self-hosted installations that this plugin uses a CDN to fetch the emoji repository.\n\t */\n\tprivate _warnAboutCdnUse(): void {\n\t\tconst editor = this.editor;\n\t\tconst config = editor.config.get( 'emoji' );\n\t\tconst licenseKey = editor.config.get( 'licenseKey' );\n\t\tconst distributionChannel = ( window as any )[ Symbol.for( 'cke distribution' ) ];\n\n\t\tif ( licenseKey === 'GPL' ) {\n\t\t\t// Don't warn GPL users.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( distributionChannel === 'cloud' ) {\n\t\t\t// Don't warn cloud users, because they already use our CDN.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( config && config.definitionsUrl ) {\n\t\t\t// Don't warn users who have configured their own definitions URL.\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * It was detected that your installation uses a commercial license key,\n\t\t * and the default {@glink features/emoji#emoji-source CKEditor CDN for Emoji plugin data}.\n\t\t *\n\t\t * To avoid this, you can use the {@link module:emoji/emojiconfig~EmojiConfig#definitionsUrl `emoji.definitionsUrl`}\n\t\t * configuration option to provide a URL to your own emoji repository.\n\t\t *\n\t\t * If you want to suppress this warning, while using the default CDN, set this configuration option to `cdn`.\n\t\t *\n\t\t * @error emoji-repository-cdn-use\n\t\t */\n\t\tlogWarning( 'emoji-repository-cdn-use' );\n\t}\n\n\t/**\n\t * Returns the emoji repository in a configured version if it is a non-empty array. Returns `null` otherwise.\n\t */\n\tprivate _getItems(): Array<EmojiEntry> | null {\n\t\tconst repository = EmojiRepository._results[ this._url.href ];\n\n\t\treturn repository && repository.length ? repository : null;\n\t}\n\n\t/**\n\t * Loads the emoji repository. If the repository is already loaded, it returns the cached result.\n\t * Otherwise, it fetches the repository from the URL and adds it to the cache.\n\t */\n\tprivate async _loadAndCacheEmoji(): Promise<void> {\n\t\tif ( EmojiRepository._results[ this._url.href ] ) {\n\t\t\t// The repository has already been downloaded.\n\t\t\treturn;\n\t\t}\n\n\t\tconst result: Array<EmojiCdnResource> = await fetch( this._url, { cache: 'force-cache' } )\n\t\t\t.then( response => {\n\t\t\t\tif ( !response.ok ) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\treturn response.json();\n\t\t\t} )\n\t\t\t.catch( () => {\n\t\t\t\treturn [];\n\t\t\t} );\n\n\t\tEmojiRepository._results[ this._url.href ] = this._normalizeEmoji( result );\n\t}\n\n\t/**\n\t * Normalizes the raw data fetched from CDN. By normalization, we meant:\n\t *\n\t *  * Filter out unsupported emoji (these that will not render correctly),\n\t *  * Prepare skin tone variants if an emoji defines them.\n\t */\n\tprivate _normalizeEmoji( data: Array<EmojiCdnResource> ): Array<EmojiEntry> {\n\t\tconst editor = this.editor;\n\t\tconst useCustomFont = editor.config.get( 'emoji.useCustomFont' );\n\t\tconst emojiUtils = editor.plugins.get( 'EmojiUtils' );\n\n\t\tconst insertableEmoji = data.filter( item => emojiUtils.isEmojiCategoryAllowed( item ) );\n\n\t\t// When using a custom font, the feature does not filter any emoji.\n\t\tif ( useCustomFont ) {\n\t\t\treturn insertableEmoji.map( item => emojiUtils.normalizeEmojiSkinTone( item ) );\n\t\t}\n\n\t\tconst emojiSupportedVersionByOs = emojiUtils.getEmojiSupportedVersionByOs();\n\n\t\tconst container = emojiUtils.createEmojiWidthTestingContainer();\n\t\tdocument.body.appendChild( container );\n\n\t\tconst results = insertableEmoji\n\t\t\t.filter( item => emojiUtils.isEmojiSupported( item, emojiSupportedVersionByOs, container ) )\n\t\t\t.map( item => emojiUtils.normalizeEmojiSkinTone( item ) );\n\n\t\tcontainer.remove();\n\n\t\treturn results;\n\t}\n\n\t/**\n\t * Versioned emoji repository.\n\t */\n\tprivate static _results: {\n\t\t[ key in string ]?: Array<EmojiEntry>\n\t} = {};\n}\n\n/**\n * Represents a single group of the emoji category, e.g., \"Smileys & Expressions\".\n */\nexport type EmojiCategory = {\n\n\t/**\n\t * A name of the category.\n\t */\n\ttitle: string;\n\n\t/**\n\t * An example emoji representing items belonging to the category.\n\t */\n\ticon: string;\n\n\t/**\n\t * Group id used to assign {@link #items}.\n\t */\n\tgroupId: number;\n\n\t/**\n\t * An array of emojis.\n\t */\n\titems: Array<EmojiEntry>;\n};\n\n/**\n * Represents a single item fetched from the CDN.\n */\nexport type EmojiCdnResource = {\n\tannotation: string;\n\temoji: string;\n\tgroup: number;\n\torder: number;\n\tversion: number;\n\temoticon?: string;\n\tshortcodes?: Array<string>;\n\tskins?: Array<{\n\t\temoji: string;\n\t\ttone: number;\n\t\tversion: number;\n\t}>;\n\ttags?: Array<string>;\n};\n\n/**\n * Represents a single emoji item used by the Emoji feature.\n */\nexport type EmojiEntry = Omit<EmojiCdnResource, 'skins'> & {\n\tskins: EmojiMap;\n};\n\n/**\n * Represents mapping between a skin tone and its corresponding emoji.\n *\n * The `default` key is always present. Additional values are assigned only if an emoji supports skin tones.\n */\nexport type EmojiMap = { [K in Exclude<EmojiSkinToneId, 'default'>]?: string; } & {\n\tdefault: string;\n};\n\n/**\n * Represents an emoji skin tone variant.\n */\nexport type EmojiSkinTone = {\n\tid: EmojiSkinToneId;\n\ticon: string;\n\ttooltip: string;\n};\n\n/**\n * Unable to load the emoji repository from the URL.\n *\n * If the URL works properly and there is no disruption of communication, please check your\n * {@glink getting-started/setup/csp Content Security Policy (CSP)} setting and make sure\n * the URL connection is allowed by the editor.\n *\n * @error emoji-repository-load-failed\n */\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojimention\n */\n\nimport { logWarning, type LocaleTranslate } from 'ckeditor5/src/utils.js';\nimport { Plugin, type Editor } from 'ckeditor5/src/core.js';\nimport { Typing } from 'ckeditor5/src/typing.js';\nimport type { MentionFeed, MentionFeedObjectItem, MentionItemRenderer } from '@ckeditor/ckeditor5-mention';\n\nimport { EmojiRepository } from './emojirepository.js';\nimport { type EmojiPicker } from './emojipicker.js';\nimport type { EmojiSkinToneId } from './emojiconfig.js';\n\nconst EMOJI_MENTION_MARKER = ':';\nconst EMOJI_SHOW_ALL_OPTION_ID = ':__EMOJI_SHOW_ALL:';\nconst EMOJI_HINT_OPTION_ID = ':__EMOJI_HINT:';\n\n/**\n * The emoji mention plugin.\n *\n * Introduces the autocomplete of emojis while typing.\n */\nexport class EmojiMention extends Plugin {\n\t/**\n\t * An instance of the {@link module:emoji/emojipicker~EmojiPicker} plugin if it is loaded in the editor.\n\t */\n\tdeclare public emojiPickerPlugin: EmojiPicker | null;\n\n\t/**\n\t * An instance of the {@link module:emoji/emojirepository~EmojiRepository} plugin.\n\t */\n\tdeclare public emojiRepositoryPlugin: EmojiRepository;\n\n\t/**\n\t * A flag that informs if the {@link module:emoji/emojirepository~EmojiRepository} plugin is loaded correctly.\n\t */\n\tdeclare private _isEmojiRepositoryAvailable: boolean;\n\n\t/**\n\t * Defines a number of displayed items in the auto complete dropdown.\n\t *\n\t * It includes the \"Show all emoji...\" option if the `EmojiPicker` plugin is loaded.\n\t */\n\tprivate readonly _emojiDropdownLimit: number;\n\n\t/**\n\t * Defines a skin tone that is set in the emoji config.\n\t */\n\tprivate readonly _skinTone: EmojiSkinToneId;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiRepository, Typing, 'Mention' ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiMention' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor: Editor ) {\n\t\tsuper( editor );\n\n\t\tthis.editor.config.define( 'emoji', {\n\t\t\tdropdownLimit: 6\n\t\t} );\n\n\t\tthis._emojiDropdownLimit = editor.config.get( 'emoji.dropdownLimit' )!;\n\t\tthis._skinTone = editor.config.get( 'emoji.skinTone' )!;\n\n\t\tthis._setupMentionConfiguration( editor );\n\t}\n\n\t/**\n\t * Initializes the configuration for emojis in the mention feature.\n\t * If the marker used by emoji mention is already registered, it displays a warning.\n\t * If emoji mention configuration is detected, it does not register it for a second time.\n\t */\n\tprivate _setupMentionConfiguration( editor: Editor ) {\n\t\tconst mergeFieldsPrefix = editor.config.get( 'mergeFields.prefix' )! as string;\n\t\tconst mentionFeedsConfigs = editor.config.get( 'mention.feeds' )! as Array<EmojiMentionFeed>;\n\n\t\tconst isEmojiMarkerUsedByMergeFields = mergeFieldsPrefix ? mergeFieldsPrefix[ 0 ] === EMOJI_MENTION_MARKER : false;\n\t\tconst isEmojiMarkerUsedByMention = mentionFeedsConfigs\n\t\t\t.filter( config => !config._isEmojiMarker )\n\t\t\t.some( config => config.marker === EMOJI_MENTION_MARKER );\n\n\t\tif ( isEmojiMarkerUsedByMention || isEmojiMarkerUsedByMergeFields ) {\n\t\t\t/**\n\t\t\t * The `marker` in the `emoji` config is already used by other plugin configuration.\n\t\t\t *\n\t\t\t * @error emoji-config-marker-already-used\n\t\t\t * @param {string} marker Used marker.\n\t\t\t */\n\t\t\tlogWarning( 'emoji-config-marker-already-used', { marker: EMOJI_MENTION_MARKER } );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmojiConfigDefined = mentionFeedsConfigs.some( config => config._isEmojiMarker );\n\n\t\tif ( isEmojiConfigDefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst emojiMentionFeedConfig = {\n\t\t\t_isEmojiMarker: true,\n\t\t\tmarker: EMOJI_MENTION_MARKER,\n\t\t\tdropdownLimit: this._emojiDropdownLimit,\n\t\t\titemRenderer: this._customItemRendererFactory( this.editor.t ),\n\t\t\tfeed: this._queryEmojiCallbackFactory()\n\t\t};\n\n\t\tthis.editor.config.set( 'mention.feeds', [ ...mentionFeedsConfigs, emojiMentionFeedConfig ] );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic async init(): Promise<void> {\n\t\tconst editor = this.editor;\n\n\t\tthis.emojiPickerPlugin = editor.plugins.has( 'EmojiPicker' ) ? editor.plugins.get( 'EmojiPicker' ) : null;\n\t\tthis.emojiRepositoryPlugin = editor.plugins.get( 'EmojiRepository' );\n\t\tthis._isEmojiRepositoryAvailable = await this.emojiRepositoryPlugin.isReady();\n\n\t\t// Override the `mention` command listener if the emoji repository is ready.\n\t\tif ( this._isEmojiRepositoryAvailable ) {\n\t\t\teditor.once( 'ready', this._overrideMentionExecuteListener.bind( this ) );\n\t\t}\n\t}\n\n\t/**\n\t * Returns the `itemRenderer()` callback for mention config.\n\t */\n\tprivate _customItemRendererFactory( t: LocaleTranslate ): MentionItemRenderer {\n\t\treturn ( item: MentionFeedObjectItem ) => {\n\t\t\tconst itemElement = document.createElement( 'button' );\n\n\t\t\titemElement.classList.add( 'ck' );\n\t\t\titemElement.classList.add( 'ck-button' );\n\t\t\titemElement.classList.add( 'ck-button_with-text' );\n\n\t\t\titemElement.id = `mention-list-item-id${ item.id.slice( 0, -1 ) }`;\n\t\t\titemElement.type = 'button';\n\t\t\titemElement.tabIndex = -1;\n\n\t\t\tconst labelElement = document.createElement( 'span' );\n\n\t\t\tlabelElement.classList.add( 'ck' );\n\t\t\tlabelElement.classList.add( 'ck-button__label' );\n\n\t\t\titemElement.appendChild( labelElement );\n\n\t\t\tif ( item.id === EMOJI_HINT_OPTION_ID ) {\n\t\t\t\titemElement.classList.add( 'ck-list-item-button' );\n\t\t\t\titemElement.classList.add( 'ck-disabled' );\n\t\t\t\tlabelElement.textContent = t( 'Keep on typing to see the emoji.' );\n\t\t\t} else if ( item.id === EMOJI_SHOW_ALL_OPTION_ID ) {\n\t\t\t\tlabelElement.textContent = t( 'Show all emoji...' );\n\t\t\t} else {\n\t\t\t\tlabelElement.textContent = `${ item.text } ${ item.id }`;\n\t\t\t}\n\n\t\t\treturn itemElement;\n\t\t};\n\t}\n\n\t/**\n\t * Overrides the default mention execute listener to insert an emoji as plain text instead.\n\t */\n\tprivate _overrideMentionExecuteListener(): void {\n\t\tconst editor = this.editor;\n\n\t\teditor.commands.get( 'mention' )!.on( 'execute', ( event, data ) => {\n\t\t\tconst eventData = data[ 0 ];\n\n\t\t\t// Ignore non-emoji auto-complete actions.\n\t\t\tif ( eventData.marker !== EMOJI_MENTION_MARKER ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Do not propagate the event.\n\t\t\tevent.stop();\n\n\t\t\t// Do nothing when executing after selecting a hint message.\n\t\t\tif ( eventData.mention.id === EMOJI_HINT_OPTION_ID ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Trigger the picker UI.\n\t\t\tif ( eventData.mention.id === EMOJI_SHOW_ALL_OPTION_ID ) {\n\t\t\t\tconst text = [ ...eventData.range.getItems() ]\n\t\t\t\t\t.filter( item => item.is( '$textProxy' ) )\n\t\t\t\t\t.map( item => item.data )\n\t\t\t\t\t.reduce( ( result, text ) => result + text, '' );\n\n\t\t\t\teditor.model.change( writer => {\n\t\t\t\t\teditor.model.deleteContent( writer.createSelection( eventData.range ) );\n\t\t\t\t} );\n\n\t\t\t\tconst emojiPickerPlugin = this.emojiPickerPlugin!;\n\n\t\t\t\temojiPickerPlugin.showUI( text.slice( 1 ) );\n\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\temojiPickerPlugin.emojiPickerView!.focus();\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// Or insert the emoji to editor.\n\t\t\telse {\n\t\t\t\teditor.execute( 'insertText', {\n\t\t\t\t\ttext: eventData.mention.text,\n\t\t\t\t\trange: eventData.range\n\t\t\t\t} );\n\t\t\t}\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Returns the `feed()` callback for mention config.\n\t */\n\tprivate _queryEmojiCallbackFactory(): ( searchQuery: string ) => Array<MentionFeedObjectItem> {\n\t\treturn ( searchQuery: string ) => {\n\t\t\t// Do not show anything when a query starts with a space.\n\t\t\tif ( searchQuery.startsWith( ' ' ) ) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// Do not show anything when a query starts with a marker character.\n\t\t\tif ( searchQuery.startsWith( EMOJI_MENTION_MARKER ) ) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t// If the repository plugin is not available, return an empty feed to avoid confusion. See: #17842.\n\t\t\tif ( !this._isEmojiRepositoryAvailable ) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tconst emojis: Array<MentionFeedObjectItem> = this.emojiRepositoryPlugin.getEmojiByQuery( searchQuery )\n\t\t\t\t.map( emoji => {\n\t\t\t\t\tlet text = emoji.skins[ this._skinTone ] || emoji.skins.default;\n\n\t\t\t\t\tif ( this.emojiPickerPlugin ) {\n\t\t\t\t\t\ttext = emoji.skins[ this.emojiPickerPlugin.skinTone ] || emoji.skins.default;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: `:${ emoji.annotation }:`,\n\t\t\t\t\t\ttext\n\t\t\t\t\t};\n\t\t\t\t} );\n\n\t\t\tif ( !this.emojiPickerPlugin ) {\n\t\t\t\treturn emojis.slice( 0, this._emojiDropdownLimit );\n\t\t\t}\n\n\t\t\tconst actionItem: MentionFeedObjectItem = {\n\t\t\t\tid: searchQuery.length > 1 ? EMOJI_SHOW_ALL_OPTION_ID : EMOJI_HINT_OPTION_ID\n\t\t\t};\n\n\t\t\treturn [\n\t\t\t\t...emojis.slice( 0, this._emojiDropdownLimit - 1 ),\n\t\t\t\tactionItem\n\t\t\t];\n\t\t};\n\t}\n}\n\ntype EmojiMentionFeed = MentionFeed & {\n\n\t/**\n\t * It's used prevent displaying an emoji mention feed warning when editor plugins are initialized more than once.\n\t */\n\t_isEmojiMarker?: boolean;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojicommand\n */\n\nimport { Command } from 'ckeditor5/src/core.js';\nimport { type EmojiPicker } from './emojipicker.js';\n\n/**\n * Command that shows the emoji user interface.\n */\nexport class EmojiCommand extends Command {\n\t/**\n\t * Updates the command's {@link #isEnabled} based on the current selection.\n\t */\n\tpublic override refresh(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst schema = model.schema;\n\t\tconst selection = model.document.selection;\n\n\t\tthis.isEnabled = schema.checkChild( selection.getFirstPosition()!, '$text' );\n\t}\n\n\t/**\n\t * Opens emoji user interface for the current document selection.\n\t *\n\t * @fires execute\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */\n\tpublic override execute( searchValue: string = '' ): void {\n\t\tconst emojiPickerPlugin: EmojiPicker = this.editor.plugins.get( 'EmojiPicker' );\n\n\t\temojiPickerPlugin.showUI( searchValue );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojigridview\n */\n\nimport { addKeyboardHandlingForGrid, ButtonView, type FilteredView, View, type ViewCollection } from 'ckeditor5/src/ui.js';\nimport { FocusTracker, global, KeystrokeHandler, type Locale } from 'ckeditor5/src/utils.js';\nimport type { EmojiCategory, EmojiEntry } from '../emojirepository.js';\nimport type { EmojiSkinToneId } from '../emojiconfig.js';\n\nimport '../../theme/emojigrid.css';\n\n/**\n * A grid of emoji tiles. It allows browsing emojis and selecting them to be inserted into the content.\n */\nexport class EmojiGridView extends View<HTMLDivElement> implements FilteredView {\n\t/**\n\t * Defines the active category name.\n\t *\n\t * @observable\n\t */\n\tdeclare public categoryName: string;\n\n\t/**\n\t * Active skin tone.\n\t *\n\t * @observable\n\t */\n\tdeclare public skinTone: EmojiSkinToneId;\n\n\t/**\n\t * Set to `true` when the {@link #tiles} collection does not contain items to display.\n\t *\n\t * @observable\n\t */\n\tdeclare public isEmpty: boolean;\n\n\t/**\n\t * A collection of the child tile views. Each tile represents a particular emoji.\n\t */\n\tpublic readonly tiles: ViewCollection<ButtonView>;\n\n\t/**\n\t * Tracks information about the DOM focus in the grid.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * An array containing all emojis grouped by their categories.\n\t */\n\tpublic readonly emojiCategories: Array<EmojiCategory>;\n\n\t/**\n\t * A collection of all already created tile views. Each tile represents a particular emoji.\n\t * The cached tiles collection is used for efficiency purposes to avoid re-creating a particular\n\t * tile again when the grid view has changed.\n\t */\n\tpublic readonly cachedTiles: ViewCollection<ButtonView>;\n\n\t/**\n\t * A callback used to filter grid items by a specified query.\n\t */\n\tprivate readonly _getEmojiByQuery: EmojiSearchQueryCallback;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { categoryName, emojiCategories, getEmojiByQuery, skinTone }: {\n\t\tcategoryName: string;\n\t\temojiCategories: Array<EmojiCategory>;\n\t\tgetEmojiByQuery: EmojiSearchQueryCallback;\n\t\tskinTone: EmojiSkinToneId;\n\t} ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'isEmpty', true );\n\t\tthis.set( 'categoryName', categoryName );\n\t\tthis.set( 'skinTone', skinTone );\n\n\t\tthis.tiles = this.createCollection() as ViewCollection<ButtonView>;\n\t\tthis.cachedTiles = this.createCollection() as ViewCollection<ButtonView>;\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\n\t\tthis._getEmojiByQuery = getEmojiByQuery;\n\t\tthis.emojiCategories = emojiCategories;\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\trole: 'grid',\n\t\t\t\t\t\tclass: [\n\t\t\t\t\t\t\t'ck',\n\t\t\t\t\t\t\t'ck-emoji__grid'\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.tiles\n\t\t\t\t}\n\t\t\t],\n\t\t\tattributes: {\n\t\t\t\trole: 'tabpanel',\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-emoji__tiles',\n\t\t\t\t\t// To avoid issues with focus cycling, ignore a grid when it's empty.\n\t\t\t\t\tbind.if( 'isEmpty', 'ck-hidden', value => value )\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\taddKeyboardHandlingForGrid( {\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tgridItems: this.tiles,\n\t\t\tnumberOfColumns: () => global.window\n\t\t\t\t.getComputedStyle( this.element!.firstChild as Element ) // Responsive `.ck-emoji-grid__tiles`.\n\t\t\t\t.getPropertyValue( 'grid-template-columns' )\n\t\t\t\t.split( ' ' )\n\t\t\t\t.length,\n\t\t\tuiLanguageDirection: this.locale && this.locale.uiLanguageDirection\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.keystrokes.destroy();\n\t\tthis.focusTracker.destroy();\n\t}\n\n\t/**\n\t * Focuses the first focusable in {@link ~EmojiGridView#tiles} if available.\n\t */\n\tpublic focus(): void {\n\t\tconst firstTile = this.tiles.first;\n\n\t\tif ( firstTile ) {\n\t\t\tfirstTile.focus();\n\t\t}\n\t}\n\n\t/**\n\t * Filters the grid view by the given regular expression.\n\t *\n\t * It filters either by the pattern or an emoji category, but never both.\n\t *\n\t * @param pattern Expression to search or `null` when filter by category name.\n\t */\n\tpublic filter( pattern: RegExp | null ): { resultsCount: number; totalItemsCount: number } {\n\t\tconst { matchingItems, allItems } = pattern ? this._getItemsByQuery( pattern.source ) : this._getItemsByCategory();\n\n\t\tthis._updateGrid( matchingItems );\n\t\tthis.set( 'isEmpty', matchingItems.length === 0 );\n\n\t\treturn {\n\t\t\tresultsCount: matchingItems.length,\n\t\t\ttotalItemsCount: allItems.length\n\t\t};\n\t}\n\n\t/**\n\t * Filters emojis to show based on the specified query phrase.\n\t *\n\t * @param query A query used to filter the grid.\n\t */\n\tprivate _getItemsByQuery( query: string ): { matchingItems: Array<EmojiEntry>; allItems: Array<EmojiEntry> } {\n\t\treturn {\n\t\t\tmatchingItems: this._getEmojiByQuery( query ),\n\t\t\tallItems: this.emojiCategories.flatMap( group => group.items )\n\t\t};\n\t}\n\n\t/**\n\t * Returns emojis that belong to the specified category.\n\t */\n\tprivate _getItemsByCategory(): { matchingItems: Array<EmojiEntry>; allItems: Array<EmojiEntry> } {\n\t\tconst emojiCategory = this.emojiCategories.find( item => item.title === this.categoryName )!;\n\t\tconst { items } = emojiCategory;\n\n\t\treturn {\n\t\t\tmatchingItems: items,\n\t\t\tallItems: items\n\t\t};\n\t}\n\n\t/**\n\t * Updates the grid by removing the existing items and insert the new ones.\n\t *\n\t * @param items An array of items to insert.\n\t */\n\tprivate _updateGrid( items: Array<EmojiEntry> ): void {\n\t\t// Clean-up.\n\t\t[ ...this.tiles ].forEach( item => {\n\t\t\tthis.focusTracker.remove( item );\n\t\t\tthis.tiles.remove( item );\n\t\t} );\n\n\t\titems\n\t\t\t// Create tiles from matching results.\n\t\t\t.map( item => {\n\t\t\t\tconst emoji = item.skins[ this.skinTone ] || item.skins.default;\n\n\t\t\t\treturn this.cachedTiles.get( emoji ) || this._createTile( emoji, item.annotation );\n\t\t\t} )\n\t\t\t// Insert new elements.\n\t\t\t.forEach( item => {\n\t\t\t\tthis.tiles.add( item );\n\t\t\t\tthis.focusTracker.add( item );\n\t\t\t} );\n\t}\n\n\t/**\n\t * Creates a new tile for the grid. Created tile is added to the {@link #cachedTiles} collection for further usage, if needed.\n\t *\n\t * @param emoji The emoji itself.\n\t * @param name The name of the emoji (e.g. \"Smiling Face with Smiling Eyes\").\n\t */\n\tprivate _createTile( emoji: string, name: string ): ButtonView {\n\t\tconst tile = new ButtonView( this.locale );\n\n\t\ttile.viewUid = emoji;\n\n\t\ttile.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-emoji__tile'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\ttile.set( {\n\t\t\tlabel: emoji,\n\t\t\ttooltip: name,\n\t\t\twithText: true,\n\t\t\tariaLabel: name,\n\t\t\t// To improve accessibility, disconnect a button and its label connection so that screen\n\t\t\t// readers can read the `[aria-label]` attribute directly from the more descriptive button.\n\t\t\tariaLabelledBy: undefined\n\t\t} );\n\n\t\ttile.on( 'execute', () => {\n\t\t\tthis.fire<EmojiGridViewExecuteEvent>( 'execute', { name, emoji } );\n\t\t} );\n\n\t\tthis.cachedTiles.add( tile );\n\n\t\treturn tile;\n\t}\n}\n\n/**\n * A callback used to filter grid items by a specified query.\n */\nexport type EmojiSearchQueryCallback = ( query: string ) => Array<EmojiEntry>;\n\n/**\n * Fired when any of {@link ~EmojiGridView#tiles grid tiles} is clicked.\n *\n * @eventName ~EmojiGridView#execute\n * @param data Additional information about the event.\n */\nexport type EmojiGridViewExecuteEvent = {\n\tname: 'execute';\n\targs: [ data: EmojiGridViewEventData ];\n};\n\nexport type EmojiGridViewEventData = {\n\n\t/**\n\t * The name of the emoji (e.g. \"Smiling Face with Smiling Eyes\").\n\t */\n\tname: string;\n\n\t/**\n\t * The emoji itself.\n\t */\n\temoji: string;\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojicategoriesview\n */\n\nimport { ButtonView, View, FocusCycler, type ViewCollection } from 'ckeditor5/src/ui.js';\nimport { FocusTracker, KeystrokeHandler, type Locale, type ObservableChangeEvent } from 'ckeditor5/src/utils.js';\nimport type { EmojiCategory } from '../emojirepository.js';\n\nimport '../../theme/emojicategories.css';\n\n/**\n * A class representing the navigation part of the emoji UI.\n * It is responsible allowing the user to select a particular emoji category.\n */\nexport class EmojiCategoriesView extends View {\n\t/**\n\t * Currently selected emoji category name.\n\t */\n\tdeclare public categoryName: string;\n\n\t/**\n\t * Tracks information about the DOM focus in the grid.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Helps cycling over focusable children in the input view.\n\t */\n\tpublic readonly focusCycler: FocusCycler;\n\n\t/**\n\t * A collection of the categories buttons.\n\t */\n\tpublic readonly buttonViews: ViewCollection<ButtonView>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { emojiCategories, categoryName }: { emojiCategories: Array<EmojiCategory>; categoryName: string } ) {\n\t\tsuper( locale );\n\n\t\tthis.buttonViews = this.createCollection(\n\t\t\temojiCategories.map( emojiCategory => this._createCategoryButton( emojiCategory ) )\n\t\t);\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.buttonViews,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\tfocusPrevious: 'arrowleft',\n\t\t\t\tfocusNext: 'arrowright'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-emoji__categories-list' ],\n\t\t\t\trole: 'tablist'\n\t\t\t},\n\t\t\tchildren: this.buttonViews\n\t\t} );\n\n\t\tthis.on<ObservableChangeEvent<string>>( 'change:categoryName', ( event, name, newValue, oldValue ) => {\n\t\t\tconst oldCategoryButton = this.buttonViews.find( button => button.tooltip === oldValue );\n\n\t\t\tif ( oldCategoryButton ) {\n\t\t\t\toldCategoryButton.isOn = false;\n\t\t\t}\n\n\t\t\tconst newCategoryButton = this.buttonViews.find( button => button.tooltip === newValue )!;\n\t\t\tnewCategoryButton.isOn = true;\n\t\t} );\n\n\t\tthis.set( 'categoryName', categoryName );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.buttonViews.forEach( buttonView => {\n\t\t\tthis.focusTracker.add( buttonView );\n\t\t} );\n\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t\tthis.buttonViews.destroy();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.buttonViews.first!.focus();\n\t}\n\n\t/**\n\t * Marks all categories buttons as enabled (clickable).\n\t */\n\tpublic enableCategories(): void {\n\t\tthis.buttonViews.forEach( buttonView => {\n\t\t\tbuttonView.isEnabled = true;\n\t\t} );\n\t}\n\n\t/**\n\t * Marks all categories buttons as disabled (non-clickable).\n\t */\n\tpublic disableCategories(): void {\n\t\tthis.buttonViews.forEach( buttonView => {\n\t\t\tbuttonView.set( {\n\t\t\t\tclass: '',\n\t\t\t\tisEnabled: false,\n\t\t\t\tisOn: false\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * Creates a button representing a category item.\n\t */\n\tprivate _createCategoryButton( emojiCategory: EmojiCategory ): ButtonView {\n\t\tconst buttonView = new ButtonView();\n\t\tconst bind = buttonView.bindTemplate;\n\n\t\t// A `[role=\"tab\"]` element requires also the `[aria-selected]` attribute with its state.\n\t\tbuttonView.extendTemplate( {\n\t\t\tattributes: {\n\t\t\t\t'aria-selected': bind.to( 'isOn', value => value.toString() ),\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-emoji__category-item'\n\t\t\t\t]\n\t\t\t}\n\t\t} );\n\n\t\tbuttonView.set( {\n\t\t\tariaLabel: emojiCategory.title,\n\t\t\tlabel: emojiCategory.icon,\n\t\t\trole: 'tab',\n\t\t\ttooltip: emojiCategory.title,\n\t\t\twithText: true,\n\t\t\t// To improve accessibility, disconnect a button and its label connection so that screen\n\t\t\t// readers can read the `[aria-label]` attribute directly from the more descriptive button.\n\t\t\tariaLabelledBy: undefined\n\t\t} );\n\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.categoryName = emojiCategory.title;\n\t\t} );\n\n\t\tbuttonView.on<ObservableChangeEvent<boolean>>( 'change:isEnabled', () => {\n\t\t\tif ( buttonView.isEnabled && buttonView.tooltip === this.categoryName ) {\n\t\t\t\tbuttonView.isOn = true;\n\t\t\t}\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojisearchview\n */\n\nimport { escapeRegExp } from 'es-toolkit/compat';\nimport { createLabeledInputText, SearchTextView, View, type SearchTextViewSearchEvent, type SearchInfoView } from 'ckeditor5/src/ui.js';\nimport type { Locale } from 'ckeditor5/src/utils.js';\nimport { type EmojiGridView } from './emojigridview.js';\n\n/**\n * A view responsible for providing an input element that allows filtering emoji by the provided query.\n */\nexport class EmojiSearchView extends View {\n\t/**\n\t * The find in text input view that stores the searched string.\n\t */\n\tpublic readonly inputView: SearchTextView;\n\n\t/**\n\t * An instance of the `EmojiGridView`.\n\t */\n\tpublic readonly gridView: EmojiGridView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { gridView, resultsView }: { gridView: EmojiGridView; resultsView: SearchInfoView } ) {\n\t\tsuper( locale );\n\n\t\tthis.gridView = gridView;\n\n\t\tconst t = locale.t;\n\n\t\tthis.inputView = new SearchTextView( this.locale!, {\n\t\t\tqueryView: {\n\t\t\t\tlabel: t( 'Find an emoji (min. 2 characters)' ),\n\t\t\t\tcreator: createLabeledInputText\n\t\t\t},\n\t\t\tfilteredView: this.gridView,\n\t\t\tinfoView: {\n\t\t\t\tinstance: resultsView\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-search'\n\t\t\t\t],\n\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\t\t\tchildren: [\n\t\t\t\tthis.inputView.queryView\n\t\t\t]\n\t\t} );\n\n\t\t// Pass through the `search` event to handle it by a parent view.\n\t\tthis.inputView.delegate( 'search' ).to( this );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.inputView.destroy();\n\t}\n\n\t/**\n\t * Searches the {@link #gridView} for the given query.\n\t *\n\t * @param query The search query string.\n\t */\n\tpublic search( query: string ): void {\n\t\tconst regExp = query ? new RegExp( escapeRegExp( query ), 'ig' ) : null;\n\t\tconst filteringResults = this.gridView.filter( regExp );\n\n\t\tthis.inputView.fire<SearchTextViewSearchEvent>( 'search', { query, ...filteringResults } );\n\t}\n\n\t/**\n\t * Allows defining the default value in the search text field.\n\t *\n\t * @param value The new value.\n\t */\n\tpublic setInputValue( value: string ): void {\n\t\tif ( !value ) {\n\t\t\tthis.inputView.queryView.fieldView.reset();\n\t\t} else {\n\t\t\tthis.inputView.queryView.fieldView.value = value;\n\t\t}\n\t}\n\n\t/**\n\t * Returns an input provided by a user in the search text field.\n\t */\n\tpublic getInputValue(): string {\n\t\treturn this.inputView.queryView.fieldView.element!.value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.inputView.focus();\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojitoneview\n */\n\nimport {\n\tcreateDropdown,\n\taddListToDropdown,\n\tView,\n\tUIModel,\n\ttype ButtonExecuteEvent,\n\ttype DropdownView,\n\ttype ListDropdownItemDefinition\n} from 'ckeditor5/src/ui.js';\nimport { Collection, type Locale } from 'ckeditor5/src/utils.js';\nimport type { EmojiSkinToneId } from '../emojiconfig.js';\nimport type { EmojiSkinTone } from '../emojirepository.js';\n\nimport '../../theme/emojitone.css';\n\n/**\n * A view responsible for selecting a skin tone for an emoji.\n */\nexport class EmojiToneView extends View {\n\t/**\n\t * Active skin tone.\n\t *\n\t * @observable\n\t */\n\tdeclare public skinTone: EmojiSkinToneId;\n\n\t/**\n\t * A dropdown element for selecting an active skin tone.\n\t */\n\tpublic readonly dropdownView: DropdownView;\n\n\t/**\n\t * An array of available skin tones.\n\t */\n\tprivate readonly _skinTones: Array<EmojiSkinTone>;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale: Locale, { skinTone, skinTones }: { skinTone: EmojiSkinToneId; skinTones: Array<EmojiSkinTone> } ) {\n\t\tsuper( locale );\n\n\t\tthis.set( 'skinTone', skinTone );\n\t\tthis._skinTones = skinTones;\n\n\t\tconst t = locale.t;\n\t\tconst accessibleLabel = t( 'Select skin tone' );\n\n\t\tconst dropdownView = createDropdown( locale );\n\t\tconst itemDefinitions: Collection<ListDropdownItemDefinition> = new Collection();\n\n\t\tfor ( const { id, icon, tooltip } of this._skinTones ) {\n\t\t\tconst def: ListDropdownItemDefinition = {\n\t\t\t\ttype: 'button',\n\t\t\t\tmodel: new UIModel( {\n\t\t\t\t\tvalue: id,\n\t\t\t\t\tlabel: icon,\n\t\t\t\t\tariaLabel: tooltip,\n\t\t\t\t\ttooltip,\n\t\t\t\t\ttooltipPosition: 'e',\n\t\t\t\t\trole: 'menuitemradio',\n\t\t\t\t\twithText: true,\n\t\t\t\t\t// To improve accessibility, disconnect a button and its label connection so that screen\n\t\t\t\t\t// readers can read the `[aria-label]` attribute directly from the more descriptive button.\n\t\t\t\t\tariaLabelledBy: undefined\n\t\t\t\t} )\n\t\t\t};\n\n\t\t\tdef.model.bind( 'isOn' ).to( this, 'skinTone', value => value === id );\n\n\t\t\titemDefinitions.add( def );\n\t\t}\n\n\t\taddListToDropdown(\n\t\t\tdropdownView,\n\t\t\titemDefinitions,\n\t\t\t{\n\t\t\t\tariaLabel: accessibleLabel,\n\t\t\t\trole: 'menu'\n\t\t\t}\n\t\t);\n\n\t\tdropdownView.buttonView.set( {\n\t\t\tlabel: this._getSkinTone().icon,\n\t\t\tariaLabel: accessibleLabel,\n\t\t\tariaLabelledBy: undefined,\n\t\t\tisOn: false,\n\t\t\twithText: true,\n\t\t\ttooltip: accessibleLabel\n\t\t} );\n\n\t\tthis.dropdownView = dropdownView;\n\n\t\t// Execute command when an item from the dropdown is selected.\n\t\tthis.listenTo<ButtonExecuteEvent>( dropdownView, 'execute', evt => {\n\t\t\tthis.skinTone = ( evt.source as any ).value;\n\t\t} );\n\n\t\tdropdownView.buttonView.bind( 'label' ).to( this, 'skinTone', () => {\n\t\t\treturn this._getSkinTone().icon;\n\t\t} );\n\n\t\tdropdownView.buttonView.bind( 'ariaLabel' ).to( this, 'skinTone', () => {\n\t\t\t// Render a current state, but also what the dropdown does.\n\t\t\treturn `${ this._getSkinTone().tooltip }, ${ accessibleLabel }`;\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck', 'ck-emoji__skin-tone' ]\n\t\t\t},\n\t\t\tchildren: [ dropdownView ]\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic focus(): void {\n\t\tthis.dropdownView.buttonView.focus();\n\t}\n\n\t/**\n\t * Helper method for receiving an object describing the active skin tone.\n\t */\n\tprivate _getSkinTone(): EmojiSkinTone {\n\t\treturn this._skinTones.find( tone => tone.id === this.skinTone )!;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojipickerview\n */\n\nimport {\n\tFocusCycler,\n\tSearchInfoView,\n\tView,\n\ttype FocusableView,\n\ttype ViewCollection,\n\ttype SearchTextViewSearchEvent\n} from 'ckeditor5/src/ui.js';\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\ttype Locale,\n\ttype ObservableChangeEvent\n} from 'ckeditor5/src/utils.js';\nimport { EmojiGridView, type EmojiSearchQueryCallback } from './emojigridview.js';\nimport { EmojiCategoriesView } from './emojicategoriesview.js';\nimport { EmojiSearchView } from './emojisearchview.js';\nimport { EmojiToneView } from './emojitoneview.js';\nimport type { EmojiSkinToneId } from '../emojiconfig.js';\nimport type { EmojiCategory, EmojiSkinTone } from '../emojirepository.js';\n\n/**\n * A view that glues pieces of the emoji panel together.\n */\nexport class EmojiPickerView extends View<HTMLDivElement> {\n\t/**\n\t * A collection of the focusable children of the view.\n\t */\n\tpublic readonly items: ViewCollection<FocusableView>;\n\n\t/**\n\t * Tracks information about the DOM focus in the view.\n\t */\n\tpublic readonly focusTracker: FocusTracker;\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes: KeystrokeHandler;\n\n\t/**\n\t * Helps cycling over focusable {@link #items} in the view.\n\t */\n\tpublic readonly focusCycler: FocusCycler;\n\n\t/**\n\t * An instance of the `EmojiSearchView`.\n\t */\n\tpublic readonly searchView: EmojiSearchView;\n\n\t/**\n\t * An instance of the `EmojiToneView`.\n\t */\n\tpublic readonly toneView: EmojiToneView;\n\n\t/**\n\t * An instance of the `EmojiCategoriesView`.\n\t */\n\tpublic readonly categoriesView: EmojiCategoriesView;\n\n\t/**\n\t * An instance of the `EmojiGridView`.\n\t */\n\tpublic readonly gridView: EmojiGridView;\n\n\t/**\n\t * An instance of the `EmojiGridView`.\n\t */\n\tpublic readonly infoView: SearchInfoView;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(\n\t\tlocale: Locale,\n\t\t{ emojiCategories, getEmojiByQuery, skinTone, skinTones }: {\n\t\t\temojiCategories: Array<EmojiCategory>;\n\t\t\tgetEmojiByQuery: EmojiSearchQueryCallback;\n\t\t\tskinTone: EmojiSkinToneId;\n\t\t\tskinTones: Array<EmojiSkinTone>;\n\t\t}\n\t) {\n\t\tsuper( locale );\n\n\t\tconst categoryName = emojiCategories[ 0 ].title;\n\n\t\tthis.gridView = new EmojiGridView( locale, {\n\t\t\tcategoryName,\n\t\t\temojiCategories,\n\t\t\tgetEmojiByQuery,\n\t\t\tskinTone\n\t\t} );\n\t\tthis.infoView = new SearchInfoView();\n\t\tthis.searchView = new EmojiSearchView( locale, {\n\t\t\tgridView: this.gridView,\n\t\t\tresultsView: this.infoView\n\t\t} );\n\t\tthis.categoriesView = new EmojiCategoriesView( locale, {\n\t\t\temojiCategories,\n\t\t\tcategoryName\n\t\t} );\n\t\tthis.toneView = new EmojiToneView( locale, {\n\t\t\tskinTone,\n\t\t\tskinTones\n\t\t} );\n\n\t\tthis.items = this.createCollection( [\n\t\t\tthis.searchView,\n\t\t\tthis.toneView,\n\t\t\tthis.categoriesView,\n\t\t\tthis.gridView,\n\t\t\tthis.infoView\n\t\t] );\n\n\t\tthis.focusTracker = new FocusTracker();\n\t\tthis.keystrokes = new KeystrokeHandler();\n\t\tthis.focusCycler = new FocusCycler( {\n\t\t\tfocusables: this.items,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\tfocusPrevious: 'shift + tab',\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.searchView,\n\t\t\t\t\t\tthis.toneView\n\t\t\t\t\t],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck', 'ck-emoji__search' ]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tthis.categoriesView,\n\t\t\t\tthis.gridView,\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\tthis.infoView\n\t\t\t\t\t],\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck', 'ck-search__results' ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tattributes: {\n\t\t\t\ttabindex: '-1',\n\t\t\t\tclass: [ 'ck', 'ck-emoji', 'ck-search' ]\n\t\t\t}\n\t\t} );\n\n\t\tthis._setupEventListeners();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tthis.focusTracker.add( this.searchView.element! );\n\t\tthis.focusTracker.add( this.toneView.element! );\n\t\tthis.focusTracker.add( this.categoriesView.element! );\n\t\tthis.focusTracker.add( this.gridView.element! );\n\t\tthis.focusTracker.add( this.infoView.element! );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the search input.\n\t */\n\tpublic focus(): void {\n\t\tthis.searchView.focus();\n\t}\n\n\t/**\n\t * Initializes interactions between sub-views.\n\t */\n\tprivate _setupEventListeners(): void {\n\t\tconst t = this.locale!.t;\n\n\t\t// Disable the category switcher when filtering by a query.\n\t\tthis.searchView.on<SearchTextViewSearchEvent>( 'search', ( evt, data ) => {\n\t\t\tif ( data.query ) {\n\t\t\t\tthis.categoriesView.disableCategories();\n\t\t\t} else {\n\t\t\t\tthis.categoriesView.enableCategories();\n\t\t\t}\n\t\t} );\n\n\t\t// Show a user-friendly message depending on the search query.\n\t\tthis.searchView.on<SearchTextViewSearchEvent>( 'search', ( evt, data ) => {\n\t\t\tif ( data.query.length === 1 ) {\n\t\t\t\tthis.infoView.set( {\n\t\t\t\t\tprimaryText: t( 'Keep on typing to see the emoji.' ),\n\t\t\t\t\tsecondaryText: t( 'The query must contain at least two characters.' ),\n\t\t\t\t\tisVisible: true\n\t\t\t\t} );\n\t\t\t} else if ( !data.resultsCount ) {\n\t\t\t\tthis.infoView.set( {\n\t\t\t\t\tprimaryText: t( 'No emojis were found matching \"%0\".', data.query ),\n\t\t\t\t\tsecondaryText: t( 'Please try a different phrase or check the spelling.' ),\n\t\t\t\t\tisVisible: true\n\t\t\t\t} );\n\t\t\t} else {\n\t\t\t\tthis.infoView.set( {\n\t\t\t\t\tisVisible: false\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\n\t\t// Emit an update event to react to balloon dimensions changes.\n\t\tthis.searchView.on<SearchTextViewSearchEvent>( 'search', () => {\n\t\t\tthis.fire<EmojiPickerViewUpdateEvent>( 'update' );\n\t\t\tthis.gridView.element!.scrollTo( 0, 0 );\n\t\t} );\n\n\t\t// Update the grid of emojis when the selected category is changed.\n\t\tthis.categoriesView.on<ObservableChangeEvent<string>>( 'change:categoryName', ( ev, args, categoryName ) => {\n\t\t\tthis.gridView.categoryName = categoryName;\n\t\t\tthis.searchView.search( '' );\n\t\t} );\n\n\t\t// Update the grid of emojis when the selected skin tone is changed.\n\t\t// In such a case, the displayed emoji should use an updated skin tone value.\n\t\tthis.toneView.on<ObservableChangeEvent<EmojiSkinToneId>>( 'change:skinTone', ( evt, propertyName, newValue ) => {\n\t\t\tthis.gridView.skinTone = newValue;\n\t\t\tthis.searchView.search( this.searchView.getInputValue() );\n\t\t} );\n\t}\n}\n\n/**\n * Fired when the  {@link module:emoji/ui/emojipickerview~EmojiPickerView} layout is changed, either by filtering emoji tiles or\n * showing a hint to a user regarding the provided query.\n *\n * @eventName ~EmojiPickerView#update\n */\nexport type EmojiPickerViewUpdateEvent = {\n\tname: 'update';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/ui/emojipickerformview\n */\n\nimport {\n\tButtonView,\n\tFocusCycler,\n\tFormHeaderView,\n\tView,\n\tViewCollection,\n\tisFocusable,\n\tisViewWithFocusCycler,\n\ttype FocusableView\n} from 'ckeditor5/src/ui.js';\nimport {\n\tFocusTracker,\n\tKeystrokeHandler,\n\ttype Locale\n} from 'ckeditor5/src/utils.js';\nimport { IconPreviousArrow } from 'ckeditor5/src/icons.js';\n\n// See: https://github.com/ckeditor/ckeditor5/issues/8833\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\nimport '@ckeditor/ckeditor5-ui/theme/components/responsive-form/responsiveform.css';\n// eslint-disable-next-line ckeditor5-rules/ckeditor-imports\nimport '@ckeditor/ckeditor5-ui/theme/components/form/form.css';\n\nimport '../../theme/emojipickerform.css';\n\n/**\n * The emoji picker form view.\n */\nexport class EmojiPickerFormView extends View {\n\t/**\n\t * The Back button view displayed in the header.\n\t */\n\tpublic backButtonView: ButtonView;\n\n\t/**\n\t * Tracks information about DOM focus in the form.\n\t */\n\tpublic readonly focusTracker = new FocusTracker();\n\n\t/**\n\t * An instance of the {@link module:utils/keystrokehandler~KeystrokeHandler}.\n\t */\n\tpublic readonly keystrokes = new KeystrokeHandler();\n\n\t/**\n\t * A collection of child views.\n\t */\n\tpublic readonly children: ViewCollection;\n\n\t/**\n\t * A collection of views that can be focused in the form.\n\t */\n\tprivate readonly _focusables = new ViewCollection<FocusableView>();\n\n\t/**\n\t * Helps cycling over {@link #_focusables} in the form.\n\t */\n\tprivate readonly _focusCycler: FocusCycler;\n\n\t/**\n\t * Creates an instance of the {@link module:emoji/ui/emojipickerformview~EmojiPickerFormView} class.\n\t *\n\t * Also see {@link #render}.\n\t *\n\t * @param locale The localization services instance.\n\t */\n\tconstructor( locale: Locale ) {\n\t\tsuper( locale );\n\n\t\tthis.backButtonView = this._createBackButton();\n\t\tthis.children = this.createCollection( [\n\t\t\tthis._createHeaderView()\n\t\t] );\n\n\t\tthis._focusCycler = new FocusCycler( {\n\t\t\tfocusables: this._focusables,\n\t\t\tfocusTracker: this.focusTracker,\n\t\t\tkeystrokeHandler: this.keystrokes,\n\t\t\tactions: {\n\t\t\t\t// Navigate form fields backward using the Shift + Tab keystroke.\n\t\t\t\tfocusPrevious: 'shift + tab',\n\n\t\t\t\t// Navigate form fields forwards using the Tab key.\n\t\t\t\tfocusNext: 'tab'\n\t\t\t}\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-form',\n\t\t\t\t\t'ck-emoji-picker-form',\n\t\t\t\t\t'ck-responsive-form'\n\t\t\t\t],\n\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-link/issues/90\n\t\t\t\ttabindex: '-1'\n\t\t\t},\n\n\t\t\tchildren: this.children\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override render(): void {\n\t\tsuper.render();\n\n\t\tconst childViews = [\n\t\t\t...this.children.filter( isFocusable ) as Array<FocusableView>,\n\t\t\tthis.backButtonView\n\t\t];\n\n\t\tchildViews.forEach( v => {\n\t\t\t// Register the view as focusable.\n\t\t\tthis._focusables.add( v );\n\n\t\t\t// Register the view in the focus tracker.\n\t\t\tthis.focusTracker.add( v.element! );\n\n\t\t\t// Register the view in the focus cycler to avoid nested focus cycles traps.\n\t\t\tif ( isViewWithFocusCycler( v ) ) {\n\t\t\t\tthis._focusCycler.chain( v.focusCycler );\n\t\t\t}\n\t\t} );\n\n\t\t// Start listening for the keystrokes coming from #element.\n\t\tthis.keystrokes.listenTo( this.element! );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tthis.focusTracker.destroy();\n\t\tthis.keystrokes.destroy();\n\t}\n\n\t/**\n\t * Focuses the fist {@link #_focusables} in the form.\n\t */\n\tpublic focus(): void {\n\t\tthis._focusCycler.focusFirst();\n\t}\n\n\t/**\n\t * Creates a back button view that cancels the form.\n\t */\n\tprivate _createBackButton(): ButtonView {\n\t\tconst t = this.locale!.t;\n\t\tconst backButton = new ButtonView( this.locale );\n\n\t\tbackButton.set( {\n\t\t\tclass: 'ck-button-back',\n\t\t\tlabel: t( 'Back' ),\n\t\t\ticon: IconPreviousArrow,\n\t\t\ttooltip: true\n\t\t} );\n\n\t\tbackButton.delegate( 'execute' ).to( this, 'cancel' );\n\n\t\treturn backButton;\n\t}\n\n\t/**\n\t * Creates a header view for the form.\n\t */\n\tprivate _createHeaderView(): FormHeaderView {\n\t\tconst t = this.locale!.t;\n\n\t\tconst header = new FormHeaderView( this.locale, {\n\t\t\tlabel: t( 'Emoji picker' )\n\t\t} );\n\n\t\theader.children.add( this.backButtonView, 0 );\n\n\t\treturn header;\n\t}\n}\n\n/**\n * Fired when the form view is canceled, for example with a click on {@link ~EmojiPickerFormView#backButtonView}.\n *\n * @eventName ~EmojiPickerFormView#cancel\n */\nexport type EmojiPickerFormViewCancelEvent = {\n\tname: 'cancel';\n\targs: [];\n};\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emojipicker\n */\n\nimport { ButtonView, clickOutsideHandler, ContextualBalloon, Dialog, MenuBarMenuListItemButtonView } from 'ckeditor5/src/ui.js';\nimport type { DomOptimalPositionOptions } from 'ckeditor5/src/utils.js';\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { Typing } from 'ckeditor5/src/typing.js';\nimport { IconEmoji } from 'ckeditor5/src/icons.js';\n\nimport { EmojiCommand } from './emojicommand.js';\nimport { EmojiRepository } from './emojirepository.js';\nimport { EmojiPickerView, type EmojiPickerViewUpdateEvent } from './ui/emojipickerview.js';\nimport { EmojiPickerFormView, type EmojiPickerFormViewCancelEvent } from './ui/emojipickerformview.js';\nimport { type EmojiGridViewExecuteEvent } from './ui/emojigridview.js';\nimport type { EmojiSkinToneId } from './emojiconfig.js';\n\nimport '../theme/emojipicker.css';\n\nconst VISUAL_SELECTION_MARKER_NAME = 'emoji-picker';\n\n/**\n * The emoji picker plugin.\n *\n * Introduces the `'emoji'` dropdown.\n */\nexport class EmojiPicker extends Plugin {\n\t/**\n\t * The actions view displayed inside the balloon.\n\t */\n\tdeclare public emojiPickerView: EmojiPickerView | undefined;\n\n\t/**\n\t * The form view displayed inside the balloon.\n\t */\n\tdeclare public emojiPickerFormView: EmojiPickerFormView | undefined;\n\n\t/**\n\t * The contextual balloon plugin instance.\n\t */\n\tdeclare public balloonPlugin: ContextualBalloon;\n\n\t/**\n\t * An instance of the {@link module:emoji/emojirepository~EmojiRepository} plugin.\n\t */\n\tdeclare public emojiRepositoryPlugin: EmojiRepository;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiRepository, ContextualBalloon, Dialog, Typing ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'EmojiPicker' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic async init(): Promise<void> {\n\t\tconst editor = this.editor;\n\n\t\tthis.balloonPlugin = editor.plugins.get( 'ContextualBalloon' );\n\t\tthis.emojiRepositoryPlugin = editor.plugins.get( 'EmojiRepository' );\n\n\t\t// Skip registering a button in the toolbar and list item in the menu bar if the emoji repository is not ready.\n\t\tif ( !await this.emojiRepositoryPlugin.isReady() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst command = new EmojiCommand( editor );\n\n\t\teditor.commands.add( 'emoji', command );\n\n\t\teditor.ui.componentFactory.add( 'emoji', () => {\n\t\t\tconst button = this._createButton( ButtonView, command );\n\n\t\t\tbutton.set( {\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\treturn button;\n\t\t} );\n\n\t\teditor.ui.componentFactory.add( 'menuBar:emoji', () => {\n\t\t\treturn this._createButton( MenuBarMenuListItemButtonView, command );\n\t\t} );\n\n\t\tthis._setupConversion();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tsuper.destroy();\n\n\t\tif ( this.emojiPickerView ) {\n\t\t\tthis.emojiPickerView.destroy();\n\t\t}\n\t}\n\n\t/**\n\t * Represents an active skin tone. Its value depends on the emoji UI plugin.\n\t *\n\t * Before opening the UI for the first time, the returned value is read from the editor configuration.\n\t * Otherwise, it reflects the user's intention.\n\t */\n\tpublic get skinTone(): EmojiSkinToneId {\n\t\tif ( !this.emojiPickerView ) {\n\t\t\treturn this.editor.config.get( 'emoji.skinTone' )!;\n\t\t}\n\n\t\treturn this.emojiPickerView.gridView.skinTone;\n\t}\n\n\t/**\n\t * Displays the balloon with the emoji picker.\n\t *\n\t * @param [searchValue=''] A default query used to filer the grid when opening the UI.\n\t */\n\tpublic showUI( searchValue: string = '' ): void {\n\t\t// Show visual selection on a text when the contextual balloon is displayed.\n\t\t// See #17654.\n\t\tthis._showFakeVisualSelection();\n\n\t\tif ( !this.emojiPickerView ) {\n\t\t\tthis.emojiPickerView = this._createEmojiPickerView();\n\t\t}\n\n\t\tif ( searchValue ) {\n\t\t\tthis.emojiPickerView.searchView.setInputValue( searchValue );\n\t\t}\n\n\t\tthis.emojiPickerView.searchView.search( searchValue );\n\n\t\tif ( !this.emojiPickerFormView ) {\n\t\t\tthis.emojiPickerFormView = this._createEmojiPickerFormView();\n\t\t}\n\n\t\tif ( !this.balloonPlugin.hasView( this.emojiPickerFormView ) ) {\n\t\t\t// Show back button if there is another balloon view visible.\n\t\t\tthis.emojiPickerFormView!.backButtonView.isVisible = !!this.balloonPlugin.visibleView;\n\n\t\t\tthis.balloonPlugin.add( {\n\t\t\t\tview: this.emojiPickerFormView,\n\t\t\t\tposition: this._getBalloonPositionData(),\n\t\t\t\tballoonClassName: 'ck-emoji-picker-balloon'\n\t\t\t} );\n\t\t}\n\n\t\tthis.emojiPickerView.focus();\n\t}\n\n\t/**\n\t * Creates a button for toolbar and menu bar that will show the emoji dialog.\n\t */\n\tprivate _createButton<T extends typeof ButtonView>( ViewClass: T, command: EmojiCommand ): InstanceType<T> {\n\t\tconst buttonView = new ViewClass( this.editor.locale ) as InstanceType<T>;\n\t\tconst t = this.editor.locale.t;\n\n\t\tbuttonView.bind( 'isEnabled' ).to( command, 'isEnabled' );\n\n\t\tbuttonView.set( {\n\t\t\tlabel: t( 'Emoji' ),\n\t\t\ticon: IconEmoji,\n\t\t\tisToggleable: true\n\t\t} );\n\n\t\tbuttonView.on( 'execute', () => {\n\t\t\tthis.editor.editing.view.scrollToTheSelection();\n\t\t\tthis.showUI();\n\t\t} );\n\n\t\treturn buttonView;\n\t}\n\n\t/**\n\t * Creates an instance of the `EmojiPickerView` class that represents an emoji balloon.\n\t */\n\tprivate _createEmojiPickerView(): EmojiPickerView {\n\t\tconst emojiPickerView = new EmojiPickerView( this.editor.locale, {\n\t\t\temojiCategories: this.emojiRepositoryPlugin.getEmojiCategories(),\n\t\t\tskinTone: this.editor.config.get( 'emoji.skinTone' )!,\n\t\t\tskinTones: this.emojiRepositoryPlugin.getSkinTones(),\n\t\t\tgetEmojiByQuery: ( query: string ) => {\n\t\t\t\treturn this.emojiRepositoryPlugin.getEmojiByQuery( query );\n\t\t\t}\n\t\t} );\n\n\t\t// Insert an emoji on a tile click.\n\t\tthis.listenTo<EmojiGridViewExecuteEvent>( emojiPickerView.gridView, 'execute', ( evt, data ) => {\n\t\t\tconst editor = this.editor;\n\t\t\tconst textToInsert = data.emoji;\n\n\t\t\tthis._hideUI();\n\t\t\teditor.execute( 'insertText', { text: textToInsert } );\n\t\t} );\n\n\t\treturn emojiPickerView;\n\t}\n\n\t/**\n\t * Creates an instance of the `EmojiPickerFormView` class that represents a balloon with the emoji picker.\n\t */\n\tprivate _createEmojiPickerFormView(): EmojiPickerFormView {\n\t\tconst emojiPickerFormView = new EmojiPickerFormView( this.editor.locale );\n\n\t\temojiPickerFormView.children.add( this.emojiPickerView! );\n\n\t\t// Update the balloon position when layout is changed.\n\t\tthis.listenTo<EmojiPickerViewUpdateEvent>( this.emojiPickerView!, 'update', () => {\n\t\t\tif ( this.balloonPlugin.visibleView === emojiPickerFormView ) {\n\t\t\t\tthis.balloonPlugin.updatePosition();\n\t\t\t}\n\t\t} );\n\n\t\t// Close the dialog when the back button is clicked.\n\t\tthis.listenTo<EmojiPickerFormViewCancelEvent>( emojiPickerFormView, 'cancel', () => {\n\t\t\tthis._hideUI();\n\t\t} );\n\n\t\t// Close the panel on `Esc` key press when the **actions have focus**.\n\t\temojiPickerFormView.keystrokes.set( 'Esc', ( data, cancel ) => {\n\t\t\tthis._hideUI();\n\t\t\tcancel();\n\t\t} );\n\n\t\t// Close the dialog when clicking outside of it.\n\t\tclickOutsideHandler( {\n\t\t\temitter: emojiPickerFormView,\n\t\t\tcontextElements: [ this.balloonPlugin.view.element! ],\n\t\t\tcallback: () => {\n\t\t\t\t// Focusing on the editable during a click outside the balloon panel might\n\t\t\t\t// cause the selection to move to the beginning of the editable, so we avoid\n\t\t\t\t// focusing on it during this action.\n\t\t\t\t// See: https://github.com/ckeditor/ckeditor5/issues/18253\n\t\t\t\tthis._hideUI( false );\n\t\t\t},\n\t\t\tactivator: () => this.balloonPlugin.visibleView === emojiPickerFormView\n\t\t} );\n\n\t\treturn emojiPickerFormView;\n\t}\n\n\t/**\n\t * Hides the balloon with the emoji picker.\n\t *\n\t * @param updateFocus Whether to focus the editor after closing the emoji picker.\n\t */\n\tprivate _hideUI( updateFocus: boolean = true ): void {\n\t\tthis.balloonPlugin.remove( this.emojiPickerFormView! );\n\t\tthis.emojiPickerView!.searchView.setInputValue( '' );\n\n\t\tif ( updateFocus ) {\n\t\t\tthis.editor.editing.view.focus();\n\t\t}\n\n\t\tthis._hideFakeVisualSelection();\n\t}\n\n\t/**\n\t * Registers converters.\n\t */\n\tprivate _setupConversion(): void {\n\t\tconst editor = this.editor;\n\n\t\t// Renders a fake visual selection marker on an expanded selection.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToHighlight( {\n\t\t\tmodel: VISUAL_SELECTION_MARKER_NAME,\n\t\t\tview: {\n\t\t\t\tclasses: [ 'ck-fake-emoji-selection' ]\n\t\t\t}\n\t\t} );\n\n\t\t// Renders a fake visual selection marker on a collapsed selection.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t\t\tmodel: VISUAL_SELECTION_MARKER_NAME,\n\t\t\tview: ( data, { writer } ) => {\n\t\t\t\tif ( !data.markerRange.isCollapsed ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst markerElement = writer.createUIElement( 'span' );\n\n\t\t\t\twriter.addClass(\n\t\t\t\t\t[ 'ck-fake-emoji-selection', 'ck-fake-emoji-selection_collapsed' ],\n\t\t\t\t\tmarkerElement\n\t\t\t\t);\n\n\t\t\t\treturn markerElement;\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Returns positioning options for the {@link #balloonPlugin}. They control the way the balloon is attached\n\t * to the target element or selection.\n\t */\n\tprivate _getBalloonPositionData(): Partial<DomOptimalPositionOptions> {\n\t\tconst view = this.editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Set a target position by converting view selection range to DOM.\n\t\tconst target = () => view.domConverter.viewRangeToDom( viewDocument.selection.getFirstRange()! );\n\n\t\treturn {\n\t\t\ttarget\n\t\t};\n\t}\n\n\t/**\n\t * Displays a fake visual selection when the contextual balloon is displayed.\n\t *\n\t * This adds an 'emoji-picker' marker into the document that is rendered as a highlight on selected text fragment.\n\t */\n\tprivate _showFakeVisualSelection(): void {\n\t\tconst model = this.editor.model;\n\n\t\tmodel.change( writer => {\n\t\t\tconst range = model.document.selection.getFirstRange()!;\n\n\t\t\tif ( model.markers.has( VISUAL_SELECTION_MARKER_NAME ) ) {\n\t\t\t\twriter.updateMarker( VISUAL_SELECTION_MARKER_NAME, { range } );\n\t\t\t} else {\n\t\t\t\tif ( range.start.isAtEnd ) {\n\t\t\t\t\tconst startPosition = range.start.getLastMatchingPosition(\n\t\t\t\t\t\t( { item } ) => !model.schema.isContent( item ),\n\t\t\t\t\t\t{ boundaries: range }\n\t\t\t\t\t);\n\n\t\t\t\t\twriter.addMarker( VISUAL_SELECTION_MARKER_NAME, {\n\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\trange: writer.createRange( startPosition, range.end )\n\t\t\t\t\t} );\n\t\t\t\t} else {\n\t\t\t\t\twriter.addMarker( VISUAL_SELECTION_MARKER_NAME, {\n\t\t\t\t\t\tusingOperation: false,\n\t\t\t\t\t\taffectsData: false,\n\t\t\t\t\t\trange\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Hides the fake visual selection.\n\t */\n\tprivate _hideFakeVisualSelection(): void {\n\t\tconst model = this.editor.model;\n\n\t\tif ( model.markers.has( VISUAL_SELECTION_MARKER_NAME ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.removeMarker( VISUAL_SELECTION_MARKER_NAME );\n\t\t\t} );\n\t\t}\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2025, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-licensing-options\n */\n\n/**\n * @module emoji/emoji\n */\n\nimport { Plugin } from 'ckeditor5/src/core.js';\nimport { EmojiMention } from './emojimention.js';\nimport { EmojiPicker } from './emojipicker.js';\n\n/**\n * The emoji plugin.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n *\n * * {@link module:emoji/emojimention~EmojiMention},\n * * {@link module:emoji/emojipicker~EmojiPicker},\n */\nexport class Emoji extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ EmojiMention, EmojiPicker ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Emoji' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static override get isOfficialPlugin(): true {\n\t\treturn true;\n\t}\n}\n"]}